{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.02640. \nYOLOv1 has many shortcomings, which has been improved in later version of YOLO. Link to the paper - https://arxiv.org/abs/1612.08242 https://arxiv.org/abs/1904.04620\n\n\n# Platform: \nWe are using Google Colab for running our code. It provides decent GPU and TPU support.\n\n# Language/Libraries:\nWe are using Python framework - Pytorch  for writing our code. Basic computational and data manipulation libraries are used like NumPy, SciPy, Pandas, Matplotlib, torchvision. It is not advised to go through all these libraries and then start coding. Best apporach is to start coding and understand it parallelly.\n\n# Architecture:\nThis project is using custom CNN architecture. One can use other architectures like ResNet. We are using Resnet50 architecture\n\n# Datasets:\nWe are using Kitti Dataset. You can download it from here: http://www.cvlibs.net/datasets/kitti/. It is an old dataset and might not be the first choice of researchers. But, low computational power constraints us to go for this. One can use other big dataset like COCO, Berkley, ImageNet or Google.\n \n# Feedback:\nFeedback and suggestions are most welcomed !!",
      "https://arxiv.org/abs/1612.08242 https://arxiv.org/abs/1904.04620\n\n\n# Platform: \nWe are using Google Colab for running our code. It provides decent GPU and TPU support.\n\n# Language/Libraries:\nWe are using Python framework - Pytorch  for writing our code. Basic computational and data manipulation libraries are used like NumPy, SciPy, Pandas, Matplotlib, torchvision. It is not advised to go through all these libraries and then start coding. Best apporach is to start coding and understand it parallelly.\n\n# Architecture:\nThis project is using custom CNN architecture. One can use other architectures like ResNet. We are using Resnet50 architecture\n\n# Datasets:\nWe are using Kitti Dataset. You can download it from here: http://www.cvlibs.net/datasets/kitti/. It is an old dataset and might not be the first choice of researchers. But, low computational power constraints us to go for this. One can use other big dataset like COCO, Berkley, ImageNet or Google.\n \n# Feedback:\nFeedback and suggestions are most welcomed !!",
      "https://arxiv.org/abs/1904.04620\n\n\n# Platform: \nWe are using Google Colab for running our code. It provides decent GPU and TPU support.\n\n# Language/Libraries:\nWe are using Python framework - Pytorch  for writing our code. Basic computational and data manipulation libraries are used like NumPy, SciPy, Pandas, Matplotlib, torchvision. It is not advised to go through all these libraries and then start coding. Best apporach is to start coding and understand it parallelly.\n\n# Architecture:\nThis project is using custom CNN architecture. One can use other architectures like ResNet. We are using Resnet50 architecture\n\n# Datasets:\nWe are using Kitti Dataset. You can download it from here: http://www.cvlibs.net/datasets/kitti/. It is an old dataset and might not be the first choice of researchers. But, low computational power constraints us to go for this. One can use other big dataset like COCO, Berkley, ImageNet or Google.\n \n# Feedback:\nFeedback and suggestions are most welcomed !!"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9685170047303103
      ],
      "excerpt": "YOLOv1 has many shortcomings, which has been improved in later version of YOLO. Link to the paper - https://arxiv.org/abs/1612.08242 https://arxiv.org/abs/1904.04620 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JitindraFartiyal/Object-Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-16T16:44:08Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-19T10:57:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9844643052298929,
        0.9492491679335952,
        0.8577271479889553,
        0.9822918803861644
      ],
      "excerpt": "With the advent of Alex Krizhevsky paper in 2012 for ImageNet challenge, the domain of Deep Learning has got much attention needed to it. \nComputer Vision is one of its applications, which we are going to review in this repository. \nComputer Vision is an area which has been developing since many years, but only now, its significance has came into light. Thanks to many researchers research papers specially Alex Krizhevsky and Yaan LeCun and the GPUs and TPUs which has reduced computational time complexity exponentially. \nIn this repository, we will create a program to detect cars in a video for the purpose of self driving cars. There are many algorithms to achieve this task starting from R-CNN, Fast R-CNN, Faster R-CNN, SSD. But,for this we are going to use YOLOv1 algorithm developed in 2016. Link to the paper - https://arxiv.org/abs/1506.02640.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9692982575176836,
        0.9598640729730462,
        0.9323825985019129
      ],
      "excerpt": "We are using Google Colab for running our code. It provides decent GPU and TPU support. \nWe are using Python framework - Pytorch  for writing our code. Basic computational and data manipulation libraries are used like NumPy, SciPy, Pandas, Matplotlib, torchvision. It is not advised to go through all these libraries and then start coding. Best apporach is to start coding and understand it parallelly. \nThis project is using custom CNN architecture. One can use other architectures like ResNet. We are using Resnet50 architecture \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Object Detection for Self Driving Cars using YOLO (You Only Look Once) algorithm",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JitindraFartiyal/Object-Detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 07:55:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JitindraFartiyal/Object-Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "JitindraFartiyal/Object-Detection",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/JitindraFartiyal/Object-Detection/master/Yolov1.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.841421290733348
      ],
      "excerpt": "We are using Python framework - Pytorch  for writing our code. Basic computational and data manipulation libraries are used like NumPy, SciPy, Pandas, Matplotlib, torchvision. It is not advised to go through all these libraries and then start coding. Best apporach is to start coding and understand it parallelly. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/JitindraFartiyal/Object-Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Update:",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Object-Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "JitindraFartiyal",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/JitindraFartiyal/Object-Detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 28 Dec 2021 07:55:31 GMT"
    },
    "technique": "GitHub API"
  }
}