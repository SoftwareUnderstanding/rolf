{
  "citation": [
    {
      "confidence": [
        0.9896973786104383
      ],
      "excerpt": "Based on https://deepmind.com/blog/wavenet-generative-model-raw-audio/ and https://arxiv.org/pdf/1609.03499.pdf. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/basveeling/wavenet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-09-12T11:29:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T18:53:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9465478155196867
      ],
      "excerpt": "EDIT: The pretrained model had to be removed from the repository as it wasn't compatible with recent changes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.954096959638291,
        0.8833352093864953
      ],
      "excerpt": "sample_temperature: None or float. Controls the sampling temperature. 1.0 for the original distribution, < 1.0 for less exploitation, > 1.0 for more exploration. \nseed: int: Controls the seed for the sampling procedure. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8657361249597983
      ],
      "excerpt": "Training is done with: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "  data_dir = 'data' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.883112384530523,
        0.9605900043753912,
        0.9669422455806683,
        0.940556703362697
      ],
      "excerpt": "[ ] Decaying soft targets: the stdev of the gaussian kernel should slowly decay. \nIt's unclear if the model is trained to predict t+1 samples for every input sample, or only for the outputs for which which $t-receptive_field$ was in the input. Right now the code does the latter. \nThere is no mention of weight decay, batch normalization in the paper. Perhaps this is not needed given enough data? \nThe Wavenet model is quite expensive to train and sample from. We can however trade computation cost with accuracy and fidility by lowering the sampling rate, amount of stacks and the amount of channels per layer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Keras WaveNet implementation",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "http://sacred.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/basveeling/wavenet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 223,
      "date": "Tue, 28 Dec 2021 19:04:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/basveeling/wavenet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "basveeling/wavenet",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/basveeling/wavenet/master/vctk/download_vctk.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Activate a new python2 virtualenv (recommended):\n```bash\npip install virtualenv\nmkdir ~/virtualenvs && cd ~/virtualenvs\nvirtualenv wavenet\nsource wavenet/bin/activate\n```\nClone and install requirements.\n```bash\ncd ~\ngit clone https://github.com/basveeling/wavenet.git\ncd wavenet\npip install -r requirements.txt\n```\n\nUsing the tensorflow backend is not recommended at this time, see [this issue](https://github.com/basveeling/wavenet/issues/7)\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8225935212049887
      ],
      "excerpt": "$ KERAS_BACKEND=theano python2 wavenet.py predict with models/run_20160920_120916/config.json predict_seconds=1~~ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8352357502782369
      ],
      "excerpt": "Once the first model checkpoint is created, you can start sampling. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8418676624792922,
        0.8029694889494027
      ],
      "excerpt": "The latest model checkpoint will be retrieved and used to sample. The sample will be streamed to [run_folder]/samples, you can start listening when the first sample is generated. \npredict_seconds: float. Number of seconds to sample. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639484533561375
      ],
      "excerpt": "predict_initial_input: string: Path to a wav file, for which the first fragment_length samples are used as initial input. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8225935212049887
      ],
      "excerpt": "$ KERAS_BACKEND=theano python2 wavenet.py predict with models/[run_folder]/config.json predict_seconds=1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8329025762453691
      ],
      "excerpt": "In order to use the VCTK dataset, first download the dataset by running vctk/download_vctk.sh. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8117563807504802
      ],
      "excerpt": "$ KERAS_BACKEND=theano python2 wavenet.py with 'option=value' 'option2=value' \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "  learn_all_outputs = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "  randomize_batch_order = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "  train_only_in_receptive_field = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984,
        0.8594142235991984
      ],
      "excerpt": "  use_skip_connections = True \n  use_ulaw = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    nesterov = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8505603982434533
      ],
      "excerpt": "Create a new data directory with a train and test folder in it. All wave files in these folders will be used as data. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/basveeling/wavenet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "WaveNet implementation in Keras",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "wavenet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "basveeling",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/basveeling/wavenet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [Sacred](https://github.com/IDSIA/sacred) is used for managing training and sampling. Take a look at the [documentation](http://sacred.readthedocs.io/en/latest/) for more information.\n\n- This implementation does not support python3 as of now.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1046,
      "date": "Tue, 28 Dec 2021 19:04:16 GMT"
    },
    "technique": "GitHub API"
  }
}