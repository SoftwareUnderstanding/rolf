{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2104.11222 (2021).\n\n# Feature requests\n- [ ] Unconditional GAN support\n- [ ] Tool for generating time-lapse video from the log images\n- [ ] Integrating fid-metric computation as a training-logging\n\n# Thanks\nAs always, <br>\nplease feel free to open PRs/issues/suggestions here. \nHope this work is useful in your project :smile:. \n\ncheers :beers:! <br>\n@akanimax :sunglasses:"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    1. Tero Karras, Timo Aila, Samuli Laine, & Jaakko Lehtinen (2018). \n    Progressive Growing of GANs for Improved Quality, Stability, and Variation. \n    In International Conference on Learning Representations.\n\n    2. Parmar, Gaurav, Richard Zhang, and Jun-Yan Zhu. \n    \"On Buggy Resizing Libraries and Surprising Subtleties in FID Calculation.\" \n    arXiv preprint arXiv:2104.11222 (2021).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8464837965670153
      ],
      "excerpt": "    (pro_gan_pth_env)(your-machine):~$ source &lt;env-store-path&gt;/pro_gan_pth_env/bin/activate \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9581919815799831
      ],
      "excerpt": "    (your-machine):~$ progan_train --help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9581919815799831
      ],
      "excerpt": "(your-machine):~$ progan_lsid --help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9581919815799831
      ],
      "excerpt": "(your-machine):~$ progan_fid --help \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9527713590180511
      ],
      "excerpt": "Also, please feel free to open PRs for the following table if you end up training  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9302785107180478
      ],
      "excerpt": "Parmar et. al. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172503017954704
      ],
      "excerpt": "please feel free to open PRs/issues/suggestions here.  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/akanimax/pro_gan_pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-07-02T09:14:36Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T19:45:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9763388753082299
      ],
      "excerpt": "Unofficial PyTorch implementation of Paper titled \"Progressive growing of GANs for improved  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9358242024566147
      ],
      "excerpt": "For the official TensorFlow code, please refer to  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9318974169056645
      ],
      "excerpt": "1. Easiest way is to create a new virtual-env  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "progan_train, progan_lsid and progan_fid. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9692163012384492
      ],
      "excerpt": "                        number of channels of in the image data (default: 3) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9234149744169077
      ],
      "excerpt": "                        latent size of the generator and the discriminator (default: 512) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8173513076288993
      ],
      "excerpt": "                        number of samples used for fixed seed gan feedback (default: 4) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9739796772291337
      ],
      "excerpt": "                        smoothness of walking in the latent-space. High values corresponds to more smoothing. (default: 0.75) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452335411448805
      ],
      "excerpt": "need the pg.networks.Generator. Please refer to the scripts for the tools as  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8806319285091571,
        0.9394381418372356,
        0.9069908507071924,
        0.9622063808752849
      ],
      "excerpt": "For more advanced use-cases in your project, or if you'd like to contribute new \nfeatures to this project, the following steps would help you get this project setup  \nfor developing. There are no standard set of rules for contributing here  \n(no CONTRIBUTING.md) but let's try to maintain the overall ethos of the  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8413049367445911
      ],
      "excerpt": "pushing gifs and other large binary assets to git back then.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9786365038792498
      ],
      "excerpt": "Now open the project in the editor of your choice, and you are good to go.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "this_link for  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153417124060155,
        0.9858087183508197,
        0.9150373541392225,
        0.9125990986558173
      ],
      "excerpt": "There is no fancy CI, or automated testing, or docs building since this is a  \nfairly tiny project. But we are open to considering these tools if more features \nkeep getting added to this project. \nWe will be training models using this package on different datasets over the time. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9577274381295112
      ],
      "excerpt": "Hope this work is useful in your project :smile:.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Unofficial PyTorch implementation of the paper titled \"Progressive growing of GANs for improved Quality, Stability, and Variation\"",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://black.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/akanimax/pro_gan_pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 90,
      "date": "Mon, 27 Dec 2021 10:03:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/akanimax/pro_gan_pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "akanimax/pro_gan_pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The training timelapse created from the images logged during the training \nlooks really cool. \n<p align=\"center\">\n<img align=\"center\" src =\"https://github.com/akanimax/pro_gan_pytorch/blob/master/samples/celebA-HQ.gif\"\n     height=80% width=80%/>\n</p>\n<br>\n\nCheckout this [YT video](https://www.youtube.com/watch?v=lzTm6Lq76Mo) for a \n4K version :smile:.\n\nIf interested please feel free to check out this \n[medium blog]( https://medium.com/@animeshsk3/the-unprecedented-effectiveness-of-progressive-growing-of-gans-37475c88afa3)\nI wrote explaining the progressive growing technique.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9351675714703094,
        0.8992022213126143,
        0.8837680365796365,
        0.9728058499786909
      ],
      "excerpt": "Requirements (aka. we tested for): \n1. Ubuntu 20.04.3 or above \n2. Python 3.8.3 \n3. Nvidia GPU GeForce 1080 Ti or above min GPU-mem 8GB \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9662269145862277,
        0.9682900610755685
      ],
      "excerpt": "5. Nvidia cuda 11.3 | can be skipped since  pytorch ships with cuda, cudnn etc. \nInstalling the package \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9204643869190361,
        0.831786228871641
      ],
      "excerpt": "so that your global python env doesn't get corrupted \n2. Create and switch to your new virtual environment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.852774440290468,
        0.9804476845644918,
        0.9072774455229043,
        0.9626881776689096
      ],
      "excerpt": "    (pro_gan_pth_env)(your-machine):~$ source &lt;env-store-path&gt;/pro_gan_pth_env/bin/activate \n3. Install the pro-gan-pth package from pypi, if you meet  \nall the above dependencies \n(pro_gan_pth_env)(your-machine):~$ pip install pro-gan-pth   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8243864019352207
      ],
      "excerpt": "single GPU. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8712262092637474
      ],
      "excerpt": "  dataset_path          path to the directory containing the images from the dataset. Note that this needs to be a flat directory \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8170726932982499
      ],
      "excerpt": "                        path to the directory where the generated images are to be written. Uses a temporary directory by default. Provide this path if you'd like to see the generated images yourself \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8194884606237202,
        0.9594762135641246
      ],
      "excerpt": "(your-machine):~$ cd &lt;path to project&gt; \n    (your-machine):&lt;path to project&gt;$ git clone https://github.com/akanimax/pro_gan_pytorch.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8821592323436692,
        0.9384430614697005,
        0.920361744082168,
        0.9908434760161843,
        0.9562355338734088
      ],
      "excerpt": "    (your-machine):&lt;path to project&gt;$ source pro-gan-pth-dev-env/source/activate \nInstall the package in development mode: \n(pro-gan-pth-dev-env)(your-machine):&lt;path to project&gt;$ pip install -e . \nAlso install the dev requirements: \n(pro-gan-pth-dev-env)(your-machine):&lt;path to project&gt;$ pip install -r requirements-dev.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8564477878328419
      ],
      "excerpt": "models for your own datasets. If you are contributing, then please setup  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9577255595678702
      ],
      "excerpt": "Note that we compute the FID using the clean_fid version from  \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9147640463684085
      ],
      "excerpt": "    usage: Train Progressively grown GAN [-h] [--rec_dir REC_DIR] [--flip_horizontal FLIP_HORIZONTAL] [--depth DEPTH] [--num_channels NUM_CHANNELS] [--latent_size LATENT_SIZE] [--use_eql USE_EQL] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8395622104241142
      ],
      "excerpt": "  train_path            Path to the images folder for training the ProGAN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8709262429191627
      ],
      "excerpt": "  --rec_dir REC_DIR     whether images stored under one folder or has a recursive dir structure (default: True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8200452131968822,
        0.8310350611530357
      ],
      "excerpt": "                        whether to apply mirror augmentation (default: True) \n  --depth DEPTH         depth of the generator and the discriminator (default: 10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8168953363011175
      ],
      "excerpt": "                        number of epochs over the training dataset per stage (default: [42, 42, 42, 42, 42, 42, 42, 42, 42]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8422450110527466
      ],
      "excerpt": "                        number of feedback logs written per epoch (default: 10) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8168244409270381
      ],
      "excerpt": "usage: ProGAN latent-space walk demo video creation tool [-h] [--output_path OUTPUT_PATH] [--generation_depth GENERATION_DEPTH] [--time TIME] [--fps FPS] [--smoothing SMOOTHING] model_path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.857252776726086
      ],
      "excerpt": "  model_path            path to the trained_model.bin file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8085903864467596
      ],
      "excerpt": "usage: ProGAN fid_score computation tool [-h] [--generated_images_path GENERATED_IMAGES_PATH] [--batch_size BATCH_SIZE] [--num_generated_images NUM_GENERATED_IMAGES] model_path dataset_path \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.857252776726086
      ],
      "excerpt": "  model_path            path to the trained_model.bin file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012248701992861
      ],
      "excerpt": "import pro_gan_pytorch as pg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800788687555635
      ],
      "excerpt": "| Courtesy | Dataset        | Size  |Resolution  | GPUs used   | #Epochs per stage | Training time | FID score        | Link            | Qualitative samples |  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/akanimax/pro_gan_pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pro_gan_pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pro_gan_pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "akanimax",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/akanimax/pro_gan_pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "akanimax",
        "body": "# Release v_1.2.0:\r\n<b>New features: </b> <br>\r\n1. Support for other loss functions: \"LSGAN\", \"LSGAN-WITH-SIGMOID\" along with \"WGAN\" and \"WGAN-GP\". <br>\r\n2. MinibatchStd layer numerically stablized. <br>\r\n3. Loss interface can be extended to create your own loss. <br>\r\n\r\n## Todo for next release\r\n1. Add support for Relativistic GAN loss, Sliced Wasserstein loss. <br>\r\n\r\n## Todo for a future release\r\n1. Add samples\r\n2. support for Conditional GAN ",
        "dateCreated": "2018-07-17T07:21:43Z",
        "datePublished": "2018-07-17T07:29:14Z",
        "html_url": "https://github.com/akanimax/pro_gan_pytorch/releases/tag/v_1.2.0",
        "name": "v_1.2.0",
        "tag_name": "v_1.2.0",
        "tarball_url": "https://api.github.com/repos/akanimax/pro_gan_pytorch/tarball/v_1.2.0",
        "url": "https://api.github.com/repos/akanimax/pro_gan_pytorch/releases/11959406",
        "zipball_url": "https://api.github.com/repos/akanimax/pro_gan_pytorch/zipball/v_1.2.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 469,
      "date": "Mon, 27 Dec 2021 10:03:03 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "gan",
      "pytorch",
      "convolutional-neural-network",
      "adversarial-machine-learning",
      "progressive-growing-of-gans"
    ],
    "technique": "GitHub API"
  }
}