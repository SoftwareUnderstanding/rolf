{
  "citation": [
    {
      "confidence": [
        0.955282076251007
      ],
      "excerpt": "Contributors: Atman Patel, Mudit Jain, Taruj Goyal, and Harshita Krishna (Team: sCVngers) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tarujg/domain-adapt",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-11-21T22:14:58Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-17T14:36:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9740942301463977
      ],
      "excerpt": "Autonomous driving is an open ongoing research topic, which has seen a tremendous rise over the last few years. We explore semantic segmentation of the cityscape dataset with additional data augmented using domain adaptation with the help of CycleGANs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This repository consists of the experiments on Cross-Domain Semantic Segmentation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tarujg/domain-adapt/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:20:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tarujg/domain-adapt/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "tarujg/domain-adapt",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/tarujg/domain-adapt/master/Demo.ipynb",
      "https://raw.githubusercontent.com/tarujg/domain-adapt/master/.ipynb_checkpoints/Demo-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/tarujg/domain-adapt/master/OCNet/scripts/run_resnet101_baseline.sh",
      "https://raw.githubusercontent.com/tarujg/domain-adapt/master/OCNet/scripts/inplace_abn_03/modules/build.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "\u2502\u00a0\u00a0     \u251c\u2500\u2500 run_resnet101_baseline.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 data_loader.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cycle_gan.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8476087568648806
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 params.yaml \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.9336801098518991,
        0.9586232994076559
      ],
      "excerpt": "\u2502\u00a0\u00a0     \u251c\u2500\u2500 test_cycle_gan.py \n\u2502\u00a0\u00a0     \u251c\u2500\u2500 train_cycle_gan.py \n\u2502\u00a0\u00a0     \u2514\u2500\u2500 utils.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8289669050403863
      ],
      "excerpt": "\u2502\u00a0\u00a0 \u251c\u2500\u2500 output \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8808034001556608,
        0.9336801098518991
      ],
      "excerpt": "\u2502\u00a0\u00a0     \u251c\u2500\u2500 eval.py \n\u2502\u00a0\u00a0     \u251c\u2500\u2500 generate_submit.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.950563948951535,
        0.8924976426181745
      ],
      "excerpt": "\u2502\u00a0\u00a0     \u251c\u2500\u2500 train.py \n\u2502\u00a0\u00a0     \u2514\u2500\u2500 utils \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/tarujg/domain-adapt/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Cuda",
      "C++",
      "Shell",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\r\\n\\r\\nCopyright (c) 2017, mapillary\\r\\nAll rights reserved.\\r\\n\\r\\nRedistribution and use in source and binary forms, with or without\\r\\nmodification, are permitted provided that the following conditions are met:\\r\\n\\r\\n Redistributions of source code must retain the above copyright notice, this\\r\\n  list of conditions and the following disclaimer.\\r\\n\\r\\n Redistributions in binary form must reproduce the above copyright notice,\\r\\n  this list of conditions and the following disclaimer in the documentation\\r\\n  and/or other materials provided with the distribution.\\r\\n\\r\\n* Neither the name of the copyright holder nor the names of its\\r\\n  contributors may be used to endorse or promote products derived from\\r\\n  this software without specific prior written permission.\\r\\n\\r\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\r\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\r\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\r\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\r\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\r\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\r\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\r\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\r\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\r\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\r\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Data Augmentation using Domain Adaptation of Synthetic Data for Semantic Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "domain-adapt",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "tarujg",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/tarujg/domain-adapt/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": " - Python 3.6+\n - Git\n - PyTorch 0.4.1\n- Linux (tested on Ubuntu 18.04)\n- NVIDIA GPU is strongly recommended\n- [CUDA](https://developer.nvidia.com/cuda-downloads) and [cuDNN](https://developer.nvidia.com/cudnn)\n - Conda\n - Docker 19.03\n\nTo clone the repository\n``` bash\n$ git clone https://github.com/tarujg/domain-adapt.git\n```\n ``` bash\n$ pip install -r requirements.txt\n```\n\n - NVIDIA Docker Setup (Ubuntu 16.04/18.04, Debian Jessie/Stretch/Buster)(https://hub.docker.com/r/rainbowsecret/pytorch04/tags/)\n#### Add the package repositories\n``` bash\n$ distribution=$(. /etc/os-release;echo $ID$VERSION_ID)\n$ curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\n$ curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\n\n$ sudo apt-get update && sudo apt-get install -y nvidia-container-toolkit\n$ sudo systemctl restart docker\n```\n\n#### Running Demo\n1. Download cityspaces data to OCNet/data/data\n2. Download trained model from [link](https://drive.google.com/open?id=1Kwk6yLK57ZbRk90fTwg9o1MH0Par1-v8i) to OCNet/output/checkpoint\n3. Update the file OCNet/data/dataset/list/cityscapes/demo.lst as per your requirement.\n4. Right now the OCNet/scripts/run_resnet101_baseline.sh is modified for testing purposes. NOTE : Same can be used for training after updating the paths and uncommenting the code\n5. Run OCNet/scripts/run_resnet101_baseline.sh from domain_adapt directory\n6. The semantic segmented outputs are generated in OCNet/output/visualize\n7. Run the jupyter notebook from domain_adapt directory\n8. The outputs for the GAN are generated in CycleGAN/data/my_saved_images\n\n---\n## Datasets\nWe are currently using [Cityscapes](https://www.cityscapes-dataset.com/), GTA2Cityscapes and [GTA5](https://download.visinf.tu-darmstadt.de/data/from_games/) dataset for our project.\n\n| Cityscapes | GTA5 | GTA2Cityscapes\n|:------:|:------:|:------:|\n|[link](https://www.cityscapes-dataset.com/)|[link](https://download.visinf.tu-darmstadt.de/data/from_games/)|[link](http://efrosgans.eecs.berkeley.edu/cyclegta/cityscapes2gta.zip)\n\n#### References and used code sources\n- [InplaceABN](https://github.com/mapillary/inplace_abn)\n- [Non-local_pytorch](https://github.com/AlexHex7/Non-local_pytorch).\n- [Pytorch-Deeplab](https://github.com/speedinghzl/Pytorch-Deeplab)\n- [PyTorch-Encoding](https://github.com/zhanghang1989/PyTorch-Encoding)\n- [semantic-segmentation-pytorch](https://github.com/CSAILVision/semantic-segmentation-pytorch)\n```\nCitations:\n\n1. Yuhui Yuan, Jingdong Wang and Microsoft Research. \u201cOCNet: Object Context Network for Scene Parsing\u201d. In: 2018\nhttps://arxiv.org/pdf/1809.00916.pdf\n\n2. Zhu, Jun-Yan, Taesung Park, Phillip Isola, and Alexei A. Efros. \"Unpaired image-to-image translation using cycle-consistent adversarial networks.\" In Proceedings of the IEEE international conference on computer vision, pp. 2223-2232. 2017.\nhttps://arxiv.org/pdf/1703.10593.pdf\n\n```\n\n#### Please contact us if you have any questions.\n- Atman Patel at <a2patel@ucsd.edu>\n- Taruj Goyal at <tgoyal@ucsd.edu>\n- Mudit Jain at <mujain@ucsd.edu>\n- Harshita Krishna at <h1krishn@ucsd.edu>\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 15:20:36 GMT"
    },
    "technique": "GitHub API"
  }
}