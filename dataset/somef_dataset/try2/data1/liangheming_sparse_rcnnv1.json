{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2011.12450",
      "https://arxiv.org/abs/2011.12450"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[original official implement](https://github.com/PeizeSun/SparseR-CNN) based on detectron2 and DETR\n```text\n@article{peize2020sparse,\n  title   =  {{SparseR-CNN}: End-to-End Object Detection with Learnable Proposals},\n  author  =  {Peize Sun and Rufeng Zhang and Yi Jiang and Tao Kong and Chenfeng Xu and Wei Zhan and Masayoshi Tomizuka and Lei Li and Zehuan Yuan and Changhu Wang and Ping Luo},\n  journal =  {arXiv preprint arXiv:2011.12450},\n  year    =  {2020}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{peize2020sparse,\n  title   =  {{SparseR-CNN}: End-to-End Object Detection with Learnable Proposals},\n  author  =  {Peize Sun and Rufeng Zhang and Yi Jiang and Tao Kong and Chenfeng Xu and Wei Zhan and Masayoshi Tomizuka and Lei Li and Zehuan Yuan and Changhu Wang and Ping Luo},\n  journal =  {arXiv preprint arXiv:2011.12450},\n  year    =  {2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.999773009891497
      ],
      "excerpt": "This is an unofficial pytorch implementation of SparseRCNN object detection as described in Sparse R-CNN: End-to-End Object Detection with Learnable Proposals by Peize Sun, Rufeng Zhang, Yi Jiang, Tao Kong, Chenfeng Xu, Wei Zhan, Masayoshi Tomizuka, Lei Li, Zehuan Yuan, Changhu Wang, Ping Luo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8665716475375693
      ],
      "excerpt": "if __name__ == '__main__': \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liangheming/sparse_rcnnv1",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-27T10:34:52Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-05T22:09:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9366290941610871,
        0.9456331866367312,
        0.893447620927531,
        0.9190720916570594
      ],
      "excerpt": "This is an unofficial pytorch implementation of SparseRCNN object detection as described in Sparse R-CNN: End-to-End Object Detection with Learnable Proposals by Peize Sun, Rufeng Zhang, Yi Jiang, Tao Kong, Chenfeng Xu, Wei Zhan, Masayoshi Tomizuka, Lei Li, Zehuan Yuan, Changhu Wang, Ping Luo \nwe trained this repo on 4 GPUs with batch size 16(4 image per node).the total epoch is 36(3x),AdamW with cosine lr decay is used for optimizing. \nfinally, this repo achieves 38.9 mAp at 640px(max side) resolution with resnet50 backbone.(about 30.95fps) \nattention : there is a large mismatch between the official mAP(pycocotools) calculation and the mAP calculation in this repo. you don't need to pay too much attention to mAP in training log \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9033625659969785,
        0.8866131850734029
      ],
      "excerpt": "the main difference is about the input resolution.the original implement use min_thresh and max_thresh to keep the short \nside of the input image larger than min_thresh while keep the long side smaller than max_thresh.for simplicity we fix the long \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8609245199271897
      ],
      "excerpt": "width and height of the input are same. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8979411005071259,
        0.8979411005071259
      ],
      "excerpt": "  train_img_root: data/train2017 \n  #:  train_img_root: data/val2017 \n  val_img_root: data/val2017 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Sparse R-CNN 38.9 mAP, 640px(max side), 30.95fps(RTX 2080TI) ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liangheming/sparse_rcnnv1/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 16:56:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liangheming/sparse_rcnnv1/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "liangheming/sparse_rcnnv1",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8638927271724889
      ],
      "excerpt": "    processor = DDPMixSolver(cfg_path=\"your own config path\")  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8199034976575496
      ],
      "excerpt": "* run train scriptsshell script \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8024269194255869
      ],
      "excerpt": " Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.417 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.904222154379689
      ],
      "excerpt": "modify main.py (modify config file path) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8327678938541677
      ],
      "excerpt": "from solver.ddp_mix_solver import DDPMixSolver \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008331685760428
      ],
      "excerpt": "    processor.run() \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8351051954308356,
        0.8351051954308356,
        0.8351051954308356
      ],
      "excerpt": "  train_annotation_path: data/annotations/instances_train2017.json \n  #:  train_annotation_path: data/annotations/instances_val2017.json \n  val_annotation_path: data/annotations/instances_val2017.json \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8869264826052469
      ],
      "excerpt": "  pretrained: True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8828665034782968
      ],
      "excerpt": "  warm_up_factor: 0.01 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8798339128901814,
        0.8777806747103647
      ],
      "excerpt": "* run train scriptsshell script \nnohup python -m torch.distributed.launch --nproc_per_node=4 main.py >>train.log 2>&1 & \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.841509142686728,
        0.8413277612300244
      ],
      "excerpt": "[ ] VOC data train\\test scripts \n[ ] custom data train\\test scripts \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liangheming/sparse_rcnnv1/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SparseRCNN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "sparse_rcnnv1",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "liangheming",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liangheming/sparse_rcnnv1/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```text\ntqdm\npyyaml\nnumpy\nopencv-python\npycocotools\ntorch >= 1.5\ntorchvision >=0.6.0\n```\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Wed, 29 Dec 2021 16:56:56 GMT"
    },
    "technique": "GitHub API"
  }
}