{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1904.01569"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9593299683604384,
        0.9218387569487573
      ],
      "excerpt": "CIFAR-10 | ResNet110 (Paper) | 1.7M | 93.57% | 300 \nCIFAR-10 | RandWire (my_small_regime) | 1.2M | 93.64% | 60 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "Cifar 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8065945111357091
      ],
      "excerpt": "- --channel_count (int) - channel count of randwire network. please refer to the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8109194328925066
      ],
      "excerpt": "                              args.graph_model, args.graph_param, args.checkpoint_dir + '/' + 'graphs', False, training) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  #:                             args.graph_model, args.graph_param, args.checkpoint_dir + '/' + 'graphs', False, \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/plemeri/RandWire_tensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-11T06:34:23Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-04T20:19:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9278424808881516
      ],
      "excerpt": "tensorflow implementation of Exploring Randomly Wired Neural Networks for Image Recognition using Cifar10, MNIST \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474524807902011
      ],
      "excerpt": "Datasets | Model | Parameters | Accuracy | Epoch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9538934950290504
      ],
      "excerpt": "The number of parameters used for cifar10 model is aboud 1.2M, which is similar result on ResNet-110 (6.43 %) which used 1.7M parameters. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.888699582722719
      ],
      "excerpt": "- --channel_count (int) - channel count of randwire network. please refer to the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958164881217638,
        0.8841046468695618
      ],
      "excerpt": "- --val_set_size (int) - number of validating data. I used test data for validation, so there are 10000 data. \n- --batch_size (int) - size of mini batch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800670369585188
      ],
      "excerpt": "- --class_num (int) - the number of classes \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8390842046005036
      ],
      "excerpt": "Learning rate decreases by multiplying 0.1 in 50% and 75% of entire training step. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "tensorflow implementation of Exploring Randomly Wired Neural Networks for Image Recognition",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/swdsld/RandWire_tensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Sat, 25 Dec 2021 03:25:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/plemeri/RandWire_tensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "plemeri/RandWire_tensorflow",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8204499558608317
      ],
      "excerpt": "(19.04.16 added) I trained on Cifar100 dataset and get 74.49% accuracy on test set. You can download pretrained network from same link above. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8579002209330613,
        0.8420412937560622
      ],
      "excerpt": "Both Cifar10 and MNIST dataset are converted into tfrecords format for conveinence. Put train.tfrecords, test.tfrecords files into dataset/cifar10, dataset/mnist \nYou can create tfrecord file with your own dataset with dataset/dataset_generator.py. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8980117235267479
      ],
      "excerpt": "python dataset_generator.py --image_dir ./cifar10/test/images --label_dir ./cifar10/test/labels --output_dir ./cifar10 --output_filename test.tfrecord \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8335704701989844,
        0.9069117634219459,
        0.9295409338771726
      ],
      "excerpt": "--label_dir (str) - directory of your label files. it is recommended to set the name of images to integers like 0.txt. label text file must contain class label in integer like 8.  \n--output_dir (str) - directory for output tfrecord file. \n--outpuf_filename (str) - filename of output tfrecord file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9066629494080027
      ],
      "excerpt": "(19.04.18 changed) I trained on Cifar10 dataset and get 6.36 % error on test set. You can download pretrained network from here. Unzip the file and move all files under checkpoint file or your checkpoint directory and try running test script to check the accuracy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9280535388239756
      ],
      "excerpt": "python train.py --class_num 10 --image_shape 32 32 3 --stages 4 --channel_count 78 --graph_model ws --graph_param 32 4 0.75 --dropout_rate 0.2 --learning_rate 0.1 --momentum 0.9 --weight_decay 0.0001 --train_set_size 50000 --val_set_size 10000 --batch_size 100 --epochs 100 --checkpoint_dir ./checkpoint --checkpoint_name randwire_cifar10 --train_record_dir ./dataset/cifar10/train.tfrecord --val_record_dir ./dataset/cifar10/test.tfrecord \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8236693980873652
      ],
      "excerpt": "- --class_num (int) - output number of class. Cifar10 has 10 classes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8396795873120959,
        0.8460353524789969
      ],
      "excerpt": "- --train_set_size (int) - number of training data. Cifar10 has 50000 data. \n- --val_set_size (int) - number of validating data. I used test data for validation, so there are 10000 data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8563067086118596,
        0.9049453382615414,
        0.8442688525071409,
        0.8619610346302008
      ],
      "excerpt": "- --checkpoint_dir (str) - directory to save checkpoint \n- --checkpoint_name (str) - file name of checkpoint \n- --train_record_dir (str) - file location of training set tfrecord \n- --test_record_dir (str) - file location of test set tfrecord (for validation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9210313837172639
      ],
      "excerpt": "python train.py --class_num 10 --image_shape 28 28 1 --stages 4 --channel_count 78 --graph_model ws --graph_param 32 4 0.75 --dropout_rate 0.2 --learning_rate 0.1 --momentum 0.9 --weight_decay 0.0001 --train_set_size 50000 --val_set_size 10000 --batch_size 100 --epochs 100 --checkpoint_dir ./checkpoint --checkpoint_name randwire_mnist --train_record_dir ./dataset/mnist/train.tfrecord --val_record_dir ./dataset/mnist/test.tfrecord \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8142003401721084
      ],
      "excerpt": "- options are same as Cifar10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9122870535474227
      ],
      "excerpt": "python train.py --class_num 100 --image_shape 32 32 3 --stages 4 --channel_count 78 --graph_model ws --graph_param 32 4 0.75 --dropout_rate 0.2 --learning_rate 0.1 --momentum 0.9 --weight_decay 0.0001 --train_set_size 50000 --val_set_size 10000 --batch_size 100 --epochs 100 --checkpoint_dir ./checkpoint --checkpoint_name randwire_cifar100 --train_record_dir ./dataset/cifar100/train.tfrecord --val_record_dir ./dataset/cifar100/test.tfrecord \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8142003401721084
      ],
      "excerpt": "- options are same as Cifar10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9295202473736112
      ],
      "excerpt": "python test.py --class_num --checkpoint_dir ./checkpoint/best --test_record_dir ./dataset/cifar10/test.tfrecord --batch_size 256 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8659544036338874,
        0.8851742560347252,
        0.8429892978063247
      ],
      "excerpt": "- --checkpoint_dir (str) - directory for the checkpoint you want to load and test \n- --test_record_dir (str) - directory for the test dataset \n- --batch_size (int) - batch size for testing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8068859964452746
      ],
      "excerpt": "  #: output logit from NN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "  #:                             training) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/plemeri/RandWire_tensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 swdsld\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "RandWire_tensorflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "RandWire_tensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "plemeri",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/plemeri/RandWire_tensorflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Tensorflow 1.x - GPU version recommended\n* Python 3.x\n* networkx 2.x\n* pyyaml 5.x\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 29,
      "date": "Sat, 25 Dec 2021 03:25:15 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "deep-neural-networks",
      "classification",
      "tensorflow",
      "cifar10",
      "mnist",
      "cifar100"
    ],
    "technique": "GitHub API"
  }
}