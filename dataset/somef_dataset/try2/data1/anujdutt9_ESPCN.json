{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1609.05158",
      "https://arxiv.org/abs/1609.05158"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "[Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network](https://arxiv.org/abs/1609.05158)\n\n```\n@article{DBLP:journals/corr/ShiCHTABRW16,\n  author    = {Wenzhe Shi and\n               Jose Caballero and\n               Ferenc Husz{\\'{a}}r and\n               Johannes Totz and\n               Andrew P. Aitken and\n               Rob Bishop and\n               Daniel Rueckert and\n               Zehan Wang},\n  title     = {Real-Time Single Image and Video Super-Resolution Using an Efficient\n               Sub-Pixel Convolutional Neural Network},\n  journal   = {CoRR},\n  volume    = {abs/1609.05158},\n  year      = {2016},\n  url       = {http://arxiv.org/abs/1609.05158},\n  archivePrefix = {arXiv},\n  eprint    = {1609.05158},\n  timestamp = {Mon, 13 Aug 2018 16:47:09 +0200},\n  biburl    = {https://dblp.org/rec/journals/corr/ShiCHTABRW16.bib},\n  bibsource = {dblp computer science bibliography, https://dblp.org}\n}\n```\n\n[Is the deconvolution layer the same as a convolutional layer? A note on Real\u00adTime Single Image and Video Super\u00adResolution Using an Efficient Sub\u00adPixel Convolutional Neural Network.](https://arxiv.org/pdf/1609.07009.pdf)\n\n```\n@article{article,\nauthor = {Shi, Wenzhe and \n          Caballero, Jose and \n          Theis, Lucas and \n          Huszar, Ferenc and \n          Aitken, Andrew and \n          Ledig, Christian and \n          Wang, Zehan},\nyear = {2016},\nmonth = {09},\npages = {},\ntitle = {Is the deconvolution layer the same as a convolutional layer?}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{article,\nauthor = {Shi, Wenzhe and \n          Caballero, Jose and \n          Theis, Lucas and \n          Huszar, Ferenc and \n          Aitken, Andrew and \n          Ledig, Christian and \n          Wang, Zehan},\nyear = {2016},\nmonth = {09},\npages = {},\ntitle = {Is the deconvolution layer the same as a convolutional layer?}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{DBLP:journals/corr/ShiCHTABRW16,\n  author    = {Wenzhe Shi and\n               Jose Caballero and\n               Ferenc Husz{\\'{a}}r and\n               Johannes Totz and\n               Andrew P. Aitken and\n               Rob Bishop and\n               Daniel Rueckert and\n               Zehan Wang},\n  title     = {Real-Time Single Image and Video Super-Resolution Using an Efficient\n               Sub-Pixel Convolutional Neural Network},\n  journal   = {CoRR},\n  volume    = {abs/1609.05158},\n  year      = {2016},\n  url       = {http://arxiv.org/abs/1609.05158},\n  archivePrefix = {arXiv},\n  eprint    = {1609.05158},\n  timestamp = {Mon, 13 Aug 2018 16:47:09 +0200},\n  biburl    = {https://dblp.org/rec/journals/corr/ShiCHTABRW16.bib},\n  bibsource = {dblp computer science bibliography, https://dblp.org}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        <td><center>BICUBIC x3</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.9559715772848645
      ],
      "excerpt": "        <td><center>BICUBIC x3</center></td> \n        <td><center>ESPCN x3 (PSNR: 32.40 dB)</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8955886365383559
      ],
      "excerpt": "        <td><center>BICUBIC x3</center></td> \n        <td><center>ESPCN x3 (PSNR: 28.36 dB)</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8955886365383559
      ],
      "excerpt": "        <td><center>BICUBIC x3</center></td> \n        <td><center>ESPCN x3 (PSNR: 28.65 dB)</center></td> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anujdutt9/ESPCN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-23T03:06:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-29T07:22:15Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9703347557072719
      ],
      "excerpt": "This repository is an attempt at implementing the paper Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network using PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8017467319708098,
        0.8893709573300523
      ],
      "excerpt": "This will train the model and save the model's weights as state_dict() to the assets/models/ folder. \nHere's a GIF of model predictions during training: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8894348697987547
      ],
      "excerpt": "NOTE: The pre-trained model provided with this repository is trained with a scaling factor of 3. Hence, the inference will up-scale the input image by a factor of 3. To use a different scaling factor, please train the model with apprropriate scaling factor value. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9714070160680653
      ],
      "excerpt": "The following are the model statistics for an input image of shape [1, 1, 224, 224]: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8820552693391943,
        0.9289722998458847
      ],
      "excerpt": "The following are some images comparing the original High Resolution image vs Image up-sampled using Bi-cubic up-sampling vs Super Resolution using this model. \nNote that the up-scaling factor for bi-cubic up-sampling and the super-resolution model is set to 3. For using a different up-scaling factor, please re-train the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Paper Implementation - \"Real-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network\".",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anujdutt9/ESPCN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 10:36:50 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anujdutt9/ESPCN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "anujdutt9/ESPCN",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please setup your training environemnt by installing the requirements using:\n\n```\n$ pip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9339441304074131,
        0.8538112509513309,
        0.8423151720808114
      ],
      "excerpt": "$ python train.py -t ./dataset/train -v ./dataset/val -o ./assets/models/ \nThis will train the model and save the model's weights as state_dict() to the assets/models/ folder. \nHere's a GIF of model predictions during training: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9428791557992393
      ],
      "excerpt": "$ python infer.py -w ./assets/models/best.pth -i ./dataset/test/face.png -o ./datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.866680928254118,
        0.8272676643667615
      ],
      "excerpt": "The export.py script provide five options for exporting the model - ONNX, CoreML, TensorFlow, TFLite and TF.js. For example to convert the trained model to TFLite format, use the following command: \n$ python export.py -i ./assets/models/best.pth -o ./assets/models -f TFLite \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8074180789471169
      ],
      "excerpt": "Input size (MB): 0.20 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8337602022600056
      ],
      "excerpt": "Params size (MB): 0.09 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8934745846565956
      ],
      "excerpt": "Total params: 22,729 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853492186136904,
        0.853492186136904,
        0.853492186136904
      ],
      "excerpt": "Total MAdd: 2.27GMAdd \nTotal Flops: 1.14GFlops \nTotal MemR+W: 38.75MB \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282873464721637
      ],
      "excerpt": "            <center><img src=\"./dataset/test/comic.png\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474483332713336
      ],
      "excerpt": "            <center><img src=\"./dataset/test/face.png\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282873464721637
      ],
      "excerpt": "            <center><img src=\"./dataset/test/zebra.png\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282873464721637
      ],
      "excerpt": "            <center><img src=\"./dataset/test/flowers.png\"></center> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/anujdutt9/ESPCN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Anuj Dutt\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ESPCN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ESPCN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "anujdutt9",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/anujdutt9/ESPCN/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "anujdutt9",
        "body": "This release contains the following:\r\n1. Related papers to re-produce the results.\r\n2. Trained model and prediction outputs on test set.\r\n3. Train, val and test datasets.\r\n4. Script to train, infer and export the model.",
        "dateCreated": "2021-08-28T19:03:26Z",
        "datePublished": "2021-08-28T19:06:00Z",
        "html_url": "https://github.com/anujdutt9/ESPCN/releases/tag/v0.1",
        "name": "ESPCN-PyTorch",
        "tag_name": "v0.1",
        "tarball_url": "https://api.github.com/repos/anujdutt9/ESPCN/tarball/v0.1",
        "url": "https://api.github.com/repos/anujdutt9/ESPCN/releases/48618614",
        "zipball_url": "https://api.github.com/repos/anujdutt9/ESPCN/zipball/v0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Fri, 24 Dec 2021 10:36:50 GMT"
    },
    "technique": "GitHub API"
  }
}