{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2107.02053",
      "https://arxiv.org/abs/2103.02503, which summarizes the ten-year development in domain generalization, with coverage on the history, datasets, related problems, methodologies, potential directions, and so on.\n\n**##############################**\n\n**A brief introduction**: The key idea of MixStyle is to probablistically mix instance-level feature statistics of training samples across source domains. MixStyle improves model robustness to domain shift by implicitly synthesizing new domains at the feature level for regularizing the training of convolutional neural networks. This idea is largely inspired by [neural style transfer](https://arxiv.org/abs/1703.06868",
      "https://arxiv.org/abs/1703.06868",
      "https://arxiv.org/abs/2107.02053 for a more comprenehsive picture of MixStyle.\n\nTo cite MixStyle in your publications, please use the following bibtex entry\n\n```\n@inproceedings{zhou2021mixstyle,\n  title={Domain Generalization with MixStyle},\n  author={Zhou, Kaiyang and Yang, Yongxin and Qiao, Yu and Xiang, Tao},\n  booktitle={ICLR},\n  year={2021}\n}\n\n@article{zhou2021mixstylenn,\n  title={MixStyle Neural Networks for Domain Generalization and Adaptation},\n  author={Zhou, Kaiyang and Yang, Yongxin and Qiao, Yu and Xiang, Tao},\n  journal={arXiv:2107.02053},\n  year={2021}\n}\n```",
      "https://arxiv.org/abs/2107.02053"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{zhou2021mixstylenn,\n  title={MixStyle Neural Networks for Domain Generalization and Adaptation},\n  author={Zhou, Kaiyang and Yang, Yongxin and Qiao, Yu and Xiang, Tao},\n  journal={arXiv:2107.02053},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{zhou2021mixstyle,\n  title={Domain Generalization with MixStyle},\n  author={Zhou, Kaiyang and Yang, Yongxin and Qiao, Yu and Xiang, Tao},\n  booktitle={ICLR},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if type(m) == MixStyle: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456806903995955
      ],
      "excerpt": "    if type(m) == MixStyle: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "    mu, sig = mu.detach(), sig.detach() \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KaiyangZhou/mixstyle-release",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-24T10:30:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-20T08:53:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9917497846539106
      ],
      "excerpt": "This repo contains the code of our ICLR'21 paper, \"Domain Generalization with MixStyle\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8355011024199902,
        0.9915462215523899,
        0.9882148080601031,
        0.936529896351641
      ],
      "excerpt": "12-10-2021: Please note that the latest version for Dassl is v0.5.0 (the changes might affect the performance if the original images are not square). See this for more details. \n06-07-2021: Extension of our ICLR'21 paper is out: MixStyle Neural Networks for Domain Generalization and Adaptation. This work extends the conference version mainly in the following ways: 1) A simple algorithmic extension enabling MixStyle to cope with unlabeled data; 2) New evidence showing that MixStyle works exceptionally well with extremely limited labels; 3) New experiments covering semi-supervised domain generalization and unsupervised domain adaptation. Code for reproducing the new experiments is available at imcls/. \n28-06-2021: A new implementation of MixStyle is out, which merges MixStyle2 to MixStyle and switches between random and cross-domain mixing using self.mix. The new features can be found here. \n12-04-2021: A variable self._activated is added to MixStyle to better control the computational flow. To deactivate MixStyle without modifying the model code, one can do \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8276781042801508
      ],
      "excerpt": "Note thatMixStyle` has been included in Dassl.pytorch. See the code for details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.978838851857423,
        0.9904780573262235
      ],
      "excerpt": "A brief introduction: The key idea of MixStyle is to probablistically mix instance-level feature statistics of training samples across source domains. MixStyle improves model robustness to domain shift by implicitly synthesizing new domains at the feature level for regularizing the training of convolutional neural networks. This idea is largely inspired by neural style transfer which has shown that feature statistics are closely related to image style and therefore arbitrary image style transfer can be achieved by switching the feature statistics between a content and a style image. \nMixStyle is very easy to implement. Below we show a brief implementation of it in PyTorch. The full code can be found here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9469676710431292,
        0.8709163060878622
      ],
      "excerpt": "      p (float): probability of using MixStyle. \n      alpha (float): parameter of the Beta distribution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "      mix (str): how to mix. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693233393948762
      ],
      "excerpt": "    lmda = lmda.to(x.device) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.834779330593661
      ],
      "excerpt": "        #: split into two halves and swap the order \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9194888437524202
      ],
      "excerpt": "How to apply MixStyle to your CNN models? Say you are using ResNet as the CNN architecture, and want to apply MixStyle after the 1st and 2nd residual blocks, you can first instantiate the MixStyle module using \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8699644460441625
      ],
      "excerpt": "during network construction (in __init__()), and then apply MixStyle in the forward pass like \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9675246773516687,
        0.9392744301295686,
        0.8823516270807978,
        0.9119852510638365
      ],
      "excerpt": "In our paper, we have demonstrated the effectiveness of MixStyle on three tasks: image classification, person re-identification, and reinforcement learning. The source code for reproducing all experiments can be found in mixstyle-release/imcls, mixstyle-release/reid, and mixstyle-release/rl, respectively. \nTakeaways on how to apply MixStyle to your tasks: \n- Applying MixStyle to multiple lower layers is recommended (e.g., insert MixStyle after res1 and res2 in ResNets). \n- Do not apply MixStyle to the last layer that is the closest to the prediction layer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8473716358532379,
        0.8729930679171554
      ],
      "excerpt": "- If you want to use the same configuration for all tasks/datasets for fair comparison, we suggest adding MixStyle to two consecutive layers, such as res1 and res2 in ResNets. \nFor more analytical studies, please read our paper at https://openreview.net/forum?id=6xHJ37MVxxp. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Domain Generalization with MixStyle. ICLR'21.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KaiyangZhou/mixstyle-release/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Sun, 26 Dec 2021 05:06:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/KaiyangZhou/mixstyle-release/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "KaiyangZhou/mixstyle-release",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/rl/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/imcls/scripts/ssdg1.sh",
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/imcls/scripts/da.sh",
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/imcls/scripts/ssdg2.sh",
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/imcls/scripts/dg.sh",
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/reid/run.sh",
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/reid/scripts/osnet.sh",
      "https://raw.githubusercontent.com/KaiyangZhou/mixstyle-release/master/reid/scripts/r50.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.955874726380445
      ],
      "excerpt": "Similarly, to activate MixStyle, one can dopython \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "        m.set_activation_status(True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8722253495125046
      ],
      "excerpt": "import random \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853209923960218,
        0.9038957813663621
      ],
      "excerpt": "    mu = x.mean(dim=[2, 3], keepdim=True) \n    var = x.var(dim=[2, 3], keepdim=True) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/KaiyangZhou/mixstyle-release/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "Shell",
      "Makefile",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License\\n\\nCopyright (c) 2018 OpenAI (http://openai.com)\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MixStyle",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mixstyle-release",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "KaiyangZhou",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KaiyangZhou/mixstyle-release/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 136,
      "date": "Sun, 26 Dec 2021 05:06:44 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "domain-generalization",
      "representation-learning",
      "feature-statistics",
      "iclr2021",
      "image-classification",
      "person-reidentification",
      "reinforcement-learning"
    ],
    "technique": "GitHub API"
  }
}