{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.06815",
      "https://arxiv.org/abs/1606.02147",
      "https://arxiv.org/abs/1606.02147"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If ESPNet is useful for your research, then please cite our paper.\n```\n@inproceedings{mehta2018espnet,\n  title={ESPNet: Efficient Spatial Pyramid of Dilated Convolutions for Semantic Segmentation},\n  author={Sachin Mehta, Mohammad Rastegari, Anat Caspi, Linda Shapiro, and Hannaneh Hajishirzi},\n  booktitle={ECCV},\n  year={2018}\n}\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{mehta2018espnet,\n  title={ESPNet: Efficient Spatial Pyramid of Dilated Convolutions for Semantic Segmentation},\n  author={Sachin Mehta, Mohammad Rastegari, Anat Caspi, Linda Shapiro, and Hannaneh Hajishirzi},\n  booktitle={ECCV},\n  year={2018}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8942508954844319
      ],
      "excerpt": "This repository contains the source code of our paper, ESPNet (accepted for publication in ECCV'18). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sacmehta/ESPNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-02-18T00:09:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T12:43:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.988788917908279,
        0.987999405585068
      ],
      "excerpt": "This repository contains the source code of our paper, ESPNet (accepted for publication in ECCV'18). \nCheck our project page for more qualitative results (videos). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9552470740613291
      ],
      "excerpt": "This repository is organized as: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507007731872918
      ],
      "excerpt": "Our model ESPNet achives an class-wise mIOU of 60.336 and category-wise mIOU of 82.178 on the CityScapes test dataset and runs at  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9889850346938203,
        0.9223055714382922
      ],
      "excerpt": "* With the same number of parameters as ENet, our model is 2% more accurate \nOur model achieves an mIOU of 55.64 on the CamVid test set. We used the dataset splits (train/val/test) provided here. We trained the models at a resolution of 480x360. For comparison  with other models, see SegNet paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ESPNet: Efficient Spatial Pyramid of Dilated Convolutions for Semantic Segmentation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sacmehta/ESPNet/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you are getting an assertion error with class labels, then please check the number of class labels defined in the label images. You can do this as:\n\n```\nimport cv2\nimport numpy as np\nlabelImg = cv2.imread(<label_filename.png>, 0)\nunique_val_arr = np.unique(labelImg)\nprint(unique_val_arr)\n```\nThe values inside *unique_val_arr* should be between 0 and total number of classes in the dataset. If this is not the case, then pre-process your label images. For example, if the label iamge contains 255 as a value, then you can ignore these values by mapping it to an undefined or background class as:\n\n```\nlabelImg[labelImg == 255] = <undefined class id>\n```\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 114,
      "date": "Tue, 28 Dec 2021 18:50:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sacmehta/ESPNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sacmehta/ESPNet",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sacmehta/ESPNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Sachin Mehta\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ESPNet: Efficient Spatial Pyramid of Dilated Convolutions for Semantic Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ESPNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sacmehta",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sacmehta/ESPNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run this code, you need to have following libraries:\n* [OpenCV](https://opencv.org/) - We tested our code with version > 3.0.\n* [PyTorch](http://pytorch.org/) - We tested with v0.3.0\n* Python - We tested our code with Pythonv3. If you are using Python v2, please feel free to make necessary changes to the code. \n\nWe recommend to use [Anaconda](https://conda.io/docs/user-guide/install/linux.html). We have tested our code on Ubuntu 16.04.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 492,
      "date": "Tue, 28 Dec 2021 18:50:33 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "convolutional-neural-networks",
      "semantic-segmentation",
      "real-time",
      "edge-devices"
    ],
    "technique": "GitHub API"
  }
}