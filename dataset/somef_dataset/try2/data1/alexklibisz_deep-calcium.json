{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1505.04597",
      "https://arxiv.org/abs/1707.06314",
      "https://arxiv.org/abs/1505.04597"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alexklibisz/deep-calcium",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-06-07T12:39:12Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-16T11:50:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9694379253107756
      ],
      "excerpt": "Deep Learning Models for Calcium Imaging Data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8941443782635117
      ],
      "excerpt": "| Ground truth and predicted neurons are outlined in blue and red, respectively.  Intersecting outlines become purple. | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.833048398725245
      ],
      "excerpt": "Model described in the paper: Fast, Simple Calcium Imaging Segmentation with Fully Convolutional Networks by Aleksander Klibisz, Derek Rose, Matthew Eicholtz, Jay Blundon, Stanislav Zakharenko. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9585628441683478,
        0.8372174209984593
      ],
      "excerpt": "Usage with new data: see this example to understand how to use a trained model with new data. \nTrained on data from the Neurofinder challenge with results below. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8704784544058715,
        0.8283015195867899,
        0.9362252473582302,
        0.8490438786537073
      ],
      "excerpt": "|6/16/17|UNet with a single batchnorm layer at the input. Images scaled to [0,1]. |0.5356|Github|Google Drive|Google Drive|0bda9d4| \n|7/12/17|Same as 6/16/17, but with 8x test-time augmentation. |0.5422|Github|Google Drive|Google Drive|f1b33bf| \n|7/13/17|UNet with batchnorm between each conv and ReLU. Mean subtraction and normalization on each summary image. Mask-summary erosion to eliminate merged neurons in ground-truth mask.|0.5611|Github|Github|Google Drive|2b15d1b| \n|7/13/17|Same as 7/13/17, but with 8x test-time augmentation. Replaced UNet2DS submission with this one. |0.5689|Github|Github|Google Drive|2b15d1b| \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8364673105233301
      ],
      "excerpt": "| *Ground truth spikes marked in blue, predicted spike segments in red. | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9904667868026323,
        0.9073433324840323
      ],
      "excerpt": "Model described in: Segmenting Neurons and Spikes in Calcium Imaging Data Using Deep Learning (poster) \nCurrently used for non-public internal data only. It might be adaptable for Spikefinder data. Spikefinder is predicting a continuous output (number of action potentials at each time step). U-Net1D predicts a binary output (spike or no-spike at each time step). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Fast, Simple Calcium Imaging Segmentation with Fully Convolutional Networks (https://arxiv.org/abs/1707.06314)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alexklibisz/deep-calcium/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Tue, 28 Dec 2021 18:51:01 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alexklibisz/deep-calcium/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "alexklibisz/deep-calcium",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/alexklibisz/deep-calcium/master/notebooks/dlmia_workshop_figures.ipynb",
      "https://raw.githubusercontent.com/alexklibisz/deep-calcium/master/notebooks/unet2ds_inspection.ipynb",
      "https://raw.githubusercontent.com/alexklibisz/deep-calcium/master/notebooks/suli_figures.ipynb",
      "https://raw.githubusercontent.com/alexklibisz/deep-calcium/master/notebooks/unet2ds_random_hyperparameter_search.ipynb",
      "https://raw.githubusercontent.com/alexklibisz/deep-calcium/master/notebooks/dlmia_workshop_supplementary.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/alexklibisz/deep-calcium/master/examples/spikes/install_c2s.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install the package and make predictions on Neurofinder using a pre-trained UNet2DS model.\n\n**Note: This assumes python3.5 and pip3.**\n\n```\n#: Install from Github repo. Need to upgrade pip.\n$ pip install --upgrade --user -I pip\n$ pip install --user git+https://github.com/alexklibisz/deep-calcium.git\n\n#: Download the model from Github releases.\n$ wget https://github.com/alexklibisz/deep-calcium/releases/download/v0.0.1-weights/unet2ds_model.hdf5\n\n\n#: Download the example script and evaluate predictions on the first training dataset.\n#: This will download and preprocess the dataset to ~/.deep-calcium-datasets, requiring ~3.1GB of disk space.\n$ wget https://raw.githubusercontent.com/alexklibisz/deep-calcium/dev/examples/neurons/unet2ds_nf.py\n$ CUDA_VISIBLE_DEVICES=\"0\" python unet2ds_nf.py evaluate neurofinder.00.00 --model unet2ds_model.hdf5\n```\n\nYou should see output similar to this:\n\n```\n$ INFO:predict:Loaded model from unet2ds_model.hdf5.\n$ INFO:predict:neurofinder.00.00: prec=0.976, reca=1.000, incl=0.084, excl=0.109, comb=0.988\n$ INFO:predict:Saved /home/kzh/.deep-calcium/checkpoints/neurons_unet2ds_nf/neurofinder.00.00_mp.png\n$ INFO:predict:Mean prec=0.976, reca=1.000, comb=0.988\n$ INFO:evaluation:Evaluation without TTA.\n$ INFO:predict:Loaded model from unet2ds_model.hdf5.\n$ INFO:predict:neurofinder.00.00: prec=0.919, reca=1.000, incl=0.106, excl=0.133, comb=0.958\n$ INFO:predict:Saved /home/kzh/.deep-calcium/checkpoints/neurons_unet2ds_nf/neurofinder.00.00_mp.png\n$ INFO:predict:Mean prec=0.919, reca=1.000, comb=0.958\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8839141591603435
      ],
      "excerpt": "| <img src=\"media/suli_fig_neurons_outlined_pred_01.png\" height=\"140px\" width=\"auto\"/> |  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8839141591603435
      ],
      "excerpt": "| <img src=\"media/suli_fig_spikes_pred_00.png\" height=\"140px\" width=\"auto\"/> |  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alexklibisz/deep-calcium/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "deep-calcium",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "deep-calcium",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "alexklibisz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alexklibisz/deep-calcium/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "alexklibisz",
        "body": "Keras models and weights for UNet2DS and UNet1D with some training artifacts. Model files were serialized in Python3.5 and might not work with other version of Python.\r\n\r\nUNet2DS:\r\n- Weights from \"Fast, Simple Calcium Imaging Segmentation with Fully Convolutional Networks\"\r\n- [Trained at this commit.](https://github.com/alexklibisz/deep-calcium/blob/2b15d1b07a780ff4b2477524f255e41533fc6205/deepcalcium/models/neurons/unet_2d_summary.py)\r\n- Validation F1 approximately 0.84. Neurofinder submission F1 = 0.569.\r\n- Including training metrics.\r\n\r\nUNet1D:\r\n- Most recently-trained weights.\r\n- [Trained at this commit.](https://github.com/alexklibisz/deep-calcium/commit/4e8337ba706b545802000aea358992e99900e83a)\r\n- Validation F2=0.81, recall=0.84, precision=0.71.\r\n- Including training metrics and a sample of predictions on validation data.",
        "dateCreated": "2017-08-11T03:14:33Z",
        "datePublished": "2017-08-11T13:01:33Z",
        "html_url": "https://github.com/alexklibisz/deep-calcium/releases/tag/v0.0.1-weights",
        "name": "UNet2DS, UNet1D Models and Weights",
        "tag_name": "v0.0.1-weights",
        "tarball_url": "https://api.github.com/repos/alexklibisz/deep-calcium/tarball/v0.0.1-weights",
        "url": "https://api.github.com/repos/alexklibisz/deep-calcium/releases/7360933",
        "zipball_url": "https://api.github.com/repos/alexklibisz/deep-calcium/zipball/v0.0.1-weights"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 23,
      "date": "Tue, 28 Dec 2021 18:51:01 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "calcium-imaging",
      "neurofinder",
      "unet"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Install the package and make predictions on Neurofinder using a pre-trained UNet2DS model.\n\n**Note: This assumes python3.5 and pip3.**\n\n```\n#: Install from Github repo. Need to upgrade pip.\n$ pip install --upgrade --user -I pip\n$ pip install --user git+https://github.com/alexklibisz/deep-calcium.git\n\n#: Download the model from Github releases.\n$ wget https://github.com/alexklibisz/deep-calcium/releases/download/v0.0.1-weights/unet2ds_model.hdf5\n\n\n#: Download the example script and evaluate predictions on the first training dataset.\n#: This will download and preprocess the dataset to ~/.deep-calcium-datasets, requiring ~3.1GB of disk space.\n$ wget https://raw.githubusercontent.com/alexklibisz/deep-calcium/dev/examples/neurons/unet2ds_nf.py\n$ CUDA_VISIBLE_DEVICES=\"0\" python unet2ds_nf.py evaluate neurofinder.00.00 --model unet2ds_model.hdf5\n```\n\nYou should see output similar to this:\n\n```\n$ INFO:predict:Loaded model from unet2ds_model.hdf5.\n$ INFO:predict:neurofinder.00.00: prec=0.976, reca=1.000, incl=0.084, excl=0.109, comb=0.988\n$ INFO:predict:Saved /home/kzh/.deep-calcium/checkpoints/neurons_unet2ds_nf/neurofinder.00.00_mp.png\n$ INFO:predict:Mean prec=0.976, reca=1.000, comb=0.988\n$ INFO:evaluation:Evaluation without TTA.\n$ INFO:predict:Loaded model from unet2ds_model.hdf5.\n$ INFO:predict:neurofinder.00.00: prec=0.919, reca=1.000, incl=0.106, excl=0.133, comb=0.958\n$ INFO:predict:Saved /home/kzh/.deep-calcium/checkpoints/neurons_unet2ds_nf/neurofinder.00.00_mp.png\n$ INFO:predict:Mean prec=0.919, reca=1.000, comb=0.958\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}