{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.02325\n* Another AI-thermomerter project: https://github.com/tomek-l/ai-thermometer"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* TensorRT demo code: https://github.com/jkjung-avt/tensorrt_demos\n* TensorRT documentation: https://docs.nvidia.com/deeplearning/tensorrt/developer-guide/index.html\n* TensorRT python example codes: https://github.com/NVIDIA/TensorRT/tree/master/samples/python\n* TensorFlow object detection API: https://github.com/tensorflow/models/tree/master/research/object_detection\n* TensorFlow 1 Detection Model Zoo: https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf1_detection_zoo.md\n* WIDER FACE dataset: http://shuoyang1213.me/WIDERFACE/\n* SSD paper: https://arxiv.org/abs/1512.02325\n* Another AI-thermomerter project: https://github.com/tomek-l/ai-thermometer\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aiha-lab/AI-thermometer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-05T03:21:18Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-01T06:49:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9609053415620217,
        0.990093538425533,
        0.9140890856538546
      ],
      "excerpt": "This is a project which implement high-speed AI thermometer. \nThe goal was implementing AI thermometer on embedded system using deep learning-based object detection model. So we optimized SSD(Single-shot multibox detector) via TensorRT, which is the library of NVIDIA for high-performance deep learning inference. Note that the TensorRT version which we used is 6.0.1 \nIn general, most of the AI-based thermometers are using not only normal RGB camera but also thermal imaging camera. Because the face detection should work on normal images. Therefore, we did transfer learning, retrained SSD on custom dataset of thermal face images(using TensorFlow object detection API). We constructed the dataset by capture images on thermal imaging camera manually. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9792455956326227
      ],
      "excerpt": "TensorRT sample python codes we used, and their variations. We applied INT8 quantization and calibration scheme in 'int_caffe_mnist' to 'uff_ssd'. So we were able to implement the backbone network(MobileNet-v2) of SSD in INT8 precision. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9429626757143698,
        0.9718235285974589,
        0.8387202366968547
      ],
      "excerpt": "* uff_ssd_mb2: Chage the backbone network from Inception-v2 to MobileNet-v2. (The backbone is Inception-v2 in original sample codes) \n* uff_ssd_mb2_wider: The MobileNet-v2-based SSD model is retrained on WIDER FACE dataset for only face detection. (transfer learning) \n* uff_ssd_mb2_thermal: Retrain the model on custom thermal image dataset. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aiha-lab/AI-thermometer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:27:49 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/aiha-lab/AI-thermometer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "aiha-lab/AI-thermometer",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/aiha-lab/AI-thermometer/tree/master/demo/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/Capture%20Images.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/cv2%20dnn%20experiments.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/Streaming%20Experiments.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/Processing.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/Image%20stitching.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/Getting%20Started%20with%20Cameras.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/VIS%20Detection%20DETR.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/IR%20Detection.ipynb",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/notebooks/mtcnn.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/ssd/install_pycuda.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/ssd/install.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/ssd/build_engines.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/camera_scripts/deploy_ir.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/camera_scripts/combine_ir_rgb.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/camera_scripts/capture_images.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo/docs/camera_scripts/deploy_rgb.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo_face_detection/ssd/install_pycuda.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo_face_detection/ssd/install.sh",
      "https://raw.githubusercontent.com/aiha-lab/AI-thermometer/master/demo_face_detection/ssd/build_engines.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9358326457037286
      ],
      "excerpt": "Libraries: TensorRT (Release 6.0.1), OpenCV, NumPy, PyCUDA, etc. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8494174195948629
      ],
      "excerpt": "<img src=\"demo_face_detection/demo_face_detection_demo_result.gif\" width=\"320px\" height=\"180px\"></img><br/> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/aiha-lab/AI-thermometer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "C++",
      "CMake",
      "Makefile",
      "Shell",
      "Roff"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 JK Jung\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "AI-thermometer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "AI-thermometer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "aiha-lab",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/aiha-lab/AI-thermometer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 04:27:49 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Final demo of this project.\n\n<img src=\"demo/results/1.jpg\" width=\"240px\" height=\"180px\"></img>\n<img src=\"demo/results/2.jpg\" width=\"240px\" height=\"180px\"></img><br/>\n\n",
      "technique": "Header extraction"
    }
  ]
}