{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.06711"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.999526252584271
      ],
      "excerpt": "Reproduction of MelGAN - NeurIPS 2019 Reproducibility Challenge (Ablation Track) by Yifei Zhao, Yichao Yang, and Yang Gao \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seungwonpark/melgan",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-17T11:32:20Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-26T12:27:54Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9598235882618746,
        0.9524223524138011
      ],
      "excerpt": "Unofficial PyTorch implementation of MelGAN vocoder \nMelGAN is lighter, faster, and better at generalizing to unseen speakers than WaveGlow. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8572044288391981
      ],
      "excerpt": "Pretrained model on LJSpeech-1.1 via PyTorch Hub. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8682302459535726
      ],
      "excerpt": "Try with Google Colab: TODO \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8268068028289789
      ],
      "excerpt": "Official MelGAN implementation by original authors \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "MelGAN vocoder (compatible with NVIDIA/tacotron2)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seungwonpark/melgan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 104,
      "date": "Sun, 26 Dec 2021 23:32:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seungwonpark/melgan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "seungwonpark/melgan",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Download dataset for training. This can be any wav files with sample rate 22050Hz. (e.g. LJSpeech was used in paper)\n- preprocess: `python preprocess.py -c config/default.yaml -d [data's root path]`\n- Edit configuration `yaml` file\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8411004553040458,
        0.8411004553040458
      ],
      "excerpt": "    vocoder = vocoder.cuda() \n    mel = mel.cuda() \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9420994937398771
      ],
      "excerpt": "python trainer.py -c [config yaml file] -n [name of the run] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8536732604004487
      ],
      "excerpt": "Write down the root path of train/validation files to 2nd/3rd line. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8403735399041141
      ],
      "excerpt": "python inference.py -p [checkpoint path] -i [input mel path] \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/seungwonpark/melgan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2019, Seungwon Park \\xeb\\xb0\\x95\\xec\\x8a\\xb9\\xec\\x9b\\x90\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its\\n   contributors may be used to endorse or promote products derived from\\n   this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "MelGAN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "melgan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "seungwonpark",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/seungwonpark/melgan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "seungwonpark",
        "body": "- Significant improvement in unvoiced segments (see #30, #17)\r\n- Match details of [official implementation](https://github.com/descriptinc/melgan-neurips) to improve quality\r\n- New pre-trained model\r\n- New audio samples at http://swpark.me/melgan/.",
        "dateCreated": "2019-12-02T05:38:59Z",
        "datePublished": "2019-12-02T05:45:11Z",
        "html_url": "https://github.com/seungwonpark/melgan/releases/tag/v0.3-alpha",
        "name": "fixed noise of unvoiced segment (fix #30, #17)",
        "tag_name": "v0.3-alpha",
        "tarball_url": "https://api.github.com/repos/seungwonpark/melgan/tarball/v0.3-alpha",
        "url": "https://api.github.com/repos/seungwonpark/melgan/releases/21886007",
        "zipball_url": "https://api.github.com/repos/seungwonpark/melgan/zipball/v0.3-alpha"
      },
      {
        "authorType": "User",
        "author_name": "seungwonpark",
        "body": "Fixed wrong implementation of Generator (see #22)\r\n",
        "dateCreated": "2019-11-11T01:40:55Z",
        "datePublished": "2019-11-11T01:41:47Z",
        "html_url": "https://github.com/seungwonpark/melgan/releases/tag/v0.2-alpha",
        "name": "MelGAN v0.2-alpha",
        "tag_name": "v0.2-alpha",
        "tarball_url": "https://api.github.com/repos/seungwonpark/melgan/tarball/v0.2-alpha",
        "url": "https://api.github.com/repos/seungwonpark/melgan/releases/21352515",
        "zipball_url": "https://api.github.com/repos/seungwonpark/melgan/zipball/v0.2-alpha"
      },
      {
        "authorType": "User",
        "author_name": "seungwonpark",
        "body": "",
        "dateCreated": "2019-10-28T09:18:45Z",
        "datePublished": "2019-10-28T09:31:39Z",
        "html_url": "https://github.com/seungwonpark/melgan/releases/tag/v0.1-alpha",
        "name": "PyTorch Hub release test",
        "tag_name": "v0.1-alpha",
        "tarball_url": "https://api.github.com/repos/seungwonpark/melgan/tarball/v0.1-alpha",
        "url": "https://api.github.com/repos/seungwonpark/melgan/releases/21016832",
        "zipball_url": "https://api.github.com/repos/seungwonpark/melgan/zipball/v0.1-alpha"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Tested on Python 3.6\n```bash\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 521,
      "date": "Sun, 26 Dec 2021 23:32:05 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tts",
      "neural-vocoder",
      "gan",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}