{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.06591",
      "https://arxiv.org/abs/1711.07280",
      "https://arxiv.org/abs/1907.04957",
      "https://arxiv.org/abs/1811.12354",
      "https://arxiv.org/abs/2001.03671",
      "https://arxiv.org/abs/1912.03241"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{lansing2019valan,\n    title={VALAN: Vision and Language Agent Navigation},\n    author={Larry Lansing and Vihan Jain and Harsh Mehta and Haoshuo Huang and Eugene Ie},\n    year={2019},\n    eprint={1912.03241},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9072212651148999
      ],
      "excerpt": "VALAN, short for Vision and Language Agent Navigation is a lightweight and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9998577615692692
      ],
      "excerpt": "Lansing et al. Please cite the paper if you \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/google-research/valan",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to Contribute\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\nContributor License Agreement\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to https://cla.developers.google.com/ to see\nyour current agreements on file or to sign a new one.\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\nCode reviews\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\nGitHub Help for more\ninformation on using pull requests.\nCommunity Guidelines\nThis project follows Google's Open Source Community\nGuidelines.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-09-16T20:19:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T03:20:21Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9429517042115035,
        0.9768096552671311
      ],
      "excerpt": "VALAN, short for Vision and Language Agent Navigation is a lightweight and \nscalable software framework for deep reinforcement learning based on the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9103381619350465
      ],
      "excerpt": "facilitates the development and evaluation of embodied agents for solving \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865
      ],
      "excerpt": "Matterport3D and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8409928454752649
      ],
      "excerpt": "tasks require agents to interpret natural language instructions/dialog to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452499198159202,
        0.9190012704307247
      ],
      "excerpt": "navigation goals. We have added a minimal set of abstractions on top of SEED RL \nallowing us to generalize the architecture to solve a variety of other RL \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9323934580602051
      ],
      "excerpt": "This package contains the implementations of the following problems: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9624378037053951,
        0.9680595328826055
      ],
      "excerpt": "See Mehta et al. for details about our \nimplementation for Touchdown and the data supporting it. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Vision and Language Agent Navigation ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/google-research/valan/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Wed, 22 Dec 2021 13:55:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/google-research/valan/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "google-research/valan",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/google-research/valan/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/google-research/valan/master/launch_locally_with_docker.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/scripts/stop_local.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/scripts/local_run.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/gcp/r2r_train_3scans.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/gcp/r2r_train.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/gcp/setup_gcp.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/docker/push.sh",
      "https://raw.githubusercontent.com/google-research/valan/master/docker/build.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/google-research/valan/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "VALAN: Vision and Language Agent Navigation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "valan",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "google-research",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/google-research/valan/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Before getting started, we need two main packages to run VALAN:\ndocker and git.\n\n+ Docker\n    1. Install docker by following the links below. Note that\n      GPU support is only available for docker version 19.03 and later\n      (after Aug 2019).\n        + For Ubuntu: https://docs.docker.com/engine/install/ubuntu\n        + For Debian: https://docs.docker.com/engine/install/debian\n    2. Make sure docker works as non-root user (i.e., without `sudo`) by\n      following [this instruction](https://docs.docker.com/install/linux/linux-postinstall)\n      and section \"**Manage Docker as a non-root user**\" inside.\n        + Now the following command should work without `sudo`:\n\n            ```\n            docker run hello-world\n            ```\n\n+ Git\n    1. Install git use the following:\n\n        ```\n        apt-get update && apt-get install git\n        ```\n\n    2. Clone the VALAN git repository to your directory:\n\n        ```\n        git clone https://github.com/google-research/valan.git\n        cd valan\n        ```\n\n+ Optional: To launch distributed training on the GCP AI-Platform you also need\n  to sign up for a GCP account and install the Cloud SDK.\n    - Follow https://cloud.google.com/ai-platform\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "+ Quick Start\n\n    For a quick start, run the following toy example that works out of the box.\n    It  launches a training job inside a docker container, and uses Tmux to\n    manage the `learner` with 3 `train actors`, 3 `eval actors`, and an\n    `eval aggregator`, each of which runs separately in an asyncronous manner.\n    The toy dataset contains only 3 R2R scans (houses) and\n    a dozen paths, and will be copied to `/tmp/valan/testdata/`.\n    Make sure you are inside directory `valan/` before start. Then run the\n    following:\n\n    ```\n    bash launch_locally_with_docker.sh R2R R2R_3scans R2R_3scans 3 3\n    ```\n\n    To stop an individual worker, type CTRL+C in the worker's Tmux window. To\n    stop training, switch to the learner's window by typing CTRL+b then 0, then\n    type CTRL+C to kill the learner. To terminate and quit\n    the docker container, type CTRL+b then d, which will detach the container,\n    kill all tasks inside, and remove the container.\n\n\n+ Custom Training\n\n    You can run the job with your own R2R dataset as follows:\n\n    ```\n    bash launch_locally_with_docker.sh PROBLEM TRAIN_DATA EVAL_DATA NUM_ACTORS NUM_EVAL_ACTORS\n    ```\n\n    Note that the full R2R dataset is quite large and has 56 scans with 14k\n    paths. Although the training job can run with only a few actors on a single\n    machine, it can be very slow to do so. Thus it is recommended to run the\n    full R2R dataset or other data of similar size on a distributed platform,\n    e.g., GCP.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "We provide the tool and a concrete example to run VALAN on GCP with distributed learning.\nNote that training the AI Platform requires signing up for a GCP account and will will\nincurr charges for using the compute resources. See: https://cloud.google.com/ai-platform\n\n+ Set up GCP SDK and project\n\n    - To get started, install the GCP Cloud SDK following this instruction\n      https://cloud.google.com/sdk/docs/quickstart and set up your GCP project.\n    - Enable billing for your project.\n    - Set up your Cloud Storage bucket for you AI Platform account following this\n      instruction: https://cloud.google.com/ai-platform/training/docs/working-with-cloud-storage.\n      Note that all of your input and training data will be stored in Cloud buckets.\n    - Authenticate your `gcloud` account and set your default project:\n\n      ```\n      gcloud auth login\n      gcloud config set project [YOUR_PROJECT]\n      ```\n\n+ Optional: prepare your Matterport 3D data and image features.\n\n    TODO\n\n+ Launch training job on GCP\n\n    Each full training job consists of a learner (the main training node), a group\n    of train actors that process and enqueue data for the learner concurrently, as\n    well as several sets of eval actors for the evaluation job, all of which run\n    asynchronously with the learner.  The evaluation job can have multiple data\n    sources, for instance, \"train\", \"val_seen\", and \"val_unseen\" for the training\n    set, the \"val_seen\" set, and \"val_unseen\" set respectively. Each of them has its\n    own group of actors plus one eval aggregator that dequeues and aggregates\n    evaluated examples from all eval actors within this group.\n\n    The learner always runs on the \"master\" node with an accelerator. The train\n    actors run on the \"worker\" nodes and use multi-threading to concurrently load\n    and process the input data. All eval actors and eval aggregators run on the\n    \"evaluator\" nodes. The learner runs on accelerator and all actors run on\n    CPUs.\n\n    - To train a VLN agent using a toy dataset (containing only 3 scans), run the\n      following:\n\n      ```\n      bash gcp/r2r_train_3scans.sh\n      ```\n      This script will first make a copy of `./r2r/testdata`  to a GCS bucket\n      `gs://valan/testdata`, then launch a training example with 1 GPU, 12\n      training actors (3 workers each runs 4 threads), 4 eval actors (including\n      1 eval aggregator) and 4 test actors (including 1 test aggregator).\n\n      To monitor the training status using TensorBoard:\n      https://cloud.google.com/ai-platform/docs/getting-started-tensorflow-estimator#tensorboard-local\n\n      ```\n      tensorboard --logdir=gs://valan/$JOB_DIR\n      ```\n\n      To monitor the job details and logs: http://console.cloud.google.com/ai-platform\n\n      More details on job monitoring can be found here:\n      https://cloud.google.com/ai-platform/training/docs/monitor-training#console\n\n\n    - To train a VLN agent using the full set of R2R data, make sure you data is\n      copied to your GCS bucket, then change the dir paths and configurations\n      defined in the following script accordingly. Then:\n\n      ```\n      bash gcp/r2r_train.sh\n      ```\n\n      Similarly, the training status can be monitored using TensorBoard and the\n      AI-platform console as aforementioned.\n\n      Using the configuration from above and pre-extracted EfficientNet-B4 features,\n      we can get an agent with a success rate of 38.5, SDTW of 32, and SPL of 34,\n      trained on the `R2R_train.json` dataset.\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 63,
      "date": "Wed, 22 Dec 2021 13:55:30 GMT"
    },
    "technique": "GitHub API"
  }
}