{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.01212\n- Used basic chemical features like atomic number and basic geometric features like angles and distances.\n- Had same features for all types but different connectivity for 1JHX, 2JHX and 3JHX\n- Most important part was not the model but how the molecular graph was connected together \n- All geometric features were relative to the atoms at atom index 0 and 1 and 1 or 2 other atoms which I found.\n\n**Molecular Graph Representation**\n\nIn the Gilmer Paper, a molecule is represented as a fully connected graph i.e. there are the default bonds (real bonds"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9623057874652134
      ],
      "excerpt": "Used the MPNN from the Gilmer paper https://arxiv.org/abs/1704.01212 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AJS1NGH/Predicting-Molecular-Properties-Challenge",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-17T00:26:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-04-11T12:55:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8164079933493252,
        0.9169695635654637
      ],
      "excerpt": "Used basic chemical features like atomic number and basic geometric features like angles and distances. \nHad same features for all types but different connectivity for 1JHX, 2JHX and 3JHX \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9463264721443673
      ],
      "excerpt": "All geometric features were relative to the atoms at atom index 0 and 1 and 1 or 2 other atoms which I found. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9963441356948258
      ],
      "excerpt": "In the Gilmer Paper, a molecule is represented as a fully connected graph i.e. there are the default bonds (real bonds) and on top of that each atom is connected to each atom through a fake bond. In the paper, the point is to predict properties that belong to the whole graph and not to a particular edge or a node. So, in order to adapt to the nature of this competition, I used the following representation: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9656129472562812,
        0.8923734234174979
      ],
      "excerpt": "- Connected each atom to the 2 target atoms (atom index 0 and 1) on top of the default real bonds (note how this is not the same as the Gilmer paper where the graph is fully connected) \n-  All geometric features were calculated as relative to the 2 target atoms. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9320361011804313
      ],
      "excerpt": "- Connected each atom to the 3 target atoms on top of the default real bonds. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9320361011804313,
        0.8541882396132151,
        0.8730371971272792
      ],
      "excerpt": "- Connected each atom to the 4 target atoms on top of the default real bonds. \n- Features were calculated relative to all 4 target atoms. \nAlso, I made all the graphs fully bidirectional. Using a fully bidirectional graph gave me a significant improvement over a one-directional graph which was used in the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9249726268579567,
        0.9512283125811326,
        0.9001412711045442,
        0.9834124288767007
      ],
      "excerpt": "I added very little Dropout and BatchNorm in the initial linear transformation layer which actually led to the model performing better.  \nI experimented with adding Dropout in the MLP used by the NNConv and it showed promising results but they were too unstable so I decided to not go through with it. \nI tried adding an attention mechanism over the messages passed by the network but did not see an improvement in score (most likely implemented it incorrectly) \nI also tried using the node vectors of the target atoms only to predict the scc but this actually performed way worse (probably because the way I am representing my molecules does not translate well to using just the node vectors of a subset of nodes) \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 15:22:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AJS1NGH/Predicting-Molecular-Properties-Challenge/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "AJS1NGH/Predicting-Molecular-Properties-Challenge",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/master/Graph%20Final%20Models/MPNN_Test3F.ipynb",
      "https://raw.githubusercontent.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/master/Graph%20Final%20Models/MPNN_Test1F.ipynb",
      "https://raw.githubusercontent.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/master/Graph%20Final%20Models/Train3F.ipynb",
      "https://raw.githubusercontent.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/master/Graph%20Final%20Models/Train2F.ipynb",
      "https://raw.githubusercontent.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/master/Graph%20Final%20Models/MPNN_Test2F.ipynb",
      "https://raw.githubusercontent.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/master/Graph%20Final%20Models/Train1F.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8262889234595397
      ],
      "excerpt": "Train only data \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/AJS1NGH/Predicting-Molecular-Properties-Challenge/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Predicting-Molecular-Properties-Challenge",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Predicting-Molecular-Properties-Challenge",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "AJS1NGH",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/AJS1NGH/Predicting-Molecular-Properties-Challenge/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 15:22:08 GMT"
    },
    "technique": "GitHub API"
  }
}