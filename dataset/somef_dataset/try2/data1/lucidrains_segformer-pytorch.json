{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2105.15203\">Segformer</a>, Attention + MLP neural network for segmentation, in Pytorch.\n\n## Install\n\n```bash\n$ pip install segformer-pytorch\n```\n\n## Usage\n\nFor example, MiT-B0\n\n```python\nimport torch\nfrom segformer_pytorch import Segformer\n\nmodel = Segformer(\n    dims = (32, 64, 160, 256"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@misc{xie2021segformer,\n    title   = {SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers}, \n    author  = {Enze Xie and Wenhai Wang and Zhiding Yu and Anima Anandkumar and Jose M. Alvarez and Ping Luo},\n    year    = {2021},\n    eprint  = {2105.15203},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{xie2021segformer,\n    title   = {SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers}, \n    author  = {Enze Xie and Wenhai Wang and Zhiding Yu and Anima Anandkumar and Jose M. Alvarez and Ping Luo},\n    year    = {2021},\n    eprint  = {2105.15203},\n    archivePrefix = {arXiv},\n    primaryClass = {cs.CV}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/segformer-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-06T19:06:49Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-15T05:28:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation of Segformer, Attention + MLP neural network for segmentation, in Pytorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/segformer-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Fri, 24 Dec 2021 22:05:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lucidrains/segformer-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lucidrains/segformer-pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n$ pip install segformer-pytorch\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lucidrains/segformer-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Phil Wang\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Segformer - Pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "segformer-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lucidrains",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lucidrains/segformer-pytorch/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-08-24T15:22:18Z",
        "datePublished": "2021-08-24T15:22:39Z",
        "html_url": "https://github.com/lucidrains/segformer-pytorch/releases/tag/0.0.6",
        "name": "0.0.6",
        "tag_name": "0.0.6",
        "tarball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/tarball/0.0.6",
        "url": "https://api.github.com/repos/lucidrains/segformer-pytorch/releases/48363748",
        "zipball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/zipball/0.0.6"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-30T02:31:41Z",
        "datePublished": "2021-06-30T02:32:04Z",
        "html_url": "https://github.com/lucidrains/segformer-pytorch/releases/tag/0.0.5",
        "name": "0.0.5",
        "tag_name": "0.0.5",
        "tarball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/tarball/0.0.5",
        "url": "https://api.github.com/repos/lucidrains/segformer-pytorch/releases/45461716",
        "zipball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/zipball/0.0.5"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-23T16:39:02Z",
        "datePublished": "2021-06-23T16:39:19Z",
        "html_url": "https://github.com/lucidrains/segformer-pytorch/releases/tag/0.0.4",
        "name": "0.0.4",
        "tag_name": "0.0.4",
        "tarball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/tarball/0.0.4",
        "url": "https://api.github.com/repos/lucidrains/segformer-pytorch/releases/45113126",
        "zipball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/zipball/0.0.4"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-19T04:13:49Z",
        "datePublished": "2021-06-19T04:14:03Z",
        "html_url": "https://github.com/lucidrains/segformer-pytorch/releases/tag/0.0.3",
        "name": "0.0.3",
        "tag_name": "0.0.3",
        "tarball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/tarball/0.0.3",
        "url": "https://api.github.com/repos/lucidrains/segformer-pytorch/releases/44895622",
        "zipball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/zipball/0.0.3"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-11T14:43:56Z",
        "datePublished": "2021-06-11T14:44:12Z",
        "html_url": "https://github.com/lucidrains/segformer-pytorch/releases/tag/0.0.2",
        "name": "0.0.2",
        "tag_name": "0.0.2",
        "tarball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/tarball/0.0.2",
        "url": "https://api.github.com/repos/lucidrains/segformer-pytorch/releases/44485501",
        "zipball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/zipball/0.0.2"
      },
      {
        "authorType": "User",
        "author_name": "lucidrains",
        "body": "",
        "dateCreated": "2021-06-11T08:38:24Z",
        "datePublished": "2021-06-11T09:08:24Z",
        "html_url": "https://github.com/lucidrains/segformer-pytorch/releases/tag/0.0.1b",
        "name": "0.0.1",
        "tag_name": "0.0.1b",
        "tarball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/tarball/0.0.1b",
        "url": "https://api.github.com/repos/lucidrains/segformer-pytorch/releases/44466392",
        "zipball_url": "https://api.github.com/repos/lucidrains/segformer-pytorch/zipball/0.0.1b"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 139,
      "date": "Fri, 24 Dec 2021 22:05:56 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "artificial-intelligence",
      "deep-learning",
      "attention-mechanism",
      "multilayer-perceptron",
      "segmentation",
      "image-segmentation"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For example, MiT-B0\n\n```python\nimport torch\nfrom segformer_pytorch import Segformer\n\nmodel = Segformer(\n    dims = (32, 64, 160, 256),      #: dimensions of each stage\n    heads = (1, 2, 5, 8),           #: heads of each stage\n    ff_expansion = (8, 8, 4, 4),    #: feedforward expansion factor of each stage\n    reduction_ratio = (8, 4, 2, 1), #: reduction ratio of each stage for efficient attention\n    num_layers = 2,                 #: num layers of each stage\n    decoder_dim = 256,              #: decoder dimension\n    num_classes = 4                 #: number of segmentation classes\n)\n\nx = torch.randn(1, 3, 256, 256)\npred = model(x) #: (1, 4, 64, 64)  #: output is (H/4, W/4) map of the number of segmentation classes\n```\n\nMake sure the keywords are at most a tuple of 4, as this repository is hard-coded to give the MiT 4 stages as done in the paper.\n\n",
      "technique": "Header extraction"
    }
  ]
}