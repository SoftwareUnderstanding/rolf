{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nidolow/image-classification",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-02T13:49:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-07-06T12:51:10Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simple image classification project using Tensorflow. It allows to train DNN model\nand classify images. Contains pretrained models for cat/dog/human recognition.\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9564220659601478
      ],
      "excerpt": "Project was developed using Linux and it is recommended target OS. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9007781176712196
      ],
      "excerpt": "used with Docker. So the only true requirement is Docker itself. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9797750471537887
      ],
      "excerpt": "Data set for pretrained models is not available, since it was delivered as part of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9717981846451735,
        0.8368675929214797,
        0.8368675929214797,
        0.8876353148806385
      ],
      "excerpt": "Original data consisted of: \n* 12000 files of cats \n* 11000 files of dogs \n* 12232 files of human faces \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9022454882065292
      ],
      "excerpt": "There are 3 predefined model architectures (--arch arg) available: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8364186625902724
      ],
      "excerpt": "More training configuration options and parameters can be found with: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9655741379772673
      ],
      "excerpt": "model-HASH.conf - contains json with training configurable parameters and is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8409572317295303
      ],
      "excerpt": "or to evaluate all models located in given folder: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.840808825770875,
        0.875757795748326
      ],
      "excerpt": "Found 3523 validated image filenames belonging to 3 classes. \nModel: models/model-2a05ce2.mdl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9907420761355764
      ],
      "excerpt": "cat models/model-2a05ce2.mdl.data-00001-of-00002.tar.gz.* | tar xzv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8972679516715322
      ],
      "excerpt": "As yet unresolved problem appeared, where predictions and evaluations of same model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.875757795748326
      ],
      "excerpt": "Model: models/model-2a05ce2.mdl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Simple image classification project with tensorflow. Contains pretrained model for cat/dog/human recognition.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nidolow/image-classification/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 03:48:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nidolow/image-classification/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nidolow/image-classification",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nidolow/image-classification/master/notebooks/train_exp.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nidolow/image-classification/master/scripts/run_in_docker_gpu.sh",
      "https://raw.githubusercontent.com/nidolow/image-classification/master/scripts/jupyter.sh",
      "https://raw.githubusercontent.com/nidolow/image-classification/master/scripts/run_in_docker.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8275680990550963
      ],
      "excerpt": "./scripts/run_in_docker.sh python src/train.py --arch vgg_v2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8126655532367836
      ],
      "excerpt": "vgg_v2 - VGG architecture bigger version. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8275680990550963
      ],
      "excerpt": "./scripts/run_in_docker.sh python src/train.py -h \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8272348589411062
      ],
      "excerpt": "About Tensorflow run in docker you can be read here: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "    \u2502       file1.jpg \n    \u2502       file2.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "    \u2502       file3.jpg \n    \u2502       file4.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8639986685036579,
        0.8639986685036579
      ],
      "excerpt": "    \u2502       file5.jpg \n    \u2502       file6.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9255185940782478
      ],
      "excerpt": "./scripts/run_in_docker.sh python src/train.py --arch vgg_v2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9255185940782478
      ],
      "excerpt": "./scripts/run_in_docker.sh python src/train.py -h \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.800609577945832,
        0.8208833068805476
      ],
      "excerpt": "Remember to have training data set up. \nTraining results be default will be located in folder: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8083153068170761
      ],
      "excerpt": "Along with tensorflow model checkpoint files, there are stored additional files: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8190410534187224,
        0.9014657912067421
      ],
      "excerpt": "To get more detailed evaluation on test set separated from training data, run: \n./scripts/run_in_docker.sh python src/evaluate.py -m models/model-HASH.mdl \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.893376666363865
      ],
      "excerpt": "./scripts/run_in_docker.sh python src/evaluate.py -d models/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9013411691517134,
        0.9372758931282875,
        0.9186326912015665
      ],
      "excerpt": "To classify jpg images run: \n./scripts/run_in_docker.sh python src/predict.py -m models/model-2a05ce2.mdl \\ \n        -d data/samples/ -o output_file.csv \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8856470296988388,
        0.925234370130887
      ],
      "excerpt": "pass separate files as arguments. Results will be stored in csv format in file \npassed with option [-o output_file]. Example output file: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.844894840552642
      ],
      "excerpt": "Evaluation on test set separated from training data (10% of original data set): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8921886753069443
      ],
      "excerpt": "/scripts/run_in_docker_gpu.sh python src/train.py -a --width 256 --height 256 \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nidolow/image-classification/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 nidolow\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Introduction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "image-classification",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nidolow",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nidolow/image-classification/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 21 Dec 2021 03:48:24 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To start working with tensorflow in docker run:\n\n```\n./scripts/run_in_docker.sh bash\n```\n\nor if you can work with GPU:\n\n```\n./scripts/run_in_docker_gpu.sh bash\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}