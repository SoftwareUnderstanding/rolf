{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1505.04597\n* Kaggle MRI Dataset: https://www.kaggle.com/mateuszbuda/lgg-mri-segmentation\n* Some of the initial data visualization code was adapted from this notebook of a Keras UNet: https://www.kaggle.com/monkira/brain-mri-segmentation-using-unet-keras/notebook"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Original UNet Paper: https://arxiv.org/abs/1505.04597\n* Kaggle MRI Dataset: https://www.kaggle.com/mateuszbuda/lgg-mri-segmentation\n* Some of the initial data visualization code was adapted from this notebook of a Keras UNet: https://www.kaggle.com/monkira/brain-mri-segmentation-using-unet-keras/notebook\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PurabPatel555/Pytorch-UNet-Brain-MRI",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-11T22:56:55Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-11T23:21:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A UNet implementation in Pytorch for semantic segmentation of Brain MRI images.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PurabPatel555/Pytorch-UNet-Brain-MRI/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:22:25 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PurabPatel555/Pytorch-UNet-Brain-MRI/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "PurabPatel555/Pytorch-UNet-Brain-MRI",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/PurabPatel555/Pytorch-UNet-Brain-MRI/master/mri-unet.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/PurabPatel555/Pytorch-UNet-Brain-MRI/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pytorch-UNet-Brain-MRI",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pytorch-UNet-Brain-MRI",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "PurabPatel555",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/PurabPatel555/Pytorch-UNet-Brain-MRI/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 04:22:25 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is a self contained Kaggle script-there are no requirements for your local environment\n\nIf you are using a Kaggle notebook with the dataset in the Credits section below, the default folder structure should already be compatible with this script. However, you can change the PATH variable in the script if you would like the model weights to be saved at a different location than the default. GPU training is recommended for timing reasons. \n\nNote that due to the difficulty of incorporating \"same\" padding in PyTorch (relative to Keras for example), the paddings are set manually based on the image size, kernel sizes, strides, etc. Therefore, if you choose to use an input size other than 256x256, you might need to manually change the paddings to ensure the \"same\" convolutions are preserved.  \n\n\n",
      "technique": "Header extraction"
    }
  ]
}