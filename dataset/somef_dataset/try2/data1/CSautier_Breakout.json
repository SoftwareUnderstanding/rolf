{
  "citation": [
    {
      "confidence": [
        0.8100655823024339
      ],
      "excerpt": "This algorithm works differently: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CSautier/Breakout",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-04T11:57:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-15T09:55:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9438319000273659
      ],
      "excerpt": "The optimization is a standard PPO implementation, however the point was to push the limits of what a limited computer  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9032051306404102
      ],
      "excerpt": "multiples processes try to access a single gpu, most of the computation time will be lost to each process waiting for  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9097955996302578
      ],
      "excerpt": "and not multiprocessed algorithms. Furthermore it necessitated the net to be copied on multiple processes, wich was very  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch multiprocessing PPO implementation playing Breakout",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CSautier/Breakout/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 30 Dec 2021 01:38:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/CSautier/Breakout/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "CSautier/Breakout",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8639251605875155
      ],
      "excerpt": "* when a playing process requires the gpu, it sends the operation to execute to the gpu process, and the gpu process  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/CSautier/Breakout/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pytorch multiprocessing PPO implementation playing Breakout",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Breakout",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "CSautier",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/CSautier/Breakout/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Pytorch\n* Numpy\n* gym (Atari)\n* a few standard libraries such as argparse, time, os\n* There is no guarantee this will work in python 2, or without a GPU\n* around 2Gb of RAM for each core of your CPU with the recommended number of workers\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 30 Dec 2021 01:38:29 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Clone this repository: `git clone https://github.com/CSautier/Breakout`\n* Launch the game in a shell: `python Breakout.py`\n* If you'd prefer a faster training, you can deactivate the visualization: `python Breakout.py --render False`\n\n",
      "technique": "Header extraction"
    }
  ]
}