{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1611.07004   \n- https://github.com/tensorflow/docs/blob/master/site/en/r2/tutorials/generative/pix2pix.ipynb  \n- The code is written with tensorflow eager execution (2.0"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Implementation of \"Image-to-image translation with conditional adversarial networks\"    \n- https://arxiv.org/abs/1611.07004   \n- https://github.com/tensorflow/docs/blob/master/site/en/r2/tutorials/generative/pix2pix.ipynb  \n- The code is written with tensorflow eager execution (2.0)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "Epoch 30 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Baichenjia/Pix2Pix-eager",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-10T02:40:09Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T10:59:31Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8593798960676988
      ],
      "excerpt": "Modify the BASE_PATH variable in pix2pix.py to the data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.883202121369538,
        0.8303240882105845
      ],
      "excerpt": "The Generator is a U-NET and defined in PixGenerator.py. The output is tanh activated. \nThe Discriminator is a PatchGAN network with size 30*30. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9785795529716742,
        0.951102655872588
      ],
      "excerpt": "The DropOut is used in training and testing, according to the paper. There is no random vector z as input like \noriginal GAN. The random of input is represented by dropout. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow eager implementation of Pix2Pix (Image-to-image translation with conditional adversarial networks)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Baichenjia/Pix2Pix-eager/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 30 Dec 2021 05:57:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Baichenjia/Pix2Pix-eager/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Baichenjia/Pix2Pix-eager",
    "technique": "GitHub API"
  },
  "invocation": [
    {
      "confidence": [
        0.9246788536836585
      ],
      "excerpt": "run python pix2pix.py to train the model, the weights will \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8882033515879054
      ],
      "excerpt": "run python test.py to load weights from weights/ and generate 5 images. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Baichenjia/Pix2Pix-eager/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pix2Pix",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Pix2Pix-eager",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Baichenjia",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Baichenjia/Pix2Pix-eager/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Thu, 30 Dec 2021 05:57:27 GMT"
    },
    "technique": "GitHub API"
  }
}