{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* [C. Ledig, L. Theis, F. Huszar, J. Caballero, A. Cunningham, A. Acosta, A. Aitken, A. Tejani, J. Totz, Z. Wang, W. Shi, Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network, accepted at CVPR (oral), 2017.](https://arxiv.org/pdf/1609.04802.pdf)\n* [D.-T. Dang-Nguyen, C. Pasquini, V. Conotter, G. Boato, RAISE \u2013 A Raw Images Dataset for Digital Image Forensics, ACM Multimedia Systems, Portland, Oregon, March 18-20, 2015\".](http://mmlab.science.unitn.it/RAISE/)\n* [Isola, P., Zhu, J.Y., Zhou, T., Efros, A.A. Image-to-Image Translation with Conditional Adversarial Networks CVPR, 2017.](https://arxiv.org/pdf/1611.07004v1.pdf)\n* [pix2pix-tensorflow](https://github.com/affinelayer/pix2pix-tensorflow)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        <td><center>Inputs</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "        <td><center>Inputs</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": ":!/usr/bin/env bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8955886365383559
      ],
      "excerpt": "        <td><center>PSNR</center></td> \n        <td><center>content loss</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": ":!/usr/bin/env bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "    --queue_thread 10 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8955886365383559,
        0.8955886365383559,
        0.8955886365383559
      ],
      "excerpt": "        <td><center>PSNR</center></td> \n        <td><center>content loss</center></td> \n        <td><center>adversarial loss</center></td> \n        <td><center>discriminator loss</center></td> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": ":!/usr/bin/env bash \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "    --queue_thread 10 \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559,
        0.8955886365383559,
        0.8955886365383559,
        0.8955886365383559
      ],
      "excerpt": "        <td><center>PSNR</center></td> \n        <td><center>content loss</center></td> \n        <td><center>adversarial loss</center></td> \n        <td><center>discriminator loss</center></td> \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/brade31919/SRGAN-tensorflow",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-07-16T13:08:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-11T06:21:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This project is a tensorflow implementation of the impressive work  [Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network](https://arxiv.org/pdf/1609.04802.pdf). <br />\nThe result is obtained following to same setting from the v5 edition of the [paper on arxiv](https://arxiv.org/pdf/1609.04802.pdf). However, due to limited resources, I train my network on the [RAISE dataset](http://mmlab.science.unitn.it/RAISE/) which contains 8156 high resoution images captured by good cameras. As the results showed below, the performance is close to the result presented in the paper without using the imagenet training set. <br />\nThe result on BSD100, Set14, Set5 will be reported later. The code is highly inspired by the [pix2pix-tensorflow](https://github.com/affinelayer/pix2pix-tensorflow).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8688872006635608
      ],
      "excerpt": "The comparison of some result form my implementation and the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8929157516311576
      ],
      "excerpt": "The code is tested on: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.80966058911233
      ],
      "excerpt": "    --flip True \\                        #:flip and random_crop are online data augmentation method  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "    --input_dir_HR ./data/RAISE_HR/ \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9393695086931624
      ],
      "excerpt": "    --queue_thread 12 \\                  #:Cpu threads for the data provider. We suggest >4 to speedup the training  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8979411005071259
      ],
      "excerpt": "    --input_dir_LR ./data/RAISE_LR/ \\ \n    --input_dir_HR ./data/RAISE_HR/ \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259,
        0.8979411005071259
      ],
      "excerpt": "    --input_dir_LR ./data/RAISE_LR/ \\ \n    --input_dir_HR ./data/RAISE_HR/ \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481833482509978
      ],
      "excerpt": "    --decay_step 100000 \\                             #: Set the decay step to 100000 to follow the settings on the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537345051629799
      ],
      "excerpt": "    --max_iter 200000 \\                               #: Set the max_iter to 200000 to follow the settings on the paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9494596113138387
      ],
      "excerpt": "    --checkpoint ./experiment_SRGAN_MSE/model-500000     #:Load the weights of the model from the SRGAN with MSE loss \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow implementation of the SRGAN algorithm for single image super-resolution",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/brade31919/SRGAN-tensorflow/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 283,
      "date": "Thu, 23 Dec 2021 07:13:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/brade31919/SRGAN-tensorflow/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "brade31919/SRGAN-tensorflow",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/brade31919/SRGAN-tensorflow/master/test_SRGAN.sh",
      "https://raw.githubusercontent.com/brade31919/SRGAN-tensorflow/master/inference_SRGAN.sh",
      "https://raw.githubusercontent.com/brade31919/SRGAN-tensorflow/master/train_SRResnet.sh",
      "https://raw.githubusercontent.com/brade31919/SRGAN-tensorflow/master/train_SRGAN.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To run the training process, things will become a little complicated. Follow the steps below carefully!!<br />\nGo to the project root directory. Download the vgg weight from [TF-silm model](http://download.tensorflow.org/models/vgg_19_2016_08_28.tar.gz)<br />\n \n```bash\n#: make the directory to put the vgg19 pre-trained model\nmkdir vgg19/\ncd vgg19/\nwget http://download.tensorflow.org/models/vgg_19_2016_08_28.tar.gz\ntar xvf ./vgg19_2016_08_28.tar.gz\n```\nDownload the training dataset. The dataset contains the 8156 images from the RAISE dataset. I preprocess all the TIFF images into png with 5x downscale as the high-resolution images. The low-resolution image is obtained by 4x downscale of the high-resolution image. <br />\nDownload the two file from the google drive link: <br />\n[High-resolution images](https://drive.google.com/file/d/0BxRIhBA0x8lHYXNNVW5YS0I2eXM/view?usp=sharing)<br />\n[Low-resolution images](https://drive.google.com/file/d/0BxRIhBA0x8lHNnJFVUR1MjdMWnc/view?usp=sharing)<br />\nPut the two .tar files to SRGAN/data/. Go to project root (SRGAN/)<br />\n\nTypically, we need to follow the training process in the paper\n 1. Train the SRResnet with 1000000 iterations\n 2. [optional] Train the SRGAN with the weights from the generator of SRResnet for 500000 iterations using the **MSE loss**.\n 3. Train the SRGAN with the weights from the generator and discriminator of SRGAN (MSE loss) for 200000 iterations using the  **VGG54 perceptual loss**.\n \n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8265784874372618
      ],
      "excerpt": "tensorflow (tested on r1.0, r1.2) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8314770223536923
      ],
      "excerpt": "Download the VGG19 weights from the TF-slim models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9413059142006982,
        0.9100723968848226
      ],
      "excerpt": "Ubuntu 16.04 with tensorflow GPU edition \nEdit the train_SRResnet.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8710155283883377
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python main.py \\  #:Set CUDA devices correctly if you use multiple gpu system \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.9023697225149864
      ],
      "excerpt": "cd $SRGAN-tensorflow_ROOT/ \nsh train_SRResnet.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9418464179886339
      ],
      "excerpt": "cd ./experiment_SRResnet/log/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9100723968848226
      ],
      "excerpt": "Edit the train_SRGAN.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.9023697225149864
      ],
      "excerpt": "cd $SRGAN-tensorflow_ROOT/ \nsh train_SRGAN.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9418464179886339
      ],
      "excerpt": "cd ./experiment_SRGAN_MSE/log/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9205495747541491
      ],
      "excerpt": "modify the train_SRGAN.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.9023697225149864
      ],
      "excerpt": "cd $SRGAN-tensorflow_ROOT/ \nsh train_SRGAN.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9418464179886339
      ],
      "excerpt": "cd ./experiment_SRGAN_VGG54/log/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8011637020622918
      ],
      "excerpt": "            <center><img src=\"./pic/SRGAN/baboon_LR.png\" height=\"200\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8099494994157422
      ],
      "excerpt": "            <center><img src=\"./pic/images/img_001-outputs.png\" height=\"200\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8011637020622918
      ],
      "excerpt": "            <center><img src=\"./pic/SRGAN/baboon_SRGAN-VGG54.png\" height=\"200\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8240798715207609
      ],
      "excerpt": "            <center><img src=\"./pic/images/img_001-targets.png\" height=\"200\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8035471254277902,
        0.8334871063052787
      ],
      "excerpt": "Download and extract the pre-trained model from my google drive \nDownload the VGG19 weights from the TF-slim models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414384768071093,
        0.8594142235991984
      ],
      "excerpt": "    --mode train \\  \n    --is_training True \\  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    --random_crop True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8441419701226024
      ],
      "excerpt": "    --input_dir_LR ./data/RAISE_LR/ \\    #:Set the training data path correctly \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    --stair True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRResnet_PSNR.png\" width=\"500\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRResnet_content_loss.png\" width=\"500\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8971949314940248
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python main.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414384768071093,
        0.8594142235991984
      ],
      "excerpt": "    --mode train \\ \n    --is_training True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8242144417012007,
        0.8594142235991984
      ],
      "excerpt": "    --flip True \\ \n    --random_crop True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    --stair True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172676244256666,
        0.8198064186614706
      ],
      "excerpt": "    --pre_trained_model True \\                  #:Use the pre-trained model \n    --checkpoint ./experiment_SRGAN_MSE/model-500000       #:Set the pre-trainde model you want to load \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_MSE_PSNR.png\" width=\"250\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_MSE_cl.png\" width=\"240\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_MSE_ad.png\" width=\"250\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_MSE_dl.png\" width=\"250\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8466191315168243
      ],
      "excerpt": "CUDA_VISIBLE_DEVICES=0 python main.py \\              #:Set the place to put the checkpoint and log. You can put it anywhere you like. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414384768071093,
        0.8594142235991984
      ],
      "excerpt": "    --mode train \\ \n    --is_training True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8242144417012007,
        0.8594142235991984
      ],
      "excerpt": "    --flip True \\ \n    --random_crop True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    --stair True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "    --pre_trained_model True \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_VGG_PSNR.png\" width=\"250\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_VGG_cl.png\" width=\"240\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_VGG_ad.png\" width=\"250\"></center> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8152056314713492
      ],
      "excerpt": "            <center><img src=\"./pic/result/SRGAN_VGG_dl.png\" width=\"250\"></center> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/brade31919/SRGAN-tensorflow/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SRGAN-tensorflow",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "SRGAN-tensorflow",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "brade31919",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/brade31919/SRGAN-tensorflow/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n#: clone the repository from github\ngit clone https://github.com/brade31919/SRGAN-tensorflow.git\ncd $SRGAN-tensorflow_ROOT/\n\n#: Download the pre-trained model from the google-drive\n#: Go to https://drive.google.com/a/gapp.nthu.edu.tw/uc?id=0BxRIhBA0x8lHNDJFVjJEQnZtcmc&export=download\n#: Download the pre-trained model to SRGAN-tensorflow/\ntar xvf SRGAN_pre-trained.tar\n\n#: Run the test mode\nsh test_SRGAN.sh\n\n#:The result can be viewed at $SRGAN-tensorflow_ROOT/result/images/\n```\n<br />\n\n* ",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\ncd $SRGAN-tensorflow_ROOT/\n\n#: Download the pre-trained model from the google-drive\n#: Go to https://drive.google.com/a/gapp.nthu.edu.tw/uc?id=0BxRIhBA0x8lHNDJFVjJEQnZtcmc&export=download\n#: Download the pre-trained model to SRGAN-tensorflow/\ntar xvf SRGAN_pre-trained.tar\n\n#: put your png images in the your own directory\n#: For example\nmkdir myImages\n#: put some images in it\n```\nmodify the path in inference_SRGAN.sh\n```bash\n#:!/usr/bin/env bash\nCUDA_VISIBLE_DEVICES=0 python main.py \\\n    --output_dir ./result/ \\\n    --summary_dir ./result/log/ \\\n    --mode inference \\\n    --is_training False \\\n    --task SRGAN \\\n    --input_dir_LR ./data/myImages/ \\        #: Modify the path to your image path\n    --num_resblock 16 \\\n    --perceptual_mode VGG54 \\\n    --pre_trained_model True \\\n    --checkpoint ./SRGAN_pre-trained/model-200000\n\n```\n```bash\n#: Run the test mode\nsh inference_SRGAN.sh\n\n#:The result can be viewed at $SRGAN-tensorflow_ROOT/result/images/\n```\n<br />\n\n* ",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 792,
      "date": "Thu, 23 Dec 2021 07:13:24 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "tensorflow",
      "super-resolution",
      "generative-adversarial-network",
      "srgan",
      "vgg19",
      "pretrained-models",
      "cnn",
      "tf-slim"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Throughout the project, we denote the directory you cloned the repo as ```SRGAN-tensorflow_ROOT```<br />\n\n* ",
      "technique": "Header extraction"
    }
  ]
}