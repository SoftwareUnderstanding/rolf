{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1706.03762"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paulskeie/stadnamn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-18T19:51:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-05T17:45:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9877568603606399
      ],
      "excerpt": "The goal of this weekend project is to play with the transformer architecture and at the same time get to use some Norwegian language data in the way they are manifested in Norwegian place names, stadnamn. The general idea is to teach the transformer to predict the next character in a place name. I thought it could work like a typical autocomplete, so that it can complete a place name once you seed it with zero, one, two or more letters. The transformer code is from the Keras example text classification with transformer by Nandan Apoorv and I have adapted it somewhat to this task. The transformer architecture was introduced in the Attention is all you need paper first submitted to the Arxiv server in 2017. As a side note, it was submitted on my birthday. I really admire the ingenuity of the transformer architecture and me and my collegue Lubos Steskal had a great session dissecting it on the blackboard. I like how this task combines the old Norwegian place names with the fairly new transformer architecture. The neural network should learn quite a bit about how Norwegian place names are composed and it will be fun to see whether it can come up with new ones that have the look and feel of a Norwegian place name. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9889186136153881
      ],
      "excerpt": "Search for \"stedsnavn\" in the data catalogue. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8678388845067185,
        0.9574121192329865
      ],
      "excerpt": "Have a look in the Jupyter notebook stadnamn for more details. However, stadnamn.csv was added to the repo for convenience. \nThe model was trained for free using colab and data was persisted to Google Disk. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185678157636262,
        0.9780399308174282,
        0.9665425835218495,
        0.8098433204322759
      ],
      "excerpt": "The model must be registered to AzureML, see how to in register_model_azure.py. \nSee how to deploy to your local machine in deploy_azure.py. The model can be deployed to an ACI or kubernetes using a few additional lines of code. \nTo try the API there is a consume_azure.py that hits the api n times with a few different seeds and that outputs the results to a markdown table. \nCurrently there are two sampling methods, a standard sampling method that always picks the most probable next character. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Character level self-supervised model to generate Norwegian place names",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paulskeie/stadnamn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 26 Dec 2021 17:21:51 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/paulskeie/stadnamn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "paulskeie/stadnamn",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/paulskeie/stadnamn/main/stadnamn.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/paulskeie/stadnamn/main/extract.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9234747314517084
      ],
      "excerpt": "Extract the place names into csv using your favourite xml parser or use the code below or run bash extract.sh if on a mac or linux system \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/paulskeie/stadnamn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "stadnamn",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "stadnamn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "paulskeie",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/paulskeie/stadnamn/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 26 Dec 2021 17:21:51 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The column header shows the seed for that column. If the header contains the empty string \"\" it means the model must produce the first character in the place name. Note that the model is casing aware.\n\n|   \"\"   |    \"\"    |    \"\"    |    \"\"    | Vestr    | \u00d8stre\n-------- | -------- | -------- | -------- | -------- | --------\nFortenvika | Storfjellet | Hestberget | Salpon\u00f8yv\u00e5gen | Vestre Kjollen | \u00d8stren\nKol\u00f8ya | Gravd\u00e5dalen | S\u00f8rhaugen | T\u00f8mmelibrua | Vestrane | \u00d8stre Varde\nSneveaflua | S\u00f8rneebotn | Flaten | H\u00e5rheim | Vestre Gr\u00f8nnholmen | \u00d8stre Kvernhaugen\nVagemyrhaugen | Orrerdalen | Vifjellskj\u00e6rberget | Stormoen | Vestre Ganegrunnanturveg | \u00d8stre Sag\nSteina | Medagen | Har-buholmen | Risa | Vestre nortelveien | \u00d8strendgurd\nOsen | Husvatnet | Nybakken | Nysn\u00f8 | Vestre Haugen | \u00d8stre \u00d8vrengetan\nBorgita | Svartbakken | Heithaugen | Sk\u00e1iuhelelen | Vestre St\u00f8le | \u00d8stredalskj\u00e6r\n\u00d8vre h\u00f8gda | M\u00e1bbetn, bua | Storengard | Steindalsheia | Vestre Fryvassbruneset | \u00d8stre L\u00f8kstad\nMerkskardet | Skrud | Stordre Lodgegjer t\u00f8m | Storoialva | Vestre Hifjell | \u00d8stre Veslen\nGvapesk\u00e1dj\u00e1vri | Beiseberget | Austre Reaneset | Haugen | Vestre S\u00f8rest\u00f8ya | \u00d8stredal\n\n",
      "technique": "Header extraction"
    }
  ]
}