{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.09820v2 (https://arxiv.org/pdf/1803.09820.pdf). Provides utility functions to perform initial learn rate range testing with a given `tf.keras.Model` object and a `tf.data.Dataset` object.  This greatly reduces time in finding effective hyperparameters, as learning rate is the most influential, behind batch_size and model complexity (see paper for details).\n\n![alt text](https://github.com/ifrit98/lr_range_test/raw/master/assets/lr_range.png \"Learning Rate Range Test Results\")\n\n\n## Installation\n```{bash"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ifrit98/lr_range_test",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-30T15:18:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-30T15:22:44Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "`lr_range_test` is a python module inspired by the Learning Rate Range Test a la Leslie N. Smith: (https://arxiv.org/pdf/1803.09820.pdf).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ifrit98/lr_range_test/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 22:13:05 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ifrit98/lr_range_test/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ifrit98/lr_range_test",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```{bash}\ngit clone https://github.com/ifrit98/lr_range_test.git\ncd lr_range_test && pip install .\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8216715993942442
      ],
      "excerpt": "Tested with Python &gt;= 3.6.8 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ifrit98/lr_range_test/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "lr_range_test",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "lr_range_test",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ifrit98",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ifrit98/lr_range_test/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sat, 25 Dec 2021 22:13:05 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```{python}\nimport lr_range_test as lrt\nlrt.demo()\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```{python}\nimport lr_range_test as lrt\n\nds = my_custom_dataset() #: a tf.data.Dataset object\nval = my_custom_val_dataset() #: a tf.data.Dataset object\n\nmodel = my_keras_model(lr) #: custom keras model via tf.keras.Model()\n\n#: Initial (min) Learning Rate \ninit_lr = 0.001\n#: Max learning rate to use in range test\nmax_lr = 2\n\n#: Perform the range test\n(new_min_lr, new_max_lr) = lrt.learn_rate_range_test(\n    model, ds, init_lr=init_lr, max_lr=max_lr)\n\n#: Recompile model, start with new max_lr and schedule decrease to min_lr\nmodel = my_keras_model(lr=new_max_lr)\nh = model.fit(ds, validation_data=val_ds)\n\n#: View metrics from history object from run with new lr params\nlrt.plot_metrics(h)\n\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}