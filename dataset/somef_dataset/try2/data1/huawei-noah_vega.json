{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1909.04977",
      "https://arxiv.org/abs/2004.01395",
      "https://arxiv.org/abs/1909.11409",
      "https://arxiv.org/abs/1810.10804",
      "https://arxiv.org/abs/1911.09929",
      "https://arxiv.org/abs/2007.12147",
      "https://arxiv.org/abs/1810.05934",
      "https://arxiv.org/abs/1807.01774",
      "https://arxiv.org/abs/1905.05393",
      "https://arxiv.org/abs/2002.11022",
      "https://arxiv.org/abs/2003.11342v1"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```text\n@misc{wang2020vega,\n      title={VEGA: Towards an End-to-End Configurable AutoML Pipeline},\n      author={Bochao Wang and Hang Xu and Jiajin Zhang and Chen Chen and Xiaozhi Fang and Ning Kang and Lanqing Hong and Wei Zhang and Yong Li and Zhicheng Liu and Zhenguo Li and Wenzhi Liu and Tong Zhang},\n      year={2020},\n      eprint={2011.01507},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "| object | refrence |\n| :--: | :-- |\n| [**User**<br>(User Guide)](./docs/en/user/README.md) | [Install Guide](./docs/en/user/install.md), [Deployment Guide](./docs/en/user/deployment.md), [Configuration Guide](./docs/en/user/config_reference.md), [Examples](./docs/en/user/examples.md), [Evaluate Service](./docs/en/user/evaluate_service.md) |\n| [**Developer**<br>(Developer Guide)](./docs/en/developer/README.md) | [Development Reference](./docs/en/developer/developer_guide.md), [Quick Start Guide](./docs/en/developer/quick_start.md), [Dataset Guide](./docs/en/developer/datasets.md), [Algorithm Development Guide](./docs/en/developer/new_algorithm.md), [Fine-Grained Search Space Guide](./docs/en/developer/fine_grained_space.md) |\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{wang2020vega,\n      title={VEGA: Towards an End-to-End Configurable AutoML Pipeline},\n      author={Bochao Wang and Hang Xu and Jiajin Zhang and Chen Chen and Xiaozhi Fang and Ning Kang and Lanqing Hong and Wei Zhang and Yong Li and Zhicheng Liu and Zhenguo Li and Wenzhi Liu and Tong Zhang},\n      year={2020},\n      eprint={2011.01507},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9713906081615593
      ],
      "excerpt": "| NAS | ESR-EA: Efficient Residual Dense Block Search for Image Super-resolution | Multi-objective image super-resolution based on network architecture search | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.943710652470325
      ],
      "excerpt": "| NAS | SP-NAS: Serial-to-Parallel Backbone Search for Object Detection | Serial-to-Parallel Backbone Search for Object Detection Efficient Search Algorithm for Object Detection and Semantic Segmentation in Trunk Network Architecture | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888
      ],
      "excerpt": "| HPO | ASHA: Asynchronous Successive Halving Algorithm | Dynamic continuous halving algorithm | ref | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huawei-noah/vega",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-20T08:20:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T02:02:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Vega is an AutoML algorithm tool chain developed by Noah's Ark Laboratory, the main features are as follows:\n\n1. Full pipeline capailities: The AutoML capabilities cover key functions such as Hyperparameter Optimization, Data Augmentation, Network Architecture Search (NAS), Model Compression, and Fully Train. These functions are highly decoupled and can be configured as required, construct a complete pipeline.\n2. Industry-leading AutoML algorithms: Provides Noah's Ark Laboratory's self-developed **[industry-leading algorithm (Benchmark)](./docs/benchmark.md)** and **[Model Zoo](./docs/model_zoo.md)** to download the state-of-the-art (SOTA) models.\n3. Fine-grained network search space: The network search space can be freely defined, and rich network architecture parameters are provided for use in the search space. The network architecture parameters and model training hyperparameters can be searched at the same time, and the search space can be applied to Pytorch, TensorFlow and MindSpore.\n4. High-concurrency neural network training capability: Provides high-performance trainers to accelerate model training and evaluation.\n5. Multi-Backend: PyTorch (GPU and Ascend 910), TensorFlow (GPU and Ascend 910), MindSpore (Ascend 910).\n6. Ascend platform: Search and training on the Ascend 910 and model evaluation on the Ascend 310.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9109575845012063
      ],
      "excerpt": "| Vega | PyTorch,\u00a0TensorFlow,\u00a0MindSpore | Random Search, Grid Search,\u00a0Bayesian,\u00a0Hyper-Band,\u00a0Evolution | Random Search, Gradient-Based, Evalution, One-Shot | Ascend 310, Kirin 980/990 | Quota (filter model based on parameters, flops, latency) | provides networks compatibility with PyTorch, TensorFlow, and MindSpore | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8452486899648675
      ],
      "excerpt": "| NAS | CARS: Continuous Evolution for Efficient Neural Architecture Search | Structure Search Method of Multi-objective Efficient Neural Network Based on Continuous Evolution | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8314726916393639
      ],
      "excerpt": "| NAS | NAGO: Neural Architecture Generator Optimization | An Hierarchical Graph-based Neural Architecture Search Space | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8155841108193757
      ],
      "excerpt": "| NAS | ESR-EA: Efficient Residual Dense Block Search for Image Super-resolution | Multi-objective image super-resolution based on network architecture search | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9205631288628535
      ],
      "excerpt": "| NAS | Auto-Lane: CurveLane-NAS | An End-to-End Framework Search Algorithm for Lane Lines | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9735287515777002
      ],
      "excerpt": "| Model Compression | Quant-EA: Quantization based on Evolutionary Algorithm | Automatic mixed bit quantization algorithm, using evolutionary strategy to quantize each layer of the CNN network | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8624036241954138,
        0.9040291260733654,
        0.9893141364114846
      ],
      "excerpt": "| HPO | BOHB: Hyperband with Bayesian Optimization | Hyperband with Bayesian Optimization | ref | \n| HPO | BOSS: Bayesian Optimization via Sub-Sampling | A universal hyperparameter optimization algorithm based on Bayesian optimization framework for resource-constraint hyper-parameters search | ref | \n| Data Augmentation | PBA: Population Based Augmentation: Efficient Learning of Augmentation Policy Schedules | Data augmentation based on PBT optimization  | ref | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "AutoML tools chain",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huawei-noah/vega/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For common problems and exception handling, please refer to [FAQ](./docs/en/user/faq.md).\n\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 138,
      "date": "Thu, 23 Dec 2021 13:35:45 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huawei-noah/vega/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "huawei-noah/vega",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/huawei-noah/vega/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/huawei-noah/vega/master/vega/visual/visualizer.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/huawei-noah/vega/master/vega/core/pipeline/horovod/run_horovod_train.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/vega/evaluator/tools/pytorch2caffe.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/get_latency_from_log.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/model_convert.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/inference_atlas200.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/compile_atlas200.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/inference_atlas300.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/compile_atlas300.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/env/env_atlas200dk.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/env/env_evb.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/env/check_atlas300.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/davinci/env/env_atlas300.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/mobile/get_latency_from_log.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/mobile/model_convert.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/mobile/inference_bolt.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/kirin990_npu/model_convert.sh",
      "https://raw.githubusercontent.com/huawei-noah/vega/master/evaluate_service/hardwares/kirin990_npu/inference_kirin990_npu.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Run the following commands to install Vega and related open-source software:\n\n```bash\npip3 install --user --upgrade noah-vega\n```\n\nIf you need to install the Ascend 910 training environment, please contact us.\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huawei-noah/vega/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "C++",
      "Shell",
      "CMake",
      "C"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Noah\\'s Ark Lab / Huawei\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vega",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "vega",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "huawei-noah",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huawei-noah/vega/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "- Bug fixes:\r\n\r\n  - Maximum number of evaluation service attempts.\r\n  - Use SafeLoader to load the YAML file.\r\n  - Catch evaluation service input parameter exceptions.",
        "dateCreated": "2021-10-11T06:31:38Z",
        "datePublished": "2021-10-11T06:34:26Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.7.1",
        "name": "v1.7.1",
        "tag_name": "v1.7.1",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.7.1",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/51118950",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.7.1"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "- Feature enhancement:\r\n\r\n  - Releases Ascend MindStudio version.\r\n  - Provides data parallel training capabilities for Horovod (GPU) and HCCL (NPU).\r\n  - Fixed bug: The BOHB algorithm may not automatically stop after more than three rounds.",
        "dateCreated": "2021-09-27T12:57:21Z",
        "datePublished": "2021-09-27T13:00:58Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.7.0",
        "name": "v1.7.0",
        "tag_name": "v1.7.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.7.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/50317709",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.7.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "- Bug Fixes:\r\n  - Evaluation time error in log.\r\n  - Updating error model description while updating record.",
        "dateCreated": "2021-08-16T03:35:03Z",
        "datePublished": "2021-08-16T03:38:20Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.6.1",
        "name": "v1.6.1",
        "tag_name": "v1.6.1",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.6.1",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/47883698",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.6.1"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "- Feature enhancement:\r\n\r\n  - Supports simple quota settings, for example, `quota: flops < 11.2 and params in [34.0, 56.0]`.\r\n  - Supports running Vega in a Python virtual environment.\r\n  - Supported running environments: Python 3.8 and PyTorch 1.9.\r\n  - Fixed some bugs with parallel training and distributed search.",
        "dateCreated": "2021-08-11T09:42:14Z",
        "datePublished": "2021-08-11T09:44:58Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.6.0",
        "name": "v1.6.0",
        "tag_name": "v1.6.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.6.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/47658452",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.6.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "- Feature enhancement:\r\n\r\n  - Fixed some bugs in distributed training.\r\n  - Some networks support PyTorch + Ascend 910.\r\n  - The Vega-process, Vega-progress, and vega-verify-cluster commands provide JSON format information.\r\n",
        "dateCreated": "2021-06-26T07:45:30Z",
        "datePublished": "2021-06-26T07:45:45Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.5.0",
        "name": "v1.5.0",
        "tag_name": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.5.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/45270375",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.5.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "- Feature enhancement:\r\n\r\n  - Support TensorFlow and Mindpore distributed training in the search phase.\r\n  - The classification and detection joint training with same backend.\r\n  - Dynamically setting transformers.\r\n  - Added tools such as vega-process and vega-progress.\r\n  - New trainer ScriptRunner that directly invoke user scripts during the HPO process.\r\n  - The BO of the BOHB can use [HEBO](https://github.com/huawei-noah/noah-research/tree/master/HEBO).\r\n\r\n- New algorithm:\r\n\r\n  - [PBT](https://arxiv.org/abs/1711.09846)\uff1aPopulation Based Training of Neural Networks\r\n  - [Ada-Segment](https://arxiv.org/abs/2012.03603): Automated Multi-loss Adaptation for Panoptic Segmentation",
        "dateCreated": "2021-06-07T12:27:16Z",
        "datePublished": "2021-06-07T12:31:10Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.4.0",
        "name": "v1.4.0",
        "tag_name": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.4.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/44202611",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.4.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "**Vega ver1.3.0 released:**\r\n\r\n- Feature enhancement:\r\n  - Ascend platform, search and training on the Ascend 910 (TensorFlow and MindSpore), and model evaluation on the Ascend 310.\r\n  - Model evaluation is supported on the Kirin 990.\r\n  - Allows user datasets to be FineTune on DNet pretrained models and surpass SOTA on Ascend 910/310.\r\n  - Support the pruning capability of user datasets and ResNet models. For the Cifar100 data set, the precision changes slightly (+\u2013 0.5), the latency decreases by 15%, and the model size decreases by 30%.\r\n- New algorithm:\r\n  - ModularNAS: Towards Modularized and Reusable Neural Architecture Search, A code library for various neural architecture search methods including weight sharing and network morphism.\r\n  - DNet: Network architecture search algorithms and Model Zoo that are affinity with Davinci chips.\r\n  - MF-ASC: Multi-Fidelity neural Architecture Search with Co-kriging.\r\n\r\nInstall:\r\n\r\n```bash\r\npip3 install --user --upgrade noah-vega\r\n```\r\n\r\nor \r\n\r\n```\r\npip3 install --user --upgrade noah_vega-1.3.0-py3-none-any.whl\r\n```",
        "dateCreated": "2021-03-23T01:36:47Z",
        "datePublished": "2021-03-23T01:39:35Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "tag_name": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.3.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/40196080",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.3.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "```bash\r\npip3 install --user noah_vega-1.2.0-py3-none-any.whl\r\npython3 -m vega.tools.install_pkgs\r\n```",
        "dateCreated": "2020-11-13T08:06:57Z",
        "datePublished": "2020-11-13T08:13:10Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.2.0",
        "name": "release ver1.2.0",
        "tag_name": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.2.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/33898974",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.2.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "release ver1.0.0",
        "dateCreated": "2020-08-10T12:25:36Z",
        "datePublished": "2020-08-10T12:29:27Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "tag_name": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v1.0.0",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/29509486",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v1.0.0"
      },
      {
        "authorType": "User",
        "author_name": "zhangjiajin",
        "body": "",
        "dateCreated": "2020-06-29T13:05:07Z",
        "datePublished": "2020-06-29T13:31:27Z",
        "html_url": "https://github.com/huawei-noah/vega/releases/tag/v0.9.3",
        "name": "0.9.3",
        "tag_name": "v0.9.3",
        "tarball_url": "https://api.github.com/repos/huawei-noah/vega/tarball/v0.9.3",
        "url": "https://api.github.com/repos/huawei-noah/vega/releases/28022259",
        "zipball_url": "https://api.github.com/repos/huawei-noah/vega/zipball/v0.9.3"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 674,
      "date": "Thu, 23 Dec 2021 13:35:45 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Run the `vega` command to run the Vega application. For example, run the following command to run the `CARS` algorithm:\n\n```bash\nvega ./examples/nas/cars/cars.yml\n```\n\nThe `cars.yml` file contains definitions such as pipeline, search algorithm, search space, and training parameters.\nVega provides more than 40 examples for reference: [Examples](https://github.com/huawei-noah/vega/tree/master/examples), [Example Guide](./docs/en/user/examples.md), and [Configuration Guide](./docs/en/user/config_reference.md).\n\n",
      "technique": "Header extraction"
    }
  ]
}