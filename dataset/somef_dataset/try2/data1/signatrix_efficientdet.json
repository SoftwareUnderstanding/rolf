{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.09070",
      "https://arxiv.org/abs/1911.09070"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    @article{EfficientDetSignatrix,\n        Author = {Signatrix GmbH},\n        Title = {A Pytorch Implementation of EfficientDet Object Detection},\n        Journal = {https://github.com/signatrix/efficientdet},\n        Year = {2020}\n    }",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Mingxing Tan, Ruoming Pang, Quoc V. Le. \"EfficientDet: Scalable and Efficient Object Detection.\" [EfficientDet](https://arxiv.org/abs/1911.09070).\n- Our implementation borrows some parts from [RetinaNet.Pytorch](https://github.com/yhenon/pytorch-retinanet)\n  \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{EfficientDetSignatrix,\n    Author = {Signatrix GmbH},\n    Title = {A Pytorch Implementation of EfficientDet Object Detection},\n    Journal = {https://github.com/signatrix/efficientdet},\n    Year = {2020}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/signatrix/efficientdet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-12-04T13:24:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T07:25:35Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Here is our pytorch implementation of the model described in the paper **EfficientDet: Scalable and Efficient Object Detection** [paper](https://arxiv.org/abs/1911.09070) (*Note*: We also provide pre-trained weights, which you could see at ./trained_models) \n<p align=\"center\">\n  <img src=\"demo/video.gif\"><br/>\n  <i>An example of our model's output.</i>\n</p>\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8810754746962154
      ],
      "excerpt": "Create a data folder under the repository, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8993934091755782
      ],
      "excerpt": "We trained our model by using 3 NVIDIA GTX 1080Ti. Below is mAP (mean average precision) for COCO val2017 dataset  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8255267597865882
      ],
      "excerpt": "|     Average Recall    |   IoU=0.50:0.95   |   area=   all   |   maxDets=1     |   0.268   | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "(Pretrained weights provided) EfficientDet: Scalable and Efficient Object Detection implementation by Signatrix GmbH",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/signatrix/efficientdet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 151,
      "date": "Wed, 29 Dec 2021 07:42:43 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/signatrix/efficientdet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "signatrix/efficientdet",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd {repo_root} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8878797525558874,
        0.8727487047449518
      ],
      "excerpt": "  Download the coco images and annotations from coco website. Make sure to put the files as the following structure: \n  COCO \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8599933205084639
      ],
      "excerpt": "| Dataset                | Classes |    #Train images      |    #Validation images      | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8024269194255869
      ],
      "excerpt": "|   Average Precision   |      IoU=0.75     |   area=   all   |   maxDets=100   |   0.343   | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/signatrix/efficientdet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Signatrix\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientDet: Scalable and Efficient Object Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "efficientdet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "signatrix",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/signatrix/efficientdet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* **python 3.6**\n* **pytorch 1.2**\n* **opencv (cv2)**\n* **tensorboard**\n* **tensorboardX** (This library could be skipped if you do not use SummaryWriter)\n* **pycocotools**\n* **efficientnet_pytorch**\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 584,
      "date": "Wed, 29 Dec 2021 07:42:43 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "efficientdet",
      "object-detection",
      "pytorch",
      "deep-learning",
      "neural-network",
      "efficientnet",
      "coco-dataset"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "With our code, you can:\n\n* **Train your model** by running **python train.py**\n* **Evaluate mAP for COCO dataset** by running **python mAP_evaluation.py**\n* **Test your model for COCO dataset** by running **python test_dataset.py --pretrained_model path/to/trained_model**\n* **Test your model for video** by running **python test_video.py --pretrained_model path/to/trained_model --input path/to/input/file --output path/to/output/file**\n\n",
      "technique": "Header extraction"
    }
  ]
}