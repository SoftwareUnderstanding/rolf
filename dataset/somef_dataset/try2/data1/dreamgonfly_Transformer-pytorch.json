{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1706.03762"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py)\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dreamgonfly/transformer-pytorch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-22T02:43:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-09T10:32:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- `models.py` includes Transformer's encoder, decoder, and multi-head attention.\n- `embeddings.py` contains positional encoding.\n- `losses.py` contains label smoothing loss.\n- `optimizers.py` contains Noam optimizer.\n- `metrics.py` contains accuracy metric.\n- `beam.py` contains beam search.\n- `datasets.py` has code for loading and processing data. \n- `trainer.py` has code for training model.\n- `prepare_datasets.py` processes data.\n- `train.py` trains model.\n- `predict.py` translates given source sentence with a trained model.\n- `evaluate.py` calculates BLEU score of a trained model.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9640391067255506
      ],
      "excerpt": "This repo focuses on clean, readable, and modular implementation of the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9177641767819893,
        0.8886574790338153
      ],
      "excerpt": "For example, add --epochs=300 to set the number of epochs to 300. \nTo translate a sentence in source language to target language: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.947539646648891
      ],
      "excerpt": "To calculate BLEU score of a trained model: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A PyTorch implementation of Transformer in \"Attention is All You Need\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dreamgonfly/Transformer-pytorch/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Fri, 24 Dec 2021 11:18:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dreamgonfly/transformer-pytorch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dreamgonfly/transformer-pytorch",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repo comes with example data in `data/` directory. To begin, you will need to prepare datasets with given data as follows:\n```\n$ python prepare_datasets.py --train_source=data/example/raw/src-train.txt --train_target=data/example/raw/tgt-train.txt --val_source=data/example/raw/src-val.txt --val_target=data/example/raw/tgt-val.txt --save_data_dir=data/example/processed\n```\n\nThe example data is brought from [OpenNMT-py](https://github.com/OpenNMT/OpenNMT-py).\nThe data consists of parallel source (src) and target (tgt) data for training and validation.\nA data file contains one sentence per line with tokens separated by a space.\nBelow are the provided example data files.\n\n- `src-train.txt`\n- `tgt-train.txt`\n- `src-val.txt`\n- `tgt-val.txt`\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8253475033539612,
        0.9418018515628935
      ],
      "excerpt": "To train model, provide the train script with a path to processed data and save files as follows: \n$ python train.py --data_dir=data/example/processed --save_config=checkpoints/example_config.json --save_checkpoint=checkpoints/example_model.pth --save_log=logs/example.log \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.888153257761796
      ],
      "excerpt": "$ python predict.py --source=\"There is an imbalance here .\" --config=checkpoints/example_config.json --checkpoint=checkpoints/example_model.pth \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9060180442305399
      ],
      "excerpt": "$ python evaluate.py --save_result=logs/example_eval.txt --config=checkpoints/example_config.json --checkpoint=checkpoints/example_model.pth \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dreamgonfly/transformer-pytorch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Yongrae Jo\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Transformer-pytorch",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "transformer-pytorch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dreamgonfly",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dreamgonfly/transformer-pytorch/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.6+\n- [PyTorch 4.1+](http://pytorch.org/)\n- [NumPy](http://www.numpy.org/)\n- [NLTK](https://www.nltk.org/)\n- [tqdm](https://github.com/tqdm/tqdm)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 73,
      "date": "Fri, 24 Dec 2021 11:18:29 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "deep-learning",
      "natural-language-processing",
      "machine-translation"
    ],
    "technique": "GitHub API"
  }
}