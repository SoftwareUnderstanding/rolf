{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use Bort or the other algorithms in your work, we'd love to hear from it! Also, please cite the so-called \"Bort trilogy\" papers:\n```\n@article{deWynterApproximation,\n    title={An Approximation Algorithm for Optimal Subarchitecture Extraction},\n    author={Adrian de Wynter},\n    year={2020},\n    eprint={2010.08512},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG},\n    journal={CoRR},\n    volume={abs/2010.08512},\n    url={http://arxiv.org/abs/2010.08512}\n}\n```\n```\n@article{deWynterAlgorithm,\n      title={An Algorithm for Learning Smaller Representations of Models With Scarce Data},\n      author={Adrian de Wynter},\n      year={2020},\n      eprint={2010.07990},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG},\n      journal={CoRR},\n      volume={abs/2010.07990},\n      url={http://arxiv.org/abs/2010.07990}\n}\n```\n```\n@article{deWynterPerryOptimal,\n      title={Optimal Subarchitecture Extraction for BERT},\n      author={Adrian de Wynter and Daniel J. Perry},\n      year={2020},\n      eprint={2010.10499},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG},\n      journal={CoRR},\n      volume={abs/2010.10499},\n      url={http://arxiv.org/abs/2010.10499}\n}\n```\nLastly, if you use the GLUE/SuperGLUE/RACE tasks, don't forget to give proper attribution to the original authors.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{deWynterPerryOptimal,\n      title={Optimal Subarchitecture Extraction for BERT},\n      author={Adrian de Wynter and Daniel J. Perry},\n      year={2020},\n      eprint={2010.10499},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG},\n      journal={CoRR},\n      volume={abs/2010.10499},\n      url={http://arxiv.org/abs/2010.10499}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{deWynterAlgorithm,\n      title={An Algorithm for Learning Smaller Representations of Models With Scarce Data},\n      author={Adrian de Wynter},\n      year={2020},\n      eprint={2010.07990},\n      archivePrefix={arXiv},\n      primaryClass={cs.LG},\n      journal={CoRR},\n      volume={abs/2010.07990},\n      url={http://arxiv.org/abs/2010.07990}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{deWynterApproximation,\n    title={An Approximation Algorithm for Optimal Subarchitecture Extraction},\n    author={Adrian de Wynter},\n    year={2020},\n    eprint={2010.08512},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG},\n    journal={CoRR},\n    volume={abs/2010.08512},\n    url={http://arxiv.org/abs/2010.08512}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "|Bort       |56 |  4| 8  | 1024  | 768 | 39  | 30.3 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "weight_decays={0, 10, 100, 350} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/alexa/bort/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alexa/bort",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing Guidelines\nThank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\ndocumentation, we greatly value feedback and contributions from our community.\nPlease read through this document before submitting any issues or pull requests to ensure we have all the necessary\ninformation to effectively respond to your bug report or contribution.\nReporting Bugs/Feature Requests\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\nWhen filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n\nA reproducible test case or series of steps\nThe version of our code being used\nAny modifications you've made relevant to the bug\nAnything unusual about your environment or deployment\n\nContributing via Pull Requests\nContributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:\n\nYou are working against the latest source on the master branch.\nYou check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\nYou open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\nFork the repository.\nModify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.\nEnsure local tests pass.\nCommit to your fork using clear commit messages.\nSend us a pull request, answering any default questions in the pull request interface.\nPay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.\n\nGitHub provides additional document on forking a repository and\ncreating a pull request.\nFinding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\nCode of Conduct\nThis project has adopted the Amazon Open Source Code of Conduct.\nFor more information see the Code of Conduct FAQ or contact\nopensource-codeofconduct@amazon.com with any additional questions or comments.\nSecurity issue notifications\nIf you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page. Please do not create a public github issue.\nLicensing\nSee the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution.\nWe may ask you to sign a Contributor License Agreement (CLA) for larger changes.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-28T16:56:22Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T08:51:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9950265274268533,
        0.9948218392389463
      ],
      "excerpt": "Bort is an optimal subset of architectural parameters for the BERT architecture, extracted by applying a fully polynomial-time approximation scheme (FPTAS) for neural architecture search. Bort has an effective (that is, not counting the embedding layer) size of 5.5\\% the original BERT-large architecture, and 16\\% of the net size. It is also able to be pretrained in 288 GPU hours, which is 1.2\\% of the time required to pretrain the highest-performing BERT parametric architectural variant, RoBERTa-large. \nIt is also 7.9x faster than BERT-base (20x faster than BERT/RoBERTa-large) on a CPU, and performs better than other compressed variants of the architecture, and some of the non-compressed variants; it obtains an average performance improvement of between 0.3\\% and 31\\%, relative, with respect to BERT-large on multiple public natural language understanding (NLU) benchmarks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8291756672926145
      ],
      "excerpt": "And here are the architectural parameters: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9130155491743291
      ],
      "excerpt": "We recommend using --dataset_name  openwebtext_ccnews_stories_books_cased for the vocabulary. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9389940476255249,
        0.9972029739905508
      ],
      "excerpt": "This code supports all the tasks outlined in the paper, but for the case of the RACE dataset, you need to download the data and extract it. The default location for extraction is ~/.mxnet/datasets/race. Same goes for SuperGLUE's MultiRC, since the Gluon implementation is the old version. You can download the data and extract it to ~/.mxnet/datasets/superglue_multirc/. \nIt is normal to get very odd results for the fine-tuning step, since this repository only contains the training part of Agora. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8674179134326419
      ],
      "excerpt": "We recommend you use the following initial set of hyperparameters, and follow the requirements described in the papers at the end of this file: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Repository for the paper \"Optimal Subarchitecture Extraction for BERT\"",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is inherent to the way Bort is fine-tuned, since it expects the data to be preexisting for some arbitrary implementation of Agora. You can get around that error by downloading the data before running the script, e.g.:\n```\nfrom data.classification import BoolQTask\ntask = BoolQTask()\ntask.dataset_train()[1]; task.dataset_val()[1]; task.dataset_test()[1]\n```\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alexa/bort/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Bort requires a rather unusual environment to run. For this reason, most of the problems regarding runtime can be fixed by installing the requirements from the `requirements.txt` file. Also make sure to have reinstalled Horovod as outlined above.\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "While Bort is designed to be efficient in terms of the space it occupies in memory, a very large batch size or sequence length will still cause you to run out of memory. More often than ever, reducing the sequence length from `512` to `256` will solve out-of-memory issues. 80% of the time, it works every time.\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 38,
      "date": "Wed, 29 Dec 2021 05:16:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alexa/bort/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "alexa/bort",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/alexa/bort/master/run_finetune.sh",
      "https://raw.githubusercontent.com/alexa/bort/master/run_pretraining_distillation.sh",
      "https://raw.githubusercontent.com/alexa/bort/master/run_tests.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. You need to install the requirements from the `requirements.txt` file:\n```\npip install -r requirements.txt\n```\nThis code has been tested with Python 3.6.5+.\nTo save yourself some headache we recommend you install Horovod from source, _after_ you install MxNet. This is only needed if you are pre-training the architecture. For this, run the following commands (you'll need a C++ compiler which supports c++11 standards, like gcc > 4.8):\n```bash\n    pip uninstall horovod\n    HOROVOD_CUDA_HOME=/usr/local/cuda-10.1 \\\n    HOROVOD_WITH_MXNET=1 \\\n    HOROVOD_GPU_ALLREDUCE=NCCL \\\n    pip install horovod==0.16.2 --no-cache-dir\n```\n\n2. You also need to download the model from [here](https://alexa-saif-bort.s3.amazonaws.com/bort.params). If you have the AWS CLI, all you need to do is run:\n```\naws s3 cp s3://alexa-saif-bort/bort.params model/\n```\n\n3. To run the tests, you also need to download the sample text from [Gluon](https://github.com/dmlc/gluon-nlp/blob/v0.9.x/scripts/bert/sample_text.txt) and put it in `test_data/`:\n```\nwget https://github.com/dmlc/gluon-nlp/blob/v0.9.x/scripts/bert/sample_text.txt\nmv sample_text.txt test_data/\n```\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9604912321935258
      ],
      "excerpt": "We recommend you play with the hyperparameters from  run_finetune.sh. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8615628816483001
      ],
      "excerpt": "However, you can easily implement your own version of that algorithm. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8775080682428332
      ],
      "excerpt": "First, you will need to tokenize the pre-training text: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python create_pretraining_data.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8093385921311402
      ],
      "excerpt": "Then run the pre-training distillation script: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8254404303724194,
        0.8168261388678432
      ],
      "excerpt": "weight_decays={0, 10, 100, 350} \nwarmup_rates={0.35, 0.40, 0.45, 0.50} \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/alexa/bort/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Bort",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "bort",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "alexa",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/alexa/bort/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Bort requires a rather unusual environment to run. For this reason, most of the problems regarding runtime can be fixed by installing the requirements from the `requirements.txt` file. Also make sure to have reinstalled Horovod as outlined above.\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 442,
      "date": "Wed, 29 Dec 2021 05:16:48 GMT"
    },
    "technique": "GitHub API"
  }
}