{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2010.11929",
      "https://arxiv.org/abs/2012.12877",
      "https://arxiv.org/abs/2103.14030",
      "https://arxiv.org/abs/2106.13112",
      "https://arxiv.org/abs/2107.00652",
      "https://arxiv.org/abs/2103.17239",
      "https://arxiv.org/abs/2106.13797",
      "https://arxiv.org/abs/2106.03650",
      "https://arxiv.org/abs/2101.11986",
      "https://arxiv.org/abs/2103.14899",
      "https://arxiv.org/abs/2106.08254",
      "https://arxiv.org/abs/2107.00641",
      "https://arxiv.org/abs/2110.02178",
      "https://arxiv.org/abs/2106.12368",
      "https://arxiv.org/abs/2106.09681",
      "https://arxiv.org/abs/2103.16302",
      "https://arxiv.org/abs/2103.12731",
      "https://arxiv.org/abs/2111.11418",
      "https://arxiv.org/abs/2101.11605",
      "https://arxiv.org/abs/2103.15808",
      "https://arxiv.org/abs/2105.01601",
      "https://arxiv.org/abs/2105.03404",
      "https://arxiv.org/abs/2105.08050",
      "https://arxiv.org/abs/2105.02723",
      "https://arxiv.org/abs/2105.01883",
      "https://arxiv.org/abs/2107.10224",
      "https://arxiv.org/abs/2109.04454",
      "https://arxiv.org/abs/2103.10619",
      "https://arxiv.org/abs/2106.02034",
      "https://arxiv.org/abs/2005.12872",
      "https://arxiv.org/abs/2103.14030",
      "https://arxiv.org/abs/2106.13797",
      "https://arxiv.org/abs/2107.00641",
      "https://arxiv.org/abs/2011.09094",
      "https://arxiv.org/abs/2012.15840",
      "https://arxiv.org/abs/2103.13413",
      "https://arxiv.org/abs/2103.14030",
      "https://arxiv.org/abs/2105.15203",
      "https://arxiv.org/abs/2106.03650",
      "https://arxiv.org/abs/2107.00641",
      "https://arxiv.org/abs/2107.00652",
      "https://arxiv.org/abs/2102.07074",
      "https://arxiv.org/abs/2106.07023"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9044680662418615
      ],
      "excerpt": "- PaddleViT-Det for object detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999975155441035,
        0.9999419374403727
      ],
      "excerpt": "Swin Transformer (from Microsoft), released with paper Swin Transformer: Hierarchical Vision Transformer using Shifted Windows, by Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, Baining Guo. \nVOLO (from Sea AI Lab and NUS), released with paper VOLO: Vision Outlooker for Visual Recognition, by Li Yuan, Qibin Hou, Zihang Jiang, Jiashi Feng, Shuicheng Yan. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9997231091054312
      ],
      "excerpt": ", by Xiaoyi Dong, Jianmin Bao, Dongdong Chen, Weiming Zhang, Nenghai Yu, Lu Yuan, Dong Chen, Baining Guo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9961306286866775,
        0.9972277761418946
      ],
      "excerpt": "PVTv2 (from NJU/HKU/NJUST/IIAI/SenseTime), released with paper PVTv2: Improved Baselines with Pyramid Vision Transformer, by Wenhai Wang, Enze Xie, Xiang Li, Deng-Ping Fan, Kaitao Song, Ding Liang, Tong Lu, Ping Luo, Ling Shao. \nShuffle Transformer (from Tencent), released with paper Shuffle Transformer: Rethinking Spatial Shuffle for Vision Transformer, by Zilong Huang, Youcheng Ben, Guozhong Luo, Pei Cheng, Gang Yu, Bin Fu. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999805487765226,
        0.976124015834999,
        0.937099303958793,
        0.9999519273742818
      ],
      "excerpt": ", by Li Yuan, Yunpeng Chen, Tao Wang, Weihao Yu, Yujun Shi, Zihang Jiang, Francis EH Tay, Jiashi Feng, Shuicheng Yan. \nCrossViT (from IBM), released with paper CrossViT: Cross-Attention Multi-Scale Vision Transformer for Image Classification, by Chun-Fu Chen, Quanfu Fan, Rameswar Panda. \nBEiT (from Microsoft Research), released with paper BEiT: BERT Pre-Training of Image Transformers, by Hangbo Bao, Li Dong, Furu Wei. \nFocal Transformer (from Microsoft), released with paper Focal Self-attention for Local-Global Interactions in Vision Transformers, by Jianwei Yang, Chunyuan Li, Pengchuan Zhang, Xiyang Dai, Bin Xiao, Lu Yuan and Jianfeng Gao. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999989624121907
      ],
      "excerpt": "ViP (from National University of Singapore), released with Vision Permutator: A Permutable MLP-Like Architecture for Visual Recognition, by Qibin Hou and Zihang Jiang and Li Yuan and Ming-Ming Cheng and Shuicheng Yan and Jiashi Feng. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9803679392231904
      ],
      "excerpt": "PiT (from NAVER/Sogan University), released with paper Rethinking Spatial Dimensions of Vision Transformers, by Byeongho Heo, Sangdoo Yun, Dongyoon Han, Sanghyuk Chun, Junsuk Choe, Seong Joon Oh. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9940291249605392,
        0.9657691682680298,
        0.9999932646435518
      ],
      "excerpt": "PoolFormer, (from Sea AI Lab/NUS), released with paper MetaFormer is Actually What You Need for Vision, by Weihao Yu, Mi Luo, Pan Zhou, Chenyang Si, Yichen Zhou, Xinchao Wang, Jiashi Feng, Shuicheng Yan. \nBoTNet, (from UC Berkeley/Google), released with paper Bottleneck Transformers for Visual Recognition, by Aravind Srinivas, Tsung-Yi Lin, Niki Parmar, Jonathon Shlens, Pieter Abbeel, Ashish Vaswani. \nCvT (from McGill/Microsoft), released with paper CvT: Introducing Convolutions to Vision Transformers, by Haiping Wu, Bin Xiao, Noel Codella, Mengchen Liu, Xiyang Dai, Lu Yuan, Lei Zhang \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9750046761216693
      ],
      "excerpt": "RepMLP (from BNRist/Tsinghua/MEGVII/Aberystwyth), released with paper RepMLP: Re-parameterizing Convolutions into Fully-connected Layers for Image Recognition, by Xiaohan Ding, Chunlong Xia, Xiangyu Zhang, Xiaojie Chu, Jungong Han, Guiguang Ding. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8426903123256603
      ],
      "excerpt": "HVT (from Monash University), released with paper Scalable Vision Transformers with Hierarchical Pooling, by Zizheng Pan, Bohan Zhuang, Jing Liu, Haoyu He, Jianfei Cai. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999975155441035,
        0.9961306286866775,
        0.9999519273742818
      ],
      "excerpt": "Swin Transformer (from Microsoft), released with paper Swin Transformer: Hierarchical Vision Transformer using Shifted Windows, by Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, Baining Guo. \nPVTv2 (from NJU/HKU/NJUST/IIAI/SenseTime), released with paper PVTv2: Improved Baselines with Pyramid Vision Transformer, by Wenhai Wang, Enze Xie, Xiang Li, Deng-Ping Fan, Kaitao Song, Ding Liang, Tong Lu, Ping Luo, Ling Shao. \nFocal Transformer (from Microsoft), released with paper Focal Self-attention for Local-Global Interactions in Vision Transformers, by Jianwei Yang, Chunyuan Li, Pengchuan Zhang, Xiyang Dai, Bin Xiao, Lu Yuan and Jianfeng Gao. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9985327159249529
      ],
      "excerpt": "SETR (from Fudan/Oxford/Surrey/Tencent/Facebook), released with paper Rethinking Semantic Segmentation from a Sequence-to-Sequence Perspective with Transformers, by Sixiao Zheng, Jiachen Lu, Hengshuang Zhao, Xiatian Zhu, Zekun Luo, Yabiao Wang, Yanwei Fu, Jianfeng Feng, Tao Xiang, Philip H.S. Torr, Li Zhang. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999975155441035
      ],
      "excerpt": "Swin Transformer (from Microsoft), released with paper Swin Transformer: Hierarchical Vision Transformer using Shifted Windows, by Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, Baining Guo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9662790355806317
      ],
      "excerpt": "Trans2seg (from HKU/Sensetime/NJU), released with paper Segmenting Transparent Object in the Wild with Transformer, by Enze Xie, Wenjia Wang, Wenhai Wang, Peize Sun, Hang Xu, Ding Liang, Ping Luo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9932568829900192,
        0.9972277761418946,
        0.9999519273742818,
        0.9999979302353769
      ],
      "excerpt": "FTN (from Baidu), released with paper Fully Transformer Networks for Semantic Image Segmentation, by Sitong Wu, Tianyi Wu, Fangjian Lin, Shengwei Tian, Guodong Guo. \nShuffle Transformer (from Tencent), released with paper Shuffle Transformer: Rethinking Spatial Shuffle for Vision Transformer, by Zilong Huang, Youcheng Ben, Guozhong Luo, Pei Cheng, Gang Yu, Bin Fu \nFocal Transformer (from Microsoft), released with paper Focal Self-attention for Local-Global Interactions in Vision Transformers, by Jianwei Yang, Chunyuan Li, Pengchuan Zhang, Xiyang Dai, Bin Xiao, Lu Yuan and Jianfeng Gao. \n](https://arxiv.org/abs/2107.00652), by Xiaoyi Dong, Jianmin Bao, Dongdong Chen, Weiming Zhang, Nenghai Yu, Lu Yuan, Dong Chen, Baining Guo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.998184742663378
      ],
      "excerpt": "ViTGAN (from UCSD/Google), released with paper ViTGAN: Training GANs with Vision Transformers, by Kwonjoon Lee, Huiwen Chang, Lu Jiang, Han Zhang, Zhuowen Tu, Ce Liu. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "| vit_base_patch32_384          | 83.35 | 96.84 | 88.2M   | 12.7G  | 384        | 1.0      | bicubic       | google/baidu(3c2f) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "| vit_large_patch16_384         | 87.08 | 98.30 | 304.1M  | 175.9G | 384        | 1.0      | bicubic       | google/baidu(5t91) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8076364367675791
      ],
      "excerpt": "| pit_xs         | 78.18    | 94.16 | 10.5M   | 1.1G   | 224        | 0.9      | bicubic       |google/baidu(gytu)  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9372151656983196
      ],
      "excerpt": "| halonet26t     | 79.10    | 94.31 | 12.5M    | 3.2G   | 256        | 0.95     | bicubic       |google/baidu(ednv)  | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BR-IDL/PaddleViT",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Please raise an issue on GitHub.\n",
      "technique": "Header extraction"
    }
  ],
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "English | \u7b80\u4f53\u4e2d\u6587\nContribute Code\nYou encourage and appreciate researchers and developers to contribute to project PaddleViT. \nTo contribute to PaddlePaddle, you have to agree with the PaddleViT Contributor License Agreement.\nThis document explains our workflow and working style.\nWorkflow\nPaddleViT uses this Git branching model.  You can follow the listed steps for common contributions.\n1. Fork the repo\nPlease file Pull Requests from your fork. \nTo make a fork, just head over to our GitHub repo page and click the \"Fork\" button.\n2. Clone the repo\nTo make a copy of your fork to your local env:\nbash\n   $ git clone https://github.com/your-github-account/PPViT\n   $ cd PPViT\n3. Create local feature branch\nFor daily works like adding a new feature or fixing a bug, open a feature branch based on develop branch before coding:\nbash\n   $ git checkout develop\n   $ git checkout -b feature\n   wher feature can be replaced with the name of your feature you are working on.\n4. Commit\nCommit your code to the local repository during and after your coding.\nshell\n   $ git add -A\n   $ git commit -m \u201cmessage\u201d\n5. Test\n\nWe encourage writing unittest to test your class and method.\nPlease test and report model performance on related datasets before you start to merge.\n\n6. Keep pulling\nAn experienced Git user pulls from the official repo often -- daily or even hourly, so they notice conflicts with others work early, and it's easier to resolve smaller conflicts.\nbash\n   $ git remote add upstream https://github.com/BR-IDL/PaddleViT\n   $ git pull upstream develop\n7. Push and file a Pull Request\n\n\nPush your local work into your forked repo:\nbash\n  $ git push origin my-cool-stuff\nThe push allows you to create a pull request, requesting owners of this official repo to pull your change into the official one.\n\n\nTo create a Pull Request, please follow these steps.\nIf your change is for fixing an issue, please write \"Fixes <issue-URL>\" in the description section of your pull request.  Github would close the issue when the owners merge your pull request.\nPlease remember to specify some reviewers for your pull request.  If you don't know who are the right ones, please follow Github's recommendation.\n\n\n8. Delete local and remote feature branches\nAfter merging into develop branch successfully, delete your feature branch.\n   To keep your local workspace and your fork clean, you might want to remove merged branches:\nbash\n   $ git push origin :my-cool-stuff\n   $ git checkout develop\n   $ git pull upstream develop\n   $ git branch -d my-cool-stuff\nCode Review\n\n\nPlease feel free to ping your reviewers by sending them the URL of your pull request via IM or email.\n\n\nPlease answer reviewers' every comment.  If you are to follow the comment, please write \"Done\"; please give a reason otherwise.\n\n\nIf you don't want your reviewers to get overwhelmed by email notifications, you might reply their comments by in a batch.\n\n\nReduce the unnecessary commits.  Some developers commit often.  It is recommended to append a sequence of small changes into one commit by running git commit --amend instead of git commit.\n\n\nCoding Standard\nCode Style\nOur Python code follows the PEP8 language guide and PEP8 style guide.\nUse Pylint\nPylint is a Python code analysis tool that analyzes errors in Python code and finds code that does not meet coding style standards and has potential problems.\nComments and Annotations\nTo make it easier for others to use and generate online documents, please include a docstring for each function on each class method.\nUnit Tests\nPlease remember to add related unit tests.\n\nFor Python code, please use Python's standard unittest package.\n\nTry to have unit tests for each function on each class method.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-30T06:47:47Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-27T11:46:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.992191794602116,
        0.9617972981167185,
        0.9952565102390307,
        0.9570173034986641
      ],
      "excerpt": ":robot: PaddlePaddle Visual Transformers (PaddleViT or PPViT) is a collection of vision models beyond convolution. Most of the models are based on Visual Transformers, Visual Attentions, and MLPs, etc. PaddleViT also integrates popular layers, utilities, optimizers, schedulers, data augmentations, training/validation scripts for PaddlePaddle 2.1+. The aim is to reproduce a wide variety of state-of-the-art ViT and MLP models with full training/validation procedures. We are passionate about making cuting-edge CV techniques easier to use for everyone. \n:robot: PaddleViT provides models and tools for multiple vision tasks, such as classifications, object detection, semantic segmentation, GAN, and more. Each model architecture is defined in standalone python module and can be modified to enable quick research experiments. At the same time, pretrained weights can be downloaded and used to finetune on your own datasets. PaddleViT also integrates popular tools and modules for custimized dataset, data preprocessing, performance metrics, DDP and more. \n:robot: PaddleViT is backed by popular deep learning framework PaddlePaddle, we also provide tutorials and projects on Paddle AI Studio. It's intuitive and straightforward to get started for new users. \nPaddleViT implements model architectures and tools for multiple vision tasks, go to the following links for detailed information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8032846479540435
      ],
      "excerpt": "We also provide tutorials: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9387774446794176,
        0.9513958671541232
      ],
      "excerpt": "State-of-the-art transformer models for multiple CV tasks \nState-of-the-art data processings and training methods  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.861351153812913
      ],
      "excerpt": "Easy-to-use tools \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9329994266654501
      ],
      "excerpt": "Modular design for utiliy functions and tools \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9447204774002359,
        0.8898012180804458
      ],
      "excerpt": "Unified framework for all the models \nEasily customizable to your needs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8756088661381553
      ],
      "excerpt": "Model implementations are exposed for you to customize \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9305654596188833,
        0.8418270569312173
      ],
      "excerpt": "ViT (from Google), released with paper An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale, by Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby. \nDeiT (from Facebook and Sorbonne), released with paper Training data-efficient image transformers & distillation through attention, by Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, Herv\u00e9 J\u00e9gou. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.93684024328945
      ],
      "excerpt": "CaiT (from Facebook and Sorbonne), released with paper Going deeper with Image Transformers, by Hugo Touvron, Matthieu Cord, Alexandre Sablayrolles, Gabriel Synnaeve, Herv\u00e9 J\u00e9gou. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8687143161685275,
        0.9195500117877191
      ],
      "excerpt": "PiT (from NAVER/Sogan University), released with paper Rethinking Spatial Dimensions of Vision Transformers, by Byeongho Heo, Sangdoo Yun, Dongyoon Han, Sanghyuk Chun, Junsuk Choe, Seong Joon Oh. \nHaloNet, (from Google), released with paper Scaling Local Self-Attention for Parameter Efficient Visual Backbones, by Ashish Vaswani, Prajit Ramachandran, Aravind Srinivas, Niki Parmar, Blake Hechtman, Jonathon Shlens. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8972710619907451,
        0.8614897762503027
      ],
      "excerpt": "ResMLP (from Facebook/Sorbonne/Inria/Valeo), released with paper ResMLP: Feedforward networks for image classification with data-efficient training, by Hugo Touvron, Piotr Bojanowski, Mathilde Caron, Matthieu Cord, Alaaeldin El-Nouby, Edouard Grave, Gautier Izacard, Armand Joulin, Gabriel Synnaeve, Jakob Verbeek, Herv\u00e9 J\u00e9gou. \ngMLP (from Google), released with paper Pay Attention to MLPs, by Hanxiao Liu, Zihang Dai, David R. So, Quoc V. Le. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378358217679539
      ],
      "excerpt": "CycleMLP (from HKU/SenseTime), released with paper CycleMLP: A MLP-like Architecture for Dense Prediction, by Shoufa Chen, Enze Xie, Chongjian Ge, Ding Liang, Ping Luo. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9220034069593283
      ],
      "excerpt": "DETR (from Facebook), released with paper End-to-End Object Detection with Transformers, by Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, Sergey Zagoruyko. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9489394891432122
      ],
      "excerpt": "Styleformer (from Facebook and Sorbonne), released with paper Styleformer: Transformer based Generative Adversarial Networks with Style Vector, by Jeeseung Park, Younggeun Kim. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8371061886836959
      ],
      "excerpt": "| volo_d3_448                   | 86.50 | 97.71 | 86.2M   | 80.3G  | 448        | 1.0      | bicubic       | google/baidu(uudu) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8371061886836959
      ],
      "excerpt": "| t2t_vit_14                    | 81.50 | 95.67 | 21.5M   | 4.4G   | 224        | 0.9      | bicubic       | google/baidu(c2u8) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8371061886836959
      ],
      "excerpt": "| t2t_vit_14_384                | 83.34 | 96.50 | 21.5M   | 13.0G  | 384        | 1.0      | bicubic       | google/baidu(r685) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8149985746874059
      ],
      "excerpt": "| cross_vit_18_dagger_384       | 84.17 | 96.82 | 44.1M   | 25.8G  | 384        | 1.0      | bicubic       | google/baidu(99b6) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9129555790725107
      ],
      "excerpt": "| Model | backbone  | box_mAP | Model                                                                                                                                                       | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.9416193314414134,
        0.898210772995835
      ],
      "excerpt": "| Mask R-CNN | Swin-T 1x |  43.7   | google/baidu(qev7) | \n| Mask R-CNN | Swin-T 3x |  46.0   | google/baidu(m8fg) | \n| Mask R-CNN | Swin-S 3x |  48.4   | google/baidu(hdw5) | \n| Mask R-CNN | pvtv2_b0         |  38.3   | google/baidu(3kqb) | \n| Mask R-CNN | pvtv2_b1         |  41.8   | google/baidu(k5aq) | \n| Mask R-CNN | pvtv2_b2         |  45.2   | google/baidu(jh8b) | \n| Mask R-CNN | pvtv2_b2_linear  |  44.1   | google/baidu(8ipt) | \n| Mask R-CNN | pvtv2_b3         |  46.9   | google/baidu(je4y) | \n| Mask R-CNN | pvtv2_b4         |  47.5   | google/baidu(n3ay) | \n| Mask R-CNN | pvtv2_b5         |  47.4   | google/baidu(jzq1) | \n|Model      | Backbone  | Batch_size | mIoU (ss) | mIoU (ms+flip) | Backbone_checkpoint | Model_checkpoint      |     ConfigFile  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8515799254901616
      ],
      "excerpt": "|Model      | Backbone  | Batch_size | Iteration | mIoU (ss) | mIoU (ms+flip) | Backbone_checkpoint | Model_checkpoint     |     ConfigFile  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8515799254901616
      ],
      "excerpt": "|Model      | Backbone  | Batch_size | Iteration | mIoU (ss) | mIoU (ms+flip) | Backbone_checkpoint | Model_checkpoint     |     ConfigFile  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8515799254901616
      ],
      "excerpt": "|Model      | Backbone  | Batch_size | Iteration | mIoU (ss) | mIoU (ms+flip) | Backbone_checkpoint | Model_checkpoint     |     ConfigFile  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248214941802048
      ],
      "excerpt": "| Model                          | FID | Image Size | Crop_pct | Interpolation | Model        | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8682649853226763
      ],
      "excerpt": "The results are evaluated on Cifar10, STL10, Celeba and LSUNchurch dataset, using fid50k_full* metric. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": ":robot: PaddleViT: State-of-the-art Visual Transformer and MLP Models for PaddlePaddle 2.0+",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BR-IDL/PaddleViT/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 193,
      "date": "Tue, 28 Dec 2021 00:38:11 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/BR-IDL/PaddleViT/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "BR-IDL/PaddleViT",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/BR-IDL/PaddleViT/tree/develop/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/transGAN/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/transGAN/run_eval_multi_cifar.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/transGAN/run_generate.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/transGAN/run_eval_cifar.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_multi_stl10.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_celeba.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_multi_lsun.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_lsun.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_generate.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_multi_celeba.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_eval_stl10.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/gan/Styleformer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/semantic_segmentation/run_local.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_eval_large_multi_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_eval_multi_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_train_multi_base.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_eval_multi_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/SwinTransformer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_eval_multi_xxs24_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_eval_multi_tmp.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_eval_multi_m48_448.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_eval_multi_s24_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CaiT/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_t_14.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_t_19.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_14.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_7.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_10.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_14_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_7.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_19.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_12.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_24.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_eval_multi_t_24.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/T2T_ViT/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_eval_multi_big_24_distilled.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_eval_multi_36.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_eval_multi_big_24.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_eval_36.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ResMLP/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/gMLP/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/gMLP/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/gMLP/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/gMLP/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/VOLO/run_eval_512_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/VOLO/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/VOLO/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/VOLO/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/VOLO/run_eval_multi_tmp.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/VOLO/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/BoTNet/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/BoTNet/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/BoTNet/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CycleMLP/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CycleMLP/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CycleMLP/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CycleMLP/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/BEiT/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/BEiT/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/XCiT/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/XCiT/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileFormer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileFormer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileFormer/run_train_amp.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileFormer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileFormer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Cvt/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Cvt/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Cvt/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Cvt/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_multi_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_train_tiny_multi_resume.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_multi_large_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_train_tiny_multi_finetune.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_multi_base_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_multi_large_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_multi_base_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_train_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_train_tiny_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CSwin/run_eval_small.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/HaloNet/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/HaloNet/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/HaloNet/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/HaloNet/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_eval_multi_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_eval_multi_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_train_multi_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_eval_regnet.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/DeiT/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViP/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViP/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViP/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViP/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MLP-Mixer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MLP-Mixer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MLP-Mixer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MLP-Mixer/run_eval_multi_large.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MLP-Mixer/run_eval_large.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MLP-Mixer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MAE/run_pretrain_multi_resume.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MAE/run_finetune.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MAE/run_pretrain_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MAE/run_finetune_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MAE/run_pretrain.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Focal_Transformer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Focal_Transformer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Focal_Transformer/run_train_amp.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Focal_Transformer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Focal_Transformer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b4.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b2.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b5.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b2_linear.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b0.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b1.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_eval_multi_b3.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PVTv2/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMLP/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMLP/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMLP/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMLP/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/FF_Only/run_eval_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/FF_Only/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/FF_Only/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/FF_Only/run_train_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/FF_Only/run_train_multi_tiny.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMixer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMixer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMixer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ConvMixer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/RepMLP/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/RepMLP/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/RepMLP/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/RepMLP/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_eval_base_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_eval_multi_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_eval_multi_large.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/ViT/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Shuffle_Transformer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Shuffle_Transformer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Shuffle_Transformer/run_eval_multi_base.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Shuffle_Transformer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Shuffle_Transformer/run_eval_multi_small.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/Shuffle_Transformer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_18_dagger_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_9_dagger_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_base_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_train_multi_tiny_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_tiny_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_18_dagger_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_small_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_15_dagger_384.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_15_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_9_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_15_dagger_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_train_tiny_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/CrossViT/run_eval_18_224.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PoolFormer/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PoolFormer/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PoolFormer/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PoolFormer/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileViT/run_eval_xxs_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileViT/run_train_xxs_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileViT/run_train_xxs_multi_resume.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/MobileViT/run_train_xxs.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PiT/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PiT/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/image_classification/PiT/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi_b4.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi_b2.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi_b5.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi_b2_linear.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi_b1.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_eval_multi_b3.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/PVTv2/run_train_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/Swin/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/Swin/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/Swin/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/Swin/run_eval_multi_s.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_eval_r101.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_train.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_eval_r101_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_train_finetune_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_eval.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_eval_multi.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_train_finetune.sh",
      "https://raw.githubusercontent.com/BR-IDL/PaddleViT/develop/object_detection/DETR/run_train_multi.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Create a conda virtual environment and activate it.\n   ```shell\n   conda create -n paddlevit python=3.7 -y\n   conda activate paddlevit\n   ```\n2. Install PaddlePaddle following the official instructions, e.g.,\n   ```shell\n   conda install paddlepaddle-gpu==2.1.2 cudatoolkit=10.2 --channel https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/Paddle/\n   ```\n   > Note: please change the paddlepaddle version and cuda version accordingly to your environment.\n\n3. Install dependency packages\n    * General dependencies:\n        ```\n        pip install yacs, pyyaml\n        ```\n    * Packages for Segmentation:\n        ```\n        pip install cityscapesScripts\n        ```\n        Install `detail` package:\n        ```shell\n        git clone https://github.com/ccvl/detail-api\n        cd detail-api/PythonAPI\n        make\n        make install\n        ```\n    * Packages for GAN:\n        ```\n        pip install lmdb\n        ```\n4. Clone project from GitHub\n    ```\n    git clone https://github.com/BR-IDL/PaddleViT.git \n    ```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "Python 3.6/3.7 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.938856580365341
      ],
      "excerpt": "Note: It is recommended to install the latest version of PaddlePaddle to avoid some CUDA errors for  PaddleViT training. For PaddlePaddle, please refer to this link for stable version installation and this link for develop version installation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8223268707197486
      ],
      "excerpt": "|Segformer  | MIT-B1 |     16     |     160k   |  42.20   |       -        |   TODO      |baidu(t4n4)   |  config | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh run_eval.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh run_eval_multi.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9340756057354387
      ],
      "excerpt": "To train the ViT model on ImageNet2012 with single GPU, run the following script using command line: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh run_train_multi.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.909130101466226
      ],
      "excerpt": "    <img src=\"./PaddleViT.png\" width=\"100%\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8178038347200584
      ],
      "excerpt": "Examples for each model to reproduce the results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8209706194734983
      ],
      "excerpt": "Model files can be used independently for quick experiments \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8112486940160964
      ],
      "excerpt": "| t2t_vit_10                    | 75.15 | 92.80 | 5.8M    | 1.3G   | 224        | 0.9      | bicubic       | google/baidu(ixug) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8097171748403009
      ],
      "excerpt": "| cross_vit_small_224           | 81.01 | 95.33 | 26.7M   | 5.2G   | 224        | 0.875    | bicubic       | google/baidu(32us) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8105966944084898
      ],
      "excerpt": "| beit_large_patch16_224_pt22k  | 87.48 | 98.30 | 304M   | 45.0G   | 224        | 0.9      | bicubic       | google/baidu(2ya2) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8105966944084898
      ],
      "excerpt": "| poolformer_s36 | 81.43 | 95.45 | 30.8M   | 5.0G   | 224        | 0.9      | bicubic       | google/baidu(fvpm)             | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8097171748403009
      ],
      "excerpt": "| repmlp_res50_light_224        | 77.01 | 93.46 | 87.1M   | 3.3G   | 224        | 0.875    | bicubic       | google/baidu(b4fg) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8322935180471345
      ],
      "excerpt": "| convmlp_l                     | 80.15 | 95.00 | 42.7M   | 10.0G  |    224     | 0.875    | bicubic       | google/baidu(ne5x) | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8572535680905344
      ],
      "excerpt": "|Segmenter  | ViT_Tiny  |     16     |     160k   |  38.45   |       -        |   TODO      |baidu(1k97)   |  config \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8019480021213585
      ],
      "excerpt": "|Segmenter_Linear  | DeiT_Base |     16     |     160k   |  47.34   |       -        |   TODO      |baidu(5dpv)   |  config \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8218568571575723
      ],
      "excerpt": "| UperNet  | Swin_Tiny |     16     |     160k   |  44.90   |       45.37     |   -      |baidu(lkhg)   |  config | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python main_single_gpu.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python main_multi_gpu.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8320064466254049
      ],
      "excerpt": "To train the ViT model on ImageNet2012 with single GPU, run the following script using command line: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python main_single_gpu.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python main_multi_gpu.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/BR-IDL/PaddleViT/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright [yyyy] [name of copyright owner]\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "PaddlePaddle Vision Transformers #",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "PaddleViT",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "BR-IDL",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/BR-IDL/PaddleViT/blob/develop/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "xperzy",
        "body": "This is the first release of `PaddleViT`",
        "dateCreated": "2021-08-30T08:17:12Z",
        "datePublished": "2021-08-30T08:18:45Z",
        "html_url": "https://github.com/BR-IDL/PaddleViT/releases/tag/v0.1",
        "name": "First Release",
        "tag_name": "v0.1",
        "tarball_url": "https://api.github.com/repos/BR-IDL/PaddleViT/tarball/v0.1",
        "url": "https://api.github.com/repos/BR-IDL/PaddleViT/releases/48657365",
        "zipball_url": "https://api.github.com/repos/BR-IDL/PaddleViT/zipball/v0.1"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 656,
      "date": "Tue, 28 Dec 2021 00:38:11 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "cv",
      "computer-vision",
      "paddlepaddle",
      "vit",
      "mlp",
      "transformer",
      "encoder-decoder",
      "classification",
      "detection",
      "segmentation",
      "gan",
      "deep-learning",
      "semantic-segmentation",
      "object-detection"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To use the model with pretrained weights, go to the specific subfolder e.g., `/image_classification/ViT/`, then download the `.pdparam` weight file and change related file paths in the following python scripts. The model config files are located in `./configs`.  \n\nAssume the downloaded weight file is stored in `./vit_base_patch16_224.pdparams`, to use the `vit_base_patch16_224` model in python:\n```python\nfrom config import get_config\nfrom visual_transformer import build_vit as build_model\n#: config files in ./configs/\nconfig = get_config('./configs/vit_base_patch16_224.yaml')\n#: build model\nmodel = build_model(config)\n#: load pretrained weights, .pdparams is NOT needed\nmodel_state_dict = paddle.load('./vit_base_patch16_224.pdparams')\nmodel.set_dict(model_state_dict)\n```\n> :robot: See the README file in each model folder for detailed usages.\n\n\n",
      "technique": "Header extraction"
    }
  ]
}