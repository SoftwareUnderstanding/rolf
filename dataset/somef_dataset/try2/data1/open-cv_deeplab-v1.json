{
  "citation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{KrahenbuhlK11,\n  title={Efficient Inference in Fully Connected CRFs with Gaussian Edge Potentials},\n  author={Philipp Kr{\\\"{a}}henb{\\\"{u}}hl and Vladlen Koltun},\n  booktitle={NIPS},      \n  year={2011}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{papandreou15weak,\n  title={Weakly- and Semi-Supervised Learning of a DCNN for Semantic Image Segmentation},\n  author={George Papandreou and Liang-Chieh Chen and Kevin Murphy and Alan L Yuille},\n  journal={arxiv:1502.02734},\n  year={2015}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{chen14semantic,\n  title={Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs},\n  author={Liang-Chieh Chen and George Papandreou and Iasonas Kokkinos and Kevin Murphy and Alan L Yuille},\n  booktitle={ICLR},\n  url={http://arxiv.org/abs/1412.7062},\n  year={2015}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/open-cv/deeplab-v1",
    "technique": "GitHub API"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributors\nCaffe is developed by a core set of BVLC members and the open-source community.\nWe thank all of our contributors!\nFor the detailed history of contributions of a given file, try\ngit blame file\n\nto see line-by-line credits and\ngit log --follow file\n\nto see the change log even across renames and rewrites.\nPlease refer to the acknowledgements on the Caffe site for further details.\nCopyright is held by the original contributor according to the versioning history; see LICENSE.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-22T01:24:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-02T20:08:50Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nDeepLab is a state-of-art deep learning system for semantic image segmentation built on top of [Caffe](http://caffe.berkeleyvision.org).\r\n\r\nIt combines densely-computed deep convolutional neural network (CNN) responses with densely connected conditional random fields (CRF).\r\n\r\nThis distribution provides a publicly available implementation for the key model ingredients first reported in an [arXiv paper](http://arxiv.org/abs/1412.7062), accepted in revised form as conference publication to the ICLR-2015 conference. \r\nIt also contains implementations for methods supporting model learning using only weakly labeled examples, described in a second follow-up [arXiv paper](http://arxiv.org/abs/1502.02734).\r\nPlease consult and consider citing the following papers:\r\n\r\n    @inproceedings{chen14semantic,\r\n      title={Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs},\r\n      author={Liang-Chieh Chen and George Papandreou and Iasonas Kokkinos and Kevin Murphy and Alan L Yuille},\r\n      booktitle={ICLR},\r\n      url={http://arxiv.org/abs/1412.7062},\r\n      year={2015}\r\n    }\r\n\r\n    @article{papandreou15weak,\r\n      title={Weakly- and Semi-Supervised Learning of a DCNN for Semantic Image Segmentation},\r\n      author={George Papandreou and Liang-Chieh Chen and Kevin Murphy and Alan L Yuille},\r\n      journal={arxiv:1502.02734},\r\n      year={2015}\r\n    }\r\n\r\nNote that if you use the densecrf implementation, please consult and cite the following paper:\r\n\r\n    @inproceedings{KrahenbuhlK11,\r\n      title={Efficient Inference in Fully Connected CRFs with Gaussian Edge Potentials},\r\n      author={Philipp Kr{\\\"{a}}henb{\\\"{u}}hl and Vladlen Koltun},\r\n      booktitle={NIPS},      \r\n      year={2011}\r\n    }\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8286973506697515,
        0.9839085417719403,
        0.9958103696234151
      ],
      "excerpt": "DeepLab v2 has been released recently (see this), which attains 79.7% on the challenging PASCAL VOC 2012 image segmentation task. \nDeepLab v2 also incorportates some of the key layers from our DeepLab v1 (this repository). Note that there are still some minor differences between argmax and softmax_loss layers for DeepLabv1 and v2. If you want to reproduce our ICCV'15 results, please refer to the implementation of DeepLabv1. \nPlease also see our project website for details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.943898624867368,
        0.9136713126584173
      ],
      "excerpt": "DeepLab currently achieves 73.9% on the challenging PASCAL VOC 2012 image segmentation task -- see the leaderboard. \nWe have released several trained models and corresponding prototxt files at here. Please check it for more model details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "deeplab v1",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/open-cv/deeplab-v1/releases",
    "technique": "GitHub API"
  },
  "faq": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nCheck [FAQ](http://ccvl.stat.ucla.edu/deeplab_faq/) if you have some problems while using the code.\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 11:56:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/open-cv/deeplab-v1/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "open-cv/deeplab-v1",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/open-cv/deeplab-v1/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/filter_visualization.ipynb",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/net_surgery.ipynb",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/detection.ipynb",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/hdf5_classification.ipynb",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/classification.ipynb",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/siamese/mnist_siamese.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/deploy_docs.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/build_docs.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/download_model_from_gist.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/upload_model_to_gist.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/gather_examples.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/travis/travis_setup_makefile_config.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/travis/travis_build_and_test.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/scripts/travis/travis_install.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/imagenet/create_imagenet.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/imagenet/resume_training.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/imagenet/train_caffenet.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/imagenet/make_imagenet_mean.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/cifar10/create_cifar10.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/cifar10/train_quick.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/cifar10/train_full.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/mnist/train_lenet_consolidated.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/mnist/train_mnist_autoencoder_adagrad.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/mnist/create_mnist.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/mnist/train_mnist_autoencoder_nesterov.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/mnist/train_lenet.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/mnist/train_mnist_autoencoder.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/siamese/create_mnist_siamese.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/examples/siamese/train_mnist_siamese.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/tools/extra/parse_log.sh",
      "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/tools/extra/launch_resize_and_crop_images.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n1. The scripts we used for our experiments can be downloaded from this [link](https://ucla.box.com/s/4grlj8yoodv95936uybukjh5m0tdzvrf):\r\n    1. run_pascal.sh: the script for training/testing on the PASCAL VOC 2012 dataset. __Note__ You also need to download sub.sed script.\r\n    2. run_densecrf.sh and run_densecrf_grid_search.sh: the scripts we used for post-processing the DCNN computed results by DenseCRF.\r\n2. The image list files used in our experiments can be downloaded from this [link](https://ucla.box.com/s/rd9z2xvwsfpksi7mi08i2xqrj7ab4keb):\r\n    * The zip file stores the list files for the PASCAL VOC 2012 dataset.\r\n3. To use the mat_read_layer and mat_write_layer, please download and install [matio](http://sourceforge.net/projects/matio/files/matio/1.5.2/).\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/open-cv/deeplab-v1/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Cuda",
      "MATLAB",
      "CMake",
      "Makefile",
      "Shell",
      "C",
      "Limbo"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/open-cv/deeplab-v1/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'COPYRIGHT\\n\\nAll new contributions compared to the original Caffe branch:\\nCopyright (c) 2015, Liang-Chieh Chen (UCLA), George Papandreou (Google), Iasonas Kokkinos (CentraleSup\\xc3\\xa9lec /INRIA), Kevin Murphy (Google), Alan L. Yuille (UCLA)\\nAll rights reserved.\\n\\nAll contributions by the University of California:\\nCopyright (c) 2014, The Regents of the University of California (Regents)\\nAll rights reserved.\\n\\nAll other contributions:\\nCopyright (c) 2014, the respective contributors\\nAll rights reserved.\\n\\nCaffe uses a shared copyright model: each contributor holds copyright over\\ntheir contributions to Caffe. The project versioning records all such\\ncontribution and copyright details. If a contributor wants to further mark\\ntheir specific copyright on a particular contribution, they should indicate\\ntheir copyright solely in the commit message of the change when it is\\ncommitted.\\n\\nLICENSE\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met: \\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer. \\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution. \\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nCONTRIBUTION AGREEMENT\\n\\nBy contributing to the BVLC/caffe repository through pull-request, comment,\\nor otherwise, the contributor releases their content to the\\nlicense and copyright terms herein.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# DeepLab v2",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "deeplab-v1",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "open-cv",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/open-cv/deeplab-v1/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nThere are several variants of DeepLab. To begin with, we suggest DeepLab-LargeFOV, which has good performance and faster training time.\r\n\r\nSuppose the codes are located at deeplab/code\r\n\r\n1. mkdir deeplab/exper (Create a folder for experiments)\r\n2. mkdir deeplab/exper/voc12 (Create a folder for your specific experiment. Let's take PASCAL VOC 2012 for example.)\r\n3. Create folders for config files and so on.\r\n    1. mkdir deeplab/exper/voc12/config  (where network config files are saved.)\r\n    2. mkdir deeplab/exper/voc12/features  (where the computed features will be saved (when train on train))\r\n    3. mkdir deeplab/exper/voc12/features2 (where the computed features will be saved (when train on trainval))\r\n    4. mkdir deeplab/exper/voc12/list (where you save the train, val, and test file lists)\r\n    5. mkdir deeplab/exper/voc12/log (where the training/test logs will be saved)\r\n    6. mkdir deeplab/exper/voc12/model (where the trained models will be saved)\r\n    7. mkdir deeplab/exper/voc12/res (where the evaluation results will be saved)\r\n4. mkdir deeplab/exper/voc12/config/deeplab_largeFOV (test your own network. Create a folder under config. For example, deeplab_largeFOV is the network you want to experiment with. Add your train.prototxt and test.prototxt in that folder (you can check some provided examples for reference).)\r\n5. Set up your init.caffemodel at deeplab/exper/voc12/model/deeplab_largeFOV. You may want to soft link init.caffemodel to the modified VGG-16 net. For example, run \"ln -s vgg16.caffemodel init.caffemodel\" at voc12/model/deeplab_largeFOV.\r\n6. Modify the provided script, run_pascal.sh, for experiments. You should change the paths according to your setting. For example, you should specify where the caffe is by changing CAFFE_DIR. Note You may need to modify sub.sed, if you want to replace some variables with your desired values in train.prototxt or test.prototxt.\r\n7. The computed features are saved at folders features or features2, and you can run provided MATLAB scripts to evaluate the results (e.g., check the script at code/matlab/my_script/EvalSegResults).\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 29 Dec 2021 11:56:28 GMT"
    },
    "technique": "GitHub API"
  }
}