{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434\r\n\r\nused datasets: imagenet(32x32"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8501622318066239,
        0.9985086926290779
      ],
      "excerpt": "code based on https://github.com/soumith/dcgan.torch and https://github.com/pytorch/examples/tree/master/dcgan \noriginal article: https://arxiv.org/abs/1511.06434 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liaoguiqiu/Multiscal_shifting",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-19T09:31:25Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-24T19:29:24Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8728033638131869
      ],
      "excerpt": "Implementation  on pytorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "my private for the trainning ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liaoguiqiu/Multiscal_shifting/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 09:30:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liaoguiqiu/Multiscal_shifting/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "liaoguiqiu/Multiscal_shifting",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8219362096763528,
        0.8393439927685603
      ],
      "excerpt": "Implementation  on pytorch. \ncode based on https://github.com/soumith/dcgan.torch and https://github.com/pytorch/examples/tree/master/dcgan \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/liaoguiqiu/Multiscal_shifting/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Deep Convolution Generative Adversarial Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Multiscal_shifting",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "liaoguiqiu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/liaoguiqiu/Multiscal_shifting/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 09:30:31 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\r\nas default behaviour - training on lsun dataset\r\nusage: main.py [--dataset DATASET] [--dataroot DATAROOT] [--workers WORKERS]\r\n               [--batchSize BATCHSIZE] [--imageSize IMAGESIZE] [--nz NZ]\r\n               [--ngf NGF] [--ndf NDF] [--niter NITER] [--lr LR]\r\n               [--beta1 BETA1] [--netG NETG] [--netD NETD]\r\n               [--outf OUTPUTFOLD] [--manualSeed SEED] [--train_svm]\r\n\r\narguments:\r\n  --dataset DATASET     cifar10 | lsun | imagenet | folder | lfw\r\n  --dataroot DATAROOT   path to dataset\r\n  --workers WORKERS     number of data loading workers\r\n  --batchSize BATCHSIZE\r\n                        input batch size\r\n  --imageSize IMAGESIZE\r\n                        the height / width of the input image to network\r\n  --nz NZ               size of the latent z vector\r\n  --ngf NGF\r\n  --ndf NDF\r\n  --niter NITER         number of epochs to train for\r\n  --lr LR               learning rate, default=0.0002\r\n  --beta1 BETA1         beta1 for adam. default=0.5\r\n  --netG NETG           path to netG (to continue training)\r\n  --netD NETD           path to netD (to continue training)\r\n  --outf OUTPUTFOLD     folder to output images and model checkpoints\r\n  --manualSeed SEED     manual seed\r\n  --train_svm           enable train svm using saved features\r\n  \r\n```\r\n\r\n* *main.py* - train dcgan\r\n\r\n* *arithmetic.py* - create some new images applying \"image arithmetic\"\r\n\r\n* *classifier_svm.py* - without flag --train_svm just create and store features, with - download features and train svm. Metrics: accuracy for the whole dataset, precision and recall for each class.\r\n\r\n* *extract_imagenet.py* - create pictures from pickle\r\n\r\n* *get_samples.py* - use pretrained generator to get samples from noise\r\n\r\n\r\n![alt text](https://github.com/Annusha/dcgan/blob/master/images/means.png)\r\n\r\n![alt text](https://github.com/Annusha/dcgan/blob/master/images/A_B.png)\r\n",
      "technique": "Header extraction"
    }
  ]
}