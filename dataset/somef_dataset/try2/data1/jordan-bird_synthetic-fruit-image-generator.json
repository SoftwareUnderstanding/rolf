{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1610.02391",
      "https://arxiv.org/abs/1610.02391",
      "https://arxiv.org/abs/1409.1556"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This model was developed for the following research paper: [Fruit Quality and Defect Image Classification with Conditional GAN Data Augmentation](https://www.sciencedirect.com/science/article/pii/S0304423821007913)\n\nTrained on the [Lemons quality control dataset](https://github.com/softwaremill/lemon-dataset)\n\nCode written following a tutorial from [Machine Learning Mastery](https://machinelearningmastery.com/how-to-develop-a-conditional-generative-adversarial-network-from-scratch/) - Jason Brownlee's code has been edited to support larger RGB images, and the program requires the definition of the class by the user.\n\nClass activation analysis (code not included) is from [Selvaraju, et al](https://arxiv.org/abs/1610.02391) via the [VGG16 model](https://arxiv.org/abs/1409.1556). A keras tutorial for this can be found [here](https://keras.io/examples/vision/grad_cam/). We analyse *\"block5_conv3\"* followed by *\"block5_pool\"*, *\"flatten\"* (all from VGG16), and then our own layer of 4096 neurons (*\"dense_1\"*) and output (*\"predictions\"*).\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jordan-bird/synthetic-fruit-image-generator",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-18T00:46:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-16T14:19:56Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9278329922141106,
        0.952062333219612,
        0.9848813459106276
      ],
      "excerpt": "Image from our paper: Fruit Quality and Defect Image Classification with Conditional GAN Data Augmentation \nThe CGAN was trained on 256x256px images for 2000 epochs on an RTX 2080Ti which took around 17 hours. More info is available in the paper below \nIn the above image, the top row shows \"healthy\" lemons and the bottom row shows \"unhealthy\" lemons. After training a VGG16 CNN on the real dataset, we then provided the images above to the network and used Grad-CAM to visualise the class activation maps. Notice that for unhealthy lemons, the class activation is focused moreso on the undesirable characteristics such as mould in the first two and gangrene in the final one. For the healthy lemons, the network seems to focus on the entire fruit which suggests, as we could have guessed, that healthy fruit is classified via its overall shape and form. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Use a CGAN to generate synthetic images of healthy and unhealthy lemons",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jordan-bird/synthetic-fruit-image-generator/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 20:45:20 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jordan-bird/synthetic-fruit-image-generator/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jordan-bird/synthetic-fruit-image-generator",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jordan-bird/synthetic-fruit-image-generator/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": ":lemon: Synthetic Lemon Fruit Image Generator :lemon:",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "synthetic-fruit-image-generator",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jordan-bird",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jordan-bird/synthetic-fruit-image-generator/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* NumPy\n* Keras\n* Matplotlib (if you want to plot the images)\n\nI used NumPy v1.19.3 and Keras v2.4.3 with TensorFlow 2.4.0 backend, but most versions should work. \n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Mon, 27 Dec 2021 20:45:20 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Simply run either:\n```\npython generate_lemons.py --type=healthy\n```\nor:\n```\npython generate_lemons.py --type=unhealthy\n```\n\nTo change the weights, line 44 defines which model to use:\n```\nmodel = load_model('lemons_generator_1500.h5')\n```\nIn the form: 'lemons_generator_*epochnum*.h5'\n\nThen, 1000 jpg files will be generated of lemons that are either healthy or unhealthy\n\n",
      "technique": "Header extraction"
    }
  ]
}