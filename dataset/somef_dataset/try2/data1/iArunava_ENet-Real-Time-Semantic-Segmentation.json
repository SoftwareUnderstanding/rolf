{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.02147, 2016.\n\n## Citations\n\n```\n@inproceedings{ BrostowSFC:ECCV08,\n  author    = {Gabriel J. Brostow and Jamie Shotton and Julien Fauqueur and Roberto Cipolla"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{ BrostowSFC:ECCV08,\n  author    = {Gabriel J. Brostow and Jamie Shotton and Julien Fauqueur and Roberto Cipolla},\n  title     = {Segmentation and Recognition Using Structure from Motion Point Clouds},\n  booktitle = {ECCV (1)},\n  year      = {2008},\n  pages     = {44-57}\n}\n\n@article{ BrostowFC:PRL2008,\n    author = \"Gabriel J. Brostow and Julien Fauqueur and Roberto Cipolla\",\n    title = \"Semantic Object Classes in Video: A High-Definition Ground Truth Database\",\n    journal = \"Pattern Recognition Letters\",\n    volume = \"xx\",\n    number = \"x\",   \n    pages = \"xx-xx\",\n    year = \"2008\"\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. A. Paszke, A. Chaurasia, S. Kim, and E. Culurciello.\nEnet: A deep neural network architecture\nfor real-time semantic segmentation. arXiv preprint\narXiv:1606.02147, 2016.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{ BrostowFC:PRL2008,\n    author = \"Gabriel J. Brostow and Julien Fauqueur and Roberto Cipolla\",\n    title = \"Semantic Object Classes in Video: A High-Definition Ground Truth Database\",\n    journal = \"Pattern Recognition Letters\",\n    volume = \"xx\",\n    number = \"x\", \n    pages = \"xx-xx\",\n    year = \"2008\"\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{ BrostowSFC:ECCV08,\n  author    = {Gabriel J. Brostow and Jamie Shotton and Julien Fauqueur and Roberto Cipolla},\n  title     = {Segmentation and Recognition Using Structure from Motion Point Clouds},\n  booktitle = {ECCV (1)},\n  year      = {2008},\n  pages     = {44-57}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-15T05:06:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-21T12:41:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "ENet - A Neural Net Architecture for real time Semantic Segmentation",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 72,
      "date": "Sun, 26 Dec 2021 21:32:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/iArunava/ENet-Real-Time-Semantic-Segmentation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "iArunava/ENet-Real-Time-Semantic-Segmentation",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/iArunava/ENet-Real-Time-Semantic-Segmentation/master/ENet-Real_Time_Semantic_Segmentation.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/iArunava/ENet-Real-Time-Semantic-Segmentation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2019, Arunava\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n Redistributions of source code must retain the above copyright notice, this\\n  list of conditions and the following disclaimer.\\n\\n Redistributions in binary form must reproduce the above copyright notice,\\n  this list of conditions and the following disclaimer in the documentation\\n  and/or other materials provided with the distribution.\\n\\n* Neither the name of the copyright holder nor the names of its\\n  contributors may be used to endorse or promote products derived from\\n  this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "ENet - Real Time Semantic Segmentation",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "ENet-Real-Time-Semantic-Segmentation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "iArunava",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 251,
      "date": "Sun, 26 Dec 2021 21:32:12 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "enet",
      "paper",
      "deep-learning",
      "artificial-intelligence",
      "pytorch",
      "python3"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "0. This repository comes in with a handy notebook which you can use with Colab. <br/>\nYou can find a link to the notebook here: [\nENet - Real Time Semantic Segmentation](https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation/blob/master/ENet-Real%20Time%20Semantic%20Segmentation.ipynb) <br/>\nOpen it in colab: [Open in Colab](https://colab.research.google.com/github/iArunava/ENet-Real-Time-Semantic-Segmentation/blob/master/ENet-Real%20Time%20Semantic%20Segmentation.ipynb)\n\n---\n\n\n0. Clone the repository and cd into it\n```\ngit clone https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation.git\ncd ENet-Real-Time-Semantic-Segmentation/\n```\n\n1. Use this command to train the model\n```\npython3 init.py --mode train -iptr path/to/train/input/set/ -lptr /path/to/label/set/\n```\n\n2. Use this command to test the model\n```\npython3 init.py --mode test -m /path/to/the/pretrained/model.pth -i /path/to/image/to/infer.png\n```\n\n3. Use `--help` to get more commands\n```\npython3 init.py --help\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}