{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1811.05181",
      "https://arxiv.org/abs/1906.07155"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{li2019gradient,\n  title={Gradient Harmonized Single-stage Detector},\n  author={Li, Buyu and Liu, Yu and Wang, Xiaogang},\n  booktitle={AAAI Conference on Artificial Intelligence},\n  year={2019}\n}\n```\nIf the code helps you in your research, please also cite:\n```\n@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Kai Chen, Jiaqi Wang, Jiangmiao Pang, Yuhang Cao, Yu Xiong, Xiaoxiao Li,\n             Shuyang Sun, Wansen Feng, Ziwei Liu, Jiarui Xu, Zheng Zhang, Dazhi Cheng,\n             Chenchen Zhu, Tianheng Cheng, Qijie Zhao, Buyu Li, Xin Lu, Rui Zhu, Yue Wu,\n             Jifeng Dai, Jingdong Wang, Jianping Shi, Wanli Ouyang, Chen Change Loy, Dahua Lin},\n  journal = {arXiv preprint arXiv:1906.07155},\n  year    = {2019}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Kai Chen, Jiaqi Wang, Jiangmiao Pang, Yuhang Cao, Yu Xiong, Xiaoxiao Li,\n             Shuyang Sun, Wansen Feng, Ziwei Liu, Jiarui Xu, Zheng Zhang, Dazhi Cheng,\n             Chenchen Zhu, Tianheng Cheng, Qijie Zhao, Buyu Li, Xin Lu, Rui Zhu, Yue Wu,\n             Jifeng Dai, Jingdong Wang, Jianping Shi, Wanli Ouyang, Chen Change Loy, Dahua Lin},\n  journal = {arXiv preprint arXiv:1906.07155},\n  year    = {2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{li2019gradient,\n  title={Gradient Harmonized Single-stage Detector},\n  author={Li, Buyu and Liu, Yu and Wang, Xiaogang},\n  booktitle={AAAI Conference on Artificial Intelligence},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9797513115737615,
        0.9047552191178093
      ],
      "excerpt": "The implementation of Gradient Harmonized Single-stage Detector published on AAAI 2019 (Oral). \n(May 24, 2019) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/libuyu/GHM_Detection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-11-03T08:32:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-22T04:04:06Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8670061210936346
      ],
      "excerpt": "The implementation of Gradient Harmonized Single-stage Detector published on AAAI 2019 (Oral). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285090092917255,
        0.8417653789948493
      ],
      "excerpt": "data_root: Root for the data set \nmodel.pretrained: the path to the ImageNet pretrained backbone model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8042477671016393,
        0.8403744530094537
      ],
      "excerpt": "mu: the \\mu for ASL1 loss \nbins, momentum: similar to ghmc  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8505478351437212,
        0.8310396835158068,
        0.8150771532802734
      ],
      "excerpt": "The code works for pytorch 1.0.1 and later version. \nTraining using the Res50-FPN backbone and testing on COCO minival. \nMethod | AP \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "The implementation of \u201cGradient Harmonized Single-stage Detector\u201d published on AAAI 2019.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/libuyu/GHM_Detection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 110,
      "date": "Sat, 25 Dec 2021 12:44:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/libuyu/GHM_Detection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "libuyu/GHM_Detection",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/libuyu/GHM_Detection/master/experiments/test.sh",
      "https://raw.githubusercontent.com/libuyu/GHM_Detection/master/experiments/train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "It is recommended to symlink the datasets root to `mmdetection/data`.\n```\nln -s $YOUR_DATA_ROOT data\n```\nThe directories should be arranged like this:\n```\nGHM_detection\n\u251c\u2500\u2500\tmmdetection\n|\t\u251c\u2500\u2500 mmdet\n|\t\u251c\u2500\u2500 tools\n|\t\u251c\u2500\u2500 configs\n|\t\u251c\u2500\u2500 data\n|\t\u2502   \u251c\u2500\u2500 coco\n|\t\u2502   \u2502   \u251c\u2500\u2500 annotations\n|\t\u2502   \u2502   \u251c\u2500\u2500 train2017\n|\t\u2502   \u2502   \u251c\u2500\u2500 val2017\n|\t\u2502   \u2502   \u251c\u2500\u2500 test2017\n|\t\u2502   \u251c\u2500\u2500 VOCdevkit\n|\t\u2502   \u2502   \u251c\u2500\u2500 VOC2007\n|\t\u2502   \u2502   \u251c\u2500\u2500 VOC2012\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "i. Clone the repository\n```shell\ngit clone --recursive https://github.com/libuyu/GHM_Detection.git\n```\n\nii. Compile extensions\n```\ncd GHM_Detection/mmdetection\n\n./compile.sh\n```\n\niii. Setup mmdetection\n```\npip install -e . \n#: editable mode is convinient when debugging\n#: if your code in mmdetection is fixed, use \"pip install .\" directly\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "i. Create a new environment\nWe recommend Anaconda as the package & environment manager. And here is an example:\n```shell\nconda create -n ghm\nconda activate ghm\n```\n\nii. Install PyTorch\nFollow the [official instructions](https://pytorch.org/) to install Pytorch. Here is an example using conda:\n```shell\nconda install pytorch torchvision -c pytorch\n```\niii. Install Cython\n```shell\nconda install cython \n#: or \"pip install cython\"\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This project is based on [mmdetection](https://github.com/open-mmlab/mmdetection). \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8075843584042395
      ],
      "excerpt": "work_dir: the directory for current experiment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8110408409718649
      ],
      "excerpt": "The code works for pytorch 1.0.1 and later version. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/libuyu/GHM_Detection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 libuyu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "GHM_Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "GHM_Detection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "libuyu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/libuyu/GHM_Detection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.5+\n- PyTorch 1.0+ \n  (Based on the current version of mmdetection)\n- CUDA 9.0+\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 583,
      "date": "Sat, 25 Dec 2021 12:44:57 GMT"
    },
    "technique": "GitHub API"
  }
}