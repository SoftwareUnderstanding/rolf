{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n1. Ioffe, Sergey, and Christian Szegedy. \u201cBatch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift.\u201d *ArXiv:1502.03167 [Cs]*, Mar. 2015. *arXiv.org*, http://arxiv.org/abs/1502.03167.\r\n2. Roy, Prasun, et al. \u201cEffects of Degradations on Deep Neural Network Architectures.\u201d *ArXiv:1807.10108 [Cs, Eess]*, June 2019. *arXiv.org*, http://arxiv.org/abs/1807.10108.",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fescobar96/Image-Noise-Removal",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-21T23:44:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-27T15:03:41Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nSimilar to generative adversarial networks, autoencoders work by learning the latent space representation of the data that is fed in. The latent space contains all the necessary information to recreate the features of the original data. \r\n\r\nIn this project, I used an autoencoder to remove salt and pepper noise from corrupted images. It is important to highlight that this type of neural network could be easily applied to another type of problems like increasing resolution of images, image colorization, film restoration, and background removal.\r\n\r\n\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9877249430375815,
        0.9769601969191254,
        0.9124119669214559,
        0.9673937929743918
      ],
      "excerpt": "For this project, I used the 'Natural Images' dataset, which was created as a benchmark dataset for the paper: 'Effects of Degradations on Deep Neural Network Architectures' by Roy et al. The dataset is composed of 6,899 images of the eight following classes: airplanes, cars, cats, dogs, flowers, fruits, motorcycles, and people. A more diverse dataset could have yield better results and a more reliable and widely applicable model. \nThe first step of this project was to generate 'corrupted' images. To achieve this, the I added a random amount of salt and pepper noise to every image in the dataset and saved it in a separate folder from the original images. For more details, please open the Noisy_Images_Generator.ipynb notebook. \nThe denoising process started by importing in a sorted fashion both the 'corrupted' images and the clean images. It is important to import the images in order because the cleaned dataset will be used by the autoencoder as a reference of what the noisy images should look like. After importing and normalizing the images, the two datasets were split into a training (80% of data) and validation set (20% of data.)  \nThe autoencoder is composed of 9 layers:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.95938190936096,
        0.940713351406401
      ],
      "excerpt": "The model that I present differs from a traditional deep convolutional autoencoder mainly on the use of batch normalization and Leaky ReLU. The rationale behind my improvements is the following: \nBatch Normalization: By normalizing the inputs of each layer for each batch, I can limit how much the distribution of the inputs received by the current layer is affected by the previous layer. This decreases any possible interdependence between different parameters, and it helps increasing the training speed and the reliability of the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Remove salt & pepper noise from images using autoencoders. ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fescobar96/Image-Noise-Removal/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 07:52:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fescobar96/Image-Noise-Removal/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fescobar96/Image-Noise-Removal",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fescobar96/Image-Noise-Removal/master/Noisy_Images_Generator.ipynb",
      "https://raw.githubusercontent.com/fescobar96/Image-Noise-Removal/master/Image_Noise_Removal.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8162183260480828
      ],
      "excerpt": "The denoising process started by importing in a sorted fashion both the 'corrupted' images and the clean images. It is important to import the images in order because the cleaned dataset will be used by the autoencoder as a reference of what the noisy images should look like. After importing and normalizing the images, the two datasets were split into a training (80% of data) and validation set (20% of data.)  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fescobar96/Image-Noise-Removal/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Image Noise Removal",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Image-Noise-Removal",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fescobar96",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fescobar96/Image-Noise-Removal/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 28 Dec 2021 07:52:27 GMT"
    },
    "technique": "GitHub API"
  }
}