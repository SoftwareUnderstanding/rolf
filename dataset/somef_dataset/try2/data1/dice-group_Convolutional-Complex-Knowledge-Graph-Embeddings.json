{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We based our implementation on the open source implementation of [TuckER](https://github.com/ibalazevic/TuckER). We would like to thank for the readable codebase.\n\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2105.12524"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@inproceedings{demir2021convolutional,\ntitle={Convolutional Complex Knowledge Graph Embeddings},\nauthor={Caglar Demir and Axel-Cyrille Ngonga Ngomo},\nbooktitle={Eighteenth Extended Semantic Web Conference - Research Track},\nyear={2021},\nurl={https://openreview.net/forum?id=6T45-4TFqaX}}\n```\n\nFor any further questions or suggestions, please contact:  ```caglar.demir@upb.de```",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|         |   MRR | Hits@10 | Hits@3 | Hits@1  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8504951649337602,
        0.9030859728368266
      ],
      "excerpt": "(*) denotes the newly reported link prediction results. \n|         |   MRR | Hits@10 | Hits@3 | Hits@1 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8504951649337602,
        0.9030859728368266
      ],
      "excerpt": "(*) denotes the newly reported link prediction results. \n|         |   MRR | Hits@10 | Hits@3 | Hits@1 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|                  |   MRR      | Hits@10  | Hits@3 | Hits@1 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9697638943000508
      ],
      "excerpt": "Please contact:  caglar.demir@upb.de, if you wish to obtain ConEx embeddings of specific dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "- YAGO3-10 embeddings \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8555470687632882
      ],
      "excerpt": "- python reproduce_lp_new.py reports link prediction results on WN18RR, FB15K-237 and YAGO3-10*. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|         |   MRR | Hits@10 | Hits@3 | Hits@1  | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|         |   MRR | Hits@10 | Hits@3 | Hits@1  | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-12-09T10:02:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-27T17:45:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9687092045352569,
        0.9822053927203307
      ],
      "excerpt": "This open-source project contains the Pytorch implementation of our approach (ConEx), training and evaluation scripts. \nIn the below, we provide a brief overview of the link prediction results. Results are sorted in descending order of the size of the respective dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.980349888138432
      ],
      "excerpt": "We spot flaws on WN18RR, FB15K-237 and YAGO3-10. More specifically, the validation and test splits of the dataset contain entities that do not occur in the training split. We refer Out-of-Vocabulary Entities in Link Prediction for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9319836935545588
      ],
      "excerpt": "A 2D PCA projection of relation embeddings on the FB15K-237 dataset. The Figure shows that inverse relations cluster in distant regions. Note that we applied the standard data augmentation technique \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8583332434120808,
        0.8123827505379958
      ],
      "excerpt": "Please follow the next steps to reproduce all reported results. \n- Unzip the datasets: unzip KGs.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9423668958073462
      ],
      "excerpt": "In the below, we provide a brief overview of the link prediction results. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 19:15:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "First clone the repository:\n```\ngit clone https://github.com/dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings.git\n```\nThen obtain the required libraries:\n```\nconda env create -f environment.yml\nsource activate conex\n```\nThe code is compatible with Python 3.6.4.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8402574685299704,
        0.8005930908360053
      ],
      "excerpt": "- Create a folder for pretrained models: mkdir PretrainedModels \n- Download pretrained models via hobbitdata into PretrainedModels. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8531542774590555
      ],
      "excerpt": "- Create a folder for pretrained models: mkdir PretrainedModels \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8137024456302843
      ],
      "excerpt": "- python reproduce_lp.py reproduces link prediction results on the FB15K-237, FB15K, WN18, WN18RR and YAGO3-10 benchmark datasets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8454481940038661,
        0.8249955016573026,
        0.8006829260662748
      ],
      "excerpt": "- settings.json files store the hyperparameter setting for each model. \n- python reproduce_ensemble.py reports link prediction results of ensembled models. \n- python reproduce_lp_new.py reports link prediction results on WN18RR, FB15K-237 and YAGO3-10*. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Convolutional Complex Knowledge Graph Embeddings",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Convolutional-Complex-Knowledge-Graph-Embeddings",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "dice-group",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/dice-group/Convolutional-Complex-Knowledge-Graph-Embeddings/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Thu, 23 Dec 2021 19:15:40 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "+ ```run_script.py``` can be used to train ConEx on a desired dataset.\n+ ```grid_search.py``` can be used to rerun our experiments.\n\n",
      "technique": "Header extraction"
    }
  ]
}