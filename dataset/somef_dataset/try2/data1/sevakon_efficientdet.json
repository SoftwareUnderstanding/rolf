{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.09070\n\n<img src=\"https://sun9-35.userapi.com/c205628/v205628726/d29b4/gTjpU4gj2zc.jpg\">\n\n\n### Motivation\nAs of the time I started working on this project, there was no PyTorch implementation on GitHub that\n would match the original paper in the number of the model's parameters. \nAll of the existed repositories altered a lot from the recently published TensorFlow \nimplementation by [Brain Team](https://github.com/google/automl/tree/master/efficientdet",
      "https://arxiv.org/abs/1911.09070"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [[1]](https://arxiv.org/abs/1911.09070) Mingxing Tan, Ruoming Pang, Quoc V. Le. **EfficientDet: Scalable and Efficient Object Detection**\n- [[2]](https://github.com/google/automl/tree/master/efficientdet) EfficientDet implementation in TensorFlow by Google AutoML\n- [[3]](https://github.com/lukemelas/EfficientNet-PyTorch) PyTorch EfficientNet implementation by @lukemelas\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "<img src=\"https://sun9-35.userapi.com/c205628/v205628726/d29b4/gTjpU4gj2zc.jpg\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": "| D3 | soon | 12.022M | 12.0M | soon | 45.9 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sevakon/efficientdet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-03-25T18:57:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T14:45:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9883376878551778,
        0.8714884051072845,
        0.8843351755400606,
        0.9586266249666965
      ],
      "excerpt": "As of the time I started working on this project, there was no PyTorch implementation on GitHub that \n would match the original paper in the number of the model's parameters.  \nAll of the existed repositories altered a lot from the recently published TensorFlow  \nimplementation by Brain Team (e.g. changing strides in the backbone, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9198952375560129,
        0.9049833327534568,
        0.9872403705011008
      ],
      "excerpt": "Here is my attempt to reproduce EfficientDet in PyTorch. \nMy end goal is to reproduce training cycle from the original paper and achieve nearly same results. \nAlternatively to the TensorFlow implementation, I got rid of the useless biases \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "PyTorch Implementation of the state-of-the-art model for object detection EfficientDet   [pre-trained weights provided]  ",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nwget http://images.cocodataset.org/zips/train2017.zip\nunzip train2017.zip && mv train2017 data/coco/train2017 && rm train2017.zip\n\nwget http://images.cocodataset.org/zips/val2017.zip\nunzip val2017.zip && mv val2017 data/coco/val2017 && rm val2017.zip\n\nwget http://images.cocodataset.org/annotations/annotations_trainval2017.zip\nunzip annotations_trainval2017.zip && mv annotations data/coco && rm annotations_trainval2017.zip\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nwget http://images.cocodataset.org/zips/val2017.zip\nunzip val2017.zip && mv val2017 data/coco/val2017 && rm val2017.zip\n\nwget http://images.cocodataset.org/annotations/annotations_trainval2017.zip\nunzip annotations_trainval2017.zip && mv annotations data/coco && rm annotations_trainval2017.zip\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sevakon/efficientdet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 28 Dec 2021 07:50:08 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sevakon/efficientdet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sevakon/efficientdet",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sevakon/efficientdet/master/demo/demonstration.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nwget http://images.cocodataset.org/zips/val2017.zip\nunzip val2017.zip && mv val2017 data/coco/val2017 && rm val2017.zip\n\nwget http://images.cocodataset.org/annotations/annotations_trainval2017.zip\nunzip annotations_trainval2017.zip && mv annotations data/coco && rm annotations_trainval2017.zip\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\nwget http://images.cocodataset.org/zips/train2017.zip\nunzip train2017.zip && mv train2017 data/coco/train2017 && rm train2017.zip\n\nwget http://images.cocodataset.org/zips/val2017.zip\nunzip val2017.zip && mv val2017 data/coco/val2017 && rm val2017.zip\n\nwget http://images.cocodataset.org/annotations/annotations_trainval2017.zip\nunzip annotations_trainval2017.zip && mv annotations data/coco && rm annotations_trainval2017.zip\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8096422022825122,
        0.8096422022825122
      ],
      "excerpt": "| D1 | download | 6.622M | 6.6M | 38.7 | 39.1 | \n| D2 | download | 8.091M | 8.1M | 42.1 | 42.5 | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920990833994524
      ],
      "excerpt": "[X] COCO train script \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.810870454768102,
        0.810870454768102
      ],
      "excerpt": "| D1 | download | 6.622M | 6.6M | 38.7 | 39.1 | \n| D2 | download | 8.091M | 8.1M | 42.1 | 42.5 | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sevakon/efficientdet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Seva Konyakhin\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EfficientDet: Scalable and Efficient Object Detection",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "efficientdet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sevakon",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sevakon/efficientdet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "sevakon",
        "body": "",
        "dateCreated": "2020-04-15T21:43:32Z",
        "datePublished": "2020-04-15T21:45:37Z",
        "html_url": "https://github.com/sevakon/efficientdet/releases/tag/2.0",
        "name": "D0, D1, D2 versions ported from TF",
        "tag_name": "2.0",
        "tarball_url": "https://api.github.com/repos/sevakon/efficientdet/tarball/2.0",
        "url": "https://api.github.com/repos/sevakon/efficientdet/releases/25548615",
        "zipball_url": "https://api.github.com/repos/sevakon/efficientdet/zipball/2.0"
      },
      {
        "authorType": "User",
        "author_name": "sevakon",
        "body": "",
        "dateCreated": "2020-04-10T05:03:30Z",
        "datePublished": "2020-04-10T05:09:16Z",
        "html_url": "https://github.com/sevakon/efficientdet/releases/tag/v1.0",
        "name": "Pre-trained weights from Google TF implementation",
        "tag_name": "v1.0",
        "tarball_url": "https://api.github.com/repos/sevakon/efficientdet/tarball/v1.0",
        "url": "https://api.github.com/repos/sevakon/efficientdet/releases/25384554",
        "zipball_url": "https://api.github.com/repos/sevakon/efficientdet/zipball/v1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\npython main.py -mode 'trainval' -model 'efficientdet-d{}'\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\npython main.py -mode eval -model efficientdet-d{} --pretrained\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Tue, 28 Dec 2021 07:50:08 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "efficientdet",
      "efficientnet",
      "object-detection",
      "pytorch"
    ],
    "technique": "GitHub API"
  }
}