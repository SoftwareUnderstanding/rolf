{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1512.03385\n\nhttp://icsl.ee.columbia.edu/projects/personal-energy-footprinting/\n\nhttp://icsl.ee.columbia.edu/projects/seus/\n\nhttps://edblogs.columbia.edu/eecse4764-001-2016-3/\n\nhttps://edblogs.columbia.edu/eecse4764-001-2017-3/\n\nhttp://icsl.ee.columbia.edu/iot-class/2016fall/group7/\n\nhttp://icsl.ee.columbia.edu/iot-class/2016fall/group8/\n\n\t\t\t\t\t\n\n### Contact Our Team\n\nJiajing Sun: js5504@columbia.edu\n\nJiayu Wang: jw3689@columbia.edu\n\nHuixiang Zhuang: hz2538@columbia.edu\n\n\n\nColumbia University Department of Electrical Engineering \nhttp://www.ee.columbia.edu\n\nClass Website:\nColumbia University EECS E4764 Fall '19 IoT\nhttps://edblogs.columbia.edu/eecs4764-001-2019-3/\n\nInstructor: Professsor Xiaofan (Fred"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Deep Residual Learning for Image Recognition. https://arxiv.org/abs/1512.03385\n\nhttp://icsl.ee.columbia.edu/projects/personal-energy-footprinting/\n\nhttp://icsl.ee.columbia.edu/projects/seus/\n\nhttps://edblogs.columbia.edu/eecse4764-001-2016-3/\n\nhttps://edblogs.columbia.edu/eecse4764-001-2017-3/\n\nhttp://icsl.ee.columbia.edu/iot-class/2016fall/group7/\n\nhttp://icsl.ee.columbia.edu/iot-class/2016fall/group8/\n\n\t\t\t\t\t\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hz2538/iot_JennyGo",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Jiajing Sun: js5504@columbia.edu\n\nJiayu Wang: jw3689@columbia.edu\n\nHuixiang Zhuang: hz2538@columbia.edu\n\n\n\nColumbia University Department of Electrical Engineering \nhttp://www.ee.columbia.edu\n\nClass Website:\nColumbia University EECS E4764 Fall '19 IoT\nhttps://edblogs.columbia.edu/eecs4764-001-2019-3/\n\nInstructor: Professsor Xiaofan (Fred) Jiang\nhttp://fredjiang.com/\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-20T17:25:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-27T21:09:04Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9888448356035807,
        0.9917584534696153,
        0.9803593436980588
      ],
      "excerpt": "Our project aims to enhance the interaction between pet turtle and human.  \nWith our app, you could \u201ctalk\u201d to your turtle and she will response to you based on her probable personality, current activity and mood which predicted by our neural network based on the photos in a real-time method.  \nWe also implemented environment monitoring to help with building a more comfortable living area for turtle to enjoy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9452536006070665
      ],
      "excerpt": "The last three components connect and communicate with each other with http POST and GET.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9828384770760699,
        0.9136327689539765,
        0.968104631433389
      ],
      "excerpt": "The cloud loads the Flask platform which provides the interfaces, the AI model as well as our database.  \nThe APP is the user interface with the main page and the chat page.  \nGoogle speech-to-text (STT) and text-to-speech (TTS) modules are implemented. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8888690782002341,
        0.9492655459782747,
        0.8303795194397969
      ],
      "excerpt": "The temperature, humidity that updated from our sensor every 30 seconds.  \nThe light sensor controls the lighting condition of the environment, and based on the measurement, our app can switch to the night mode.  \nAnd the camera is running under the \u201cmonitor\u201d mode, which capture the turtle every 1 minute.  \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hz2538/iot_JennyGo/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Wed, 29 Dec 2021 02:32:54 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hz2538/iot_JennyGo/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "hz2538/iot_JennyGo",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/hz2538/iot_JennyGo/master/cloud/densenet_iot.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/hz2538/iot_JennyGo/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "iot_JennyGo",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "iot_JennyGo",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "hz2538",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hz2538/iot_JennyGo/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 02:32:54 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "JennyGo is a product which can make keeping your pet turtle more funny. \nAs well as monitoring the phisical state and habitant of turtle, it also predict the mood and personality by machine learning algorithms.\nEnjoy talking with your turtle!\n\n\n",
      "technique": "Header extraction"
    }
  ]
}