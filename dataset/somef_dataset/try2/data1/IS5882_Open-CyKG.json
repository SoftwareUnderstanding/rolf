{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1308.4941"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite Open-CyKG if you use any of this material in your work.\n\n`I. Sarhan and M. Spruit, Open-CyKG: An Open Cyber Threat Intelligence Knowledge Graph, Knowledge-Based Systems (2021), doi: https://doi.org/10.1016/j.knosys.2021.107524.`\n\n```\n@article{SARHAN2021107524,\ntitle = {Open-CyKG: An Open Cyber Threat Intelligence Knowledge Graph},\njournal = {Knowledge-Based Systems},\nvolume = {233},\npages = {107524},\nyear = {2021},\nissn = {0950-7051},\ndoi = {https://doi.org/10.1016/j.knosys.2021.107524},\nurl = {https://www.sciencedirect.com/science/article/pii/S0950705121007863},\nauthor = {Injy Sarhan and Marco Spruit},\nkeywords = {Cyber Threat Intelligence, Knowledge Graph, Named Entity Recognition, Open Information Extraction, Attention network},\nabstract = {Instant analysis of cybersecurity reports is a fundamental challenge for security experts as an immeasurable amount of cyber information is generated on a daily basis, which necessitates automated information extraction tools to facilitate querying and retrieval of data. Hence, we present Open-CyKG: an Open Cyber Threat Intelligence (CTI) Knowledge Graph (KG) framework that is constructed using an attention-based neural Open Information Extraction (OIE) model to extract valuable cyber threat information from unstructured Advanced Persistent Threat (APT) reports. More specifically, we first identify relevant entities by developing a neural cybersecurity Named Entity Recognizer (NER) that aids in labeling relation triples generated by the OIE model. Afterwards, the extracted structured data is canonicalized to build the KG by employing fusion techniques using word embeddings. As a result, security professionals can execute queries to retrieve valuable information from the Open-CyKG framework. Experimental results demonstrate that our proposed components that build up Open-CyKG outperform state-of-the-art models.11Our implementation of Open-CyKG is publicly available at https://github.com/IS5882/Open-CyKG.}\n}\n\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{SARHAN2021107524,\ntitle = {Open-CyKG: An Open Cyber Threat Intelligence Knowledge Graph},\njournal = {Knowledge-Based Systems},\nvolume = {233},\npages = {107524},\nyear = {2021},\nissn = {0950-7051},\ndoi = {https://doi.org/10.1016/j.knosys.2021.107524},\nurl = {https://www.sciencedirect.com/science/article/pii/S0950705121007863},\nauthor = {Injy Sarhan and Marco Spruit},\nkeywords = {Cyber Threat Intelligence, Knowledge Graph, Named Entity Recognition, Open Information Extraction, Attention network},\nabstract = {Instant analysis of cybersecurity reports is a fundamental challenge for security experts as an immeasurable amount of cyber information is generated on a daily basis, which necessitates automated information extraction tools to facilitate querying and retrieval of data. Hence, we present Open-CyKG: an Open Cyber Threat Intelligence (CTI) Knowledge Graph (KG) framework that is constructed using an attention-based neural Open Information Extraction (OIE) model to extract valuable cyber threat information from unstructured Advanced Persistent Threat (APT) reports. More specifically, we first identify relevant entities by developing a neural cybersecurity Named Entity Recognizer (NER) that aids in labeling relation triples generated by the OIE model. Afterwards, the extracted structured data is canonicalized to build the KG by employing fusion techniques using word embeddings. As a result, security professionals can execute queries to retrieve valuable information from the Open-CyKG framework. Experimental results demonstrate that our proposed components that build up Open-CyKG outperform state-of-the-art models.11Our implementation of Open-CyKG is publicly available at https://github.com/IS5882/Open-CyKG.}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8183897404967329
      ],
      "excerpt": "NER dataset: Microsoft Security Bulletins (MSB) and Cyber Threat Intelligence reports (CTI) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9961463729566851,
        0.940655741324478
      ],
      "excerpt": "Functions in block 3&9 are originally refrenced from the work of Stanvosky et al. Please refer/cite his work, with exception of some modification in the functions Stanovsky, Gabriel, et al. \"Supervised open information extraction.\" Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers). 2018. \nOIE implements Bahdanau attention (https://arxiv.org/pdf/1409.0473.pdf). Towards Data Science Blog \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977726753973084
      ],
      "excerpt": "Knowledge Graph fusion motivated by the work of CESI Vashishth, Shikhar, Prince Jain, and Partha Talukdar. \"Cesi: Canonicalizing open knowledge bases using embeddings and side information.\" Proceedings of the 2018 World Wide Web Conference. 2018.. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IS5882/Open-CyKG",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-06-18T09:50:37Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-19T12:02:18Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Open-CyKG is a framework that is constructed using an attention-based neural Open Information Extraction (OIE) model to extract valuable cyber threat information from unstructured Advanced\nPersistent Threat (APT) reports. More specifically, we first identify relevant entities by developing a neural cybersecurity Named Entity Recognizer (NER) that aids in labeling relation triples generated by the OIE model. Afterwards, the extracted structured data is canonicalized to build the KG by employing fusion techniques using word embeddings.\n\n<p align=\"center\">\n \n  <img src=\"https://github.com/IS5882/Open-CyKG/blob/main/Open%20CyKg%20images-Framework.png\" width=\"550\" title=\"Open-CyKG Framework\">\n\n\n</p>\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8494016029460723,
        0.8382538017575086,
        0.9520036167460295
      ],
      "excerpt": "For dataset files please refer to the appropiate refrence in the paper. \nContextualized word embediings: link to Flairs word embedding documentation, Hugging face link of all pretrained models https://huggingface.co/transformers/v2.3.0/pretrained_models.html  \nFunctions in block 3&9 are originally refrenced from the work of Stanvosky et al. Please refer/cite his work, with exception of some modification in the functions Stanovsky, Gabriel, et al. \"Supervised open information extraction.\" Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers). 2018. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928030551514554,
        0.8406900516229641
      ],
      "excerpt": "Knowledge Graph fusion motivated by the work of CESI Vashishth, Shikhar, Prince Jain, and Partha Talukdar. \"Cesi: Canonicalizing open knowledge bases using embeddings and side information.\" Proceedings of the 2018 World Wide Web Conference. 2018.. \nNeo4J was used for Knowledge Graph visualization. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IS5882/Open-CyKG/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 30 Dec 2021 08:00:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/IS5882/Open-CyKG/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "IS5882/Open-CyKG",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/IS5882/Open-CyKG/main/Open_Cy_KG_NER.ipynb",
      "https://raw.githubusercontent.com/IS5882/Open-CyKG/main/Open_CyKG_OIE_Model.ipynb",
      "https://raw.githubusercontent.com/IS5882/Open-CyKG/main/Open_CyKG__Knowledge_Graph_Canonicalization.ipynb"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/IS5882/Open-CyKG/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Open-CyKG",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Open-CyKG",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "IS5882",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/IS5882/Open-CyKG/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Compatible with Python 3.x\n* Dependencies can be installed as specified in Block 1 in the respective notebooks. \n* All the code was implemented on Google Colab using GPU. Please ensure that you are using the version as specified in the \"\u00cfnstallion and Drives\" block.\n* Make sure to adapt the code based on your dataset and choice of word embeddings.\n* To utlize CRF in NER model using Keras; plase make sure to:\n\t\n\t-- Use tensorFlow version and Keras version:\n\t\n\t-- In tensorflow_backend.py and Optimizer.py write down those 2 liness ---> then restart runtime\n\t\n\t\t```\n\t\timport tensorflow.compat.v1 as tf\n\t\ttf.disable_v2_behavior()\n\t\t```\n\t\t\n**For more details on the how the exact process was carried out and the final hyper-parameters used; please refer to Open-CyKG paper.**\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Thu, 30 Dec 2021 08:00:16 GMT"
    },
    "technique": "GitHub API"
  }
}