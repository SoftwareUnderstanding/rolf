{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.06816",
      "https://arxiv.org/abs/1603.05027",
      "https://arxiv.org/abs/1602.07261",
      "https://arxiv.org/abs/1802.06816"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**SHIELD: Fast, Practical Defense and Vaccination for Deep Learning using JPEG Compression.**  \nNilaksh Das, Madhuri Shanbhogue, Shang-Tse Chen, Fred Hohman, Siwei Li, Li Chen, Michael E. Kounavis, Duen Horng Chau.  \n*ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD) 2018*. London, UK. Aug 19-23, 2018.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{das2018shield, \n   title={SHIELD: Fast, Practical Defense and Vaccination for Deep Learning using JPEG Compression}, \n   author={Das, Nilaksh and Shanbhogue, Madhuri and Chen, Shang-Tse and Hohman, Fred and Li, Siwei and Chen, Li and Kounavis, Michael E and Chau, Duen Horng}, \n   booktitle={Proceedings of the 24nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining}, \n   year={2018}, \n   organization={ACM} \n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "| Shang-Tse Chen        | Georgia Tech | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9747466821846071,
        0.9932230983117876,
        0.8955886365383559
      ],
      "excerpt": "| Siwei Li              | Georgia Tech | \n| Li Chen               | Intel Corporation               | \n| Michael E. Kounavis   | Intel Corporation               | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rickyHong/JPEG-Defense-repl",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-22T01:48:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-03-22T01:48:36Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9933661683137341,
        0.9714960436071111,
        0.9219341073777741,
        0.8430656497883324,
        0.9883312332942473,
        0.952343568431742,
        0.9899525382748654,
        0.8653752945575538,
        0.9427051570630177,
        0.9856440131484289
      ],
      "excerpt": "This is the code repository for the KDD 2018 Applied Data Science paper: SHIELD: Fast, Practical Defense and Vaccination for Deep Learning using JPEG Compression. Visit our research group homepage Polo Club of Data Science at Georgia Tech for more related research! \nThe code included here reproduces our techniques (e.g. SLQ) presented in the paper, and also our experiment results reported, such as using various JPEG compression qualities to remove adversarial perturbation introduced by Carlini-Wagner-L2, DeepFool, I-FSGM, and FSGM. \nThe rapidly growing body of research in adversarial machine learning has demonstrated that deep neural networks (DNNs) are highly vulnerable to adversarially generated images.  \nThis underscores the urgent need for practical defense that can be readily deployed to combat attacks in real-time.  \nObserving that many attack strategies aim to perturb image pixels in ways that are visually imperceptible, we place JPEG compression at the core of our proposed SHIELD defense framework, utilizing its capability to effectively \"compress away\" such pixel manipulation.  \nTo immunize a DNN model from artifacts introduced by compression, SHIELD \"vaccinates\" a model by re-training it with compressed images, where different compression levels are applied to generate multiple vaccinated models that are ultimately used together in an ensemble defense.  \nOn top of that, SHIELD adds an additional layer of protection by employing randomization at test time that compresses different regions of an image using random compression levels, making it harder for an adversary to estimate the transformation performed.  \nThis novel combination of vaccination, ensembling, and randomization makes SHIELD a fortified, multi-pronged defense.  \nWe conducted extensive, large-scale experiments using the ImageNet dataset, and show that our approaches eliminate up to 94% of black-box attacks and 98% of gray-box attacks delivered by the recent, strongest techniques, such as Carlini-Wagner's L2 and DeepFool.  \nOur approaches are fast and work without requiring knowledge about the model. \n",
      "technique": "Supervised classification"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository currently supports the [ResNet50-v2](https://arxiv.org/abs/1603.05027) and [Inception-v4](https://arxiv.org/abs/1602.07261) models from [tf-slim](https://github.com/tensorflow/models/tree/master/research/slim).\nRunning the following command from the `jpeg-defense` directory will download the pre-trained `.ckpt` files for these models into the `data/checkpoints` folder using the provided `setup/get_model_checkpoints.sh` script:\n\n```bash\nbash setup/get_model_checkpoints.sh data/checkpoints\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rickyHong/JPEG-Defense-repl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 22:04:09 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rickyHong/JPEG-Defense-repl/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "rickyHong/JPEG-Defense-repl",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/rickyHong/JPEG-Defense-repl/master/setup/get_model_checkpoints.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code expects the ImageNet validation dataset to be available in TFRecord format in the `data/validation` directory.\nTo provision the data, we have provided a script (`setup/get_imagenet.py`) that downloads, processes, and saves the entire ImageNet dataset in the required format.\nThis script can be run from the `setup` directory in the following manner:\n\n```bash\npython get_imagenet.py --local_scratch_dir=\"/path/to/jpeg-defense/data\"\n``` \n\nDownloading the entire dataset from the ImageNet website using this script may be very slow.\nOptionally, we recommend downloading the \n[`ILSVRC2012_img_train.tar`](http://academictorrents.com/details/a306397ccf9c2ead27155983c254227c0fd938e2) \nand [`ILSVRC2012_img_val.tar`](http://academictorrents.com/details/5d6d0df7ed81efd49ca99ea4737e0ae5e3a5f2e5)\nusing [Academic Torrents](http://academictorrents.com/), and placing these files into the `data/raw_data` directory.\nThen, you can run the following command to skip downloading the dataset and proceed with converting the data into TFRecord format:\n\n```bash\npython get_imagenet.py \\\n  --local_scratch_dir=\"/path/to/jpeg-defense/data\" \\\n  --provision_only=True\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository uses attacks from the [CleverHans](https://github.com/tensorflow/cleverhans) library, and the models are adapted from [tf-slim](https://github.com/tensorflow/models/tree/master/research/slim). We also use [Sacred](https://github.com/IDSIA/sacred) to keep track of the experiments.\nAll dependencies for this repository can be found in `requirements.txt`. To install these dependencies, run the following command from the `jpeg-defense` directory:\n```bash\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9764588394878484,
        0.9893272198983933,
        0.8661176197453521
      ],
      "excerpt": "To clone this repository using git, simply run the following command: \ngit clone https://github.com/poloclub/jpeg-defense.git \n|  Name                 | Affiliation                     | \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "|  Name                 | Affiliation                     | \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/rickyHong/JPEG-Defense-repl/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Polo Club of Data Science\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SHIELD: Fast, Practical Defense and Vaccination for Deep Learning using JPEG Compression",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "JPEG-Defense-repl",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "rickyHong",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/rickyHong/JPEG-Defense-repl/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This repository uses attacks from the [CleverHans](https://github.com/tensorflow/cleverhans) library, and the models are adapted from [tf-slim](https://github.com/tensorflow/models/tree/master/research/slim). We also use [Sacred](https://github.com/IDSIA/sacred) to keep track of the experiments.\nAll dependencies for this repository can be found in `requirements.txt`. To install these dependencies, run the following command from the `jpeg-defense` directory:\n```bash\npip install -r requirements.txt\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 23 Dec 2021 22:04:09 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The **`main.py`** script in the `shield` package can be used to perform all the experiments using the `--perform=attack|defend|evaluate` flags.\n\n- *attack* - Attacks the specified model with the specified method and its parameters (see `shield/opts.py`).\n\n```bash\npython main.py with \\                               \n  perform=attack \\\n  model=resnet_50_v2 \\\n  attack=fgsm \\\n  attack_options=\"{'eps': 16}\"\n```\n\n- *defend* - Defends the specified attacked images with the specified defense and its parameters (see `shield/opts.py`).\nThe defense uses the attack parameters only to determine which images are loaded for preprocessing,\nas these parameters are not used by the preprocessing itself.\n\n```bash\npython main.py with \\                               \n  perform=defend \\\n  model=resnet_50_v2 \\\n  attack=fgsm \\\n  attack_options=\"{'eps': 16}\" \\\n  defense=jpeg \\\n  defense_options=\"{'quality': 80}\"\n```\n\n- evaluate - Evaluates the specified model with the specified attacked/defended version of the images.\n\n```bash\npython main.py with \\                               \n  perform=evaluate \\\n  model=resnet_50_v2 \\\n  attack=fgsm \\\n  attack_options=\"{'eps': 16}\"\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "[![YouTube video demo](readme/shield-demo-youtube-thumbnail.jpg)](https://youtu.be/W119nXS4xGE)\n\n\n",
      "technique": "Header extraction"
    }
  ]
}