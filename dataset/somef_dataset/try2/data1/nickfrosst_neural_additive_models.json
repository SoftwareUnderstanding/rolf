{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.13912",
      "https://arxiv.org/abs/2004.13912\n\n\n      @article{agarwal2020neural,\n        title={Neural additive models: Interpretable machine learning with neural nets",
      "https://arxiv.org/abs/2004.13912"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nickfrosst/neural_additive_models",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-23T17:22:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-28T20:07:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8477877516292787,
        0.9267819455646378,
        0.8240548419245547
      ],
      "excerpt": "This repository contains open-source code \nfor the paper \nNeural Additive Models: Interpretable Machine Learning with Neural Nets. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9575047205374947,
        0.8861796095299204
      ],
      "excerpt": "we release the tf.keras.Model for NAM which can be simply plugged into any neural network training procedure. We also provide helpers for \nbuilding a computation graph using NAM for classification/regression problems with tf.compat.v1. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "stand alone Neural Additive Models, forked from google-reasearch for easy import to colab",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nickfrosst/neural_additive_models/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 4,
      "date": "Tue, 28 Dec 2021 21:59:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nickfrosst/neural_additive_models/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nickfrosst/neural_additive_models",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nickfrosst/neural_additive_models/master/run.sh",
      "https://raw.githubusercontent.com/nickfrosst/neural_additive_models/master/tests/run.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8283750718428465
      ],
      "excerpt": "The nam_train.py file provides the example of a training script on a single \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nickfrosst/neural_additive_models/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Neural Additive Models: Interpretable Machine Learning with Neural Nets",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "neural_additive_models",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nickfrosst",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nickfrosst/neural_additive_models/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code was tested under Ubuntu 16 and uses these packages:\n\n- tensorflow>=1.15\n- numpy>=1.15.2\n- sklearn>=0.23\n- pandas>=0.24\n- absl-py\n\nCiting\n------\nIf you use this code in your research, please cite the following paper:\n\n> Agarwal, R., Frosst, N., Zhang, X., Caruana, R., & Hinton, G. E. (2020).\n> Neural additive models: Interpretable machine learning with neural nets.\n> arXiv preprint arXiv:2004.13912\n\n\n      @article{agarwal2020neural,\n        title={Neural additive models: Interpretable machine learning with neural nets},\n        author={Agarwal, Rishabh and Frosst, Nicholas and Zhang, Xuezhou and\n        Caruana, Rich and Hinton, Geoffrey E},\n        journal={arXiv preprint arXiv:2004.13912},\n        year={2020}\n      }\n\n---\n\n*Disclaimer about COMPAS dataset: It is important to note that\ndeveloping a machine learning model to predict pre-trial detention has a\nnumber of important ethical considerations. You can learn more about these\nissues in the Partnership on AI\n[Report on Algorithmic Risk Assessment Tools in the U.S. Criminal Justice System](https://www.partnershiponai.org/report-on-machine-learning-in-risk-assessment-tools-in-the-u-s-criminal-justice-system/).\nThe Partnership on AI is a multi-stakeholder organization -- of which Google\nis a member -- that creates guidelines around AI.*\n\n*We\u2019re using the COMPAS dataset only as an example of how to identify and\nremediate fairness concerns in data. This dataset is canonical in the\nalgorithmic fairness literature.*\n\n*Disclaimer: This is not an official Google product.*\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 14,
      "date": "Tue, 28 Dec 2021 21:59:29 GMT"
    },
    "technique": "GitHub API"
  }
}