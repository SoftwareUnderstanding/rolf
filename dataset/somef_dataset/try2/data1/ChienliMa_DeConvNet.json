{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ChienliMa/DeConvNet",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2014-09-02T12:41:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-11T00:52:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.980582720589589
      ],
      "excerpt": "Personal implementation of DeConvNet, used to visualize CNN. Follow Pro.Zealer's paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8864399197490899,
        0.863596564384191
      ],
      "excerpt": "Two examples inllustrate how to use this to visulize CNN. Admittedlly, currentle this is not very easy to use. My fault :-( \nI have trained a cifa-10 CNN with 3 conv layers and a 70% AR. And the paremeters stored in DeCoonvNet/Exampls/Params.pkl . Here I will show how this work using this structure. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8331226730023295
      ],
      "excerpt": "Visulize what the kernels in 3rd layer 'see' together by not setting other any output map to zero.( pictures were randomly picked ) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8722067139992403,
        0.9949770265080331
      ],
      "excerpt": "Use heaps and a simple forward conv net to find samples that yield max activation value in 2,23,60,12,45,9th kernel. And then visualize what those kernels see separatly, using a deconvnet, by setting other feature map to zeros.  \nMore specifically, the 23rd kernel is sensitive to boats, the 12nd and 45th kernel respones to cars strongly and the 9th kernel like airplanes very much. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Primitive implementation of Deconvnet, used to visualize CNN. Just for fun :)",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ChienliMa/DeConvNet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Thu, 23 Dec 2021 07:30:24 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ChienliMa/DeConvNet/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ChienliMa/DeConvNet",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ChienliMa/DeConvNet/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeConvNet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DeConvNet",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ChienliMa",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ChienliMa/DeConvNet/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 42,
      "date": "Thu, 23 Dec 2021 07:30:24 GMT"
    },
    "technique": "GitHub API"
  }
}