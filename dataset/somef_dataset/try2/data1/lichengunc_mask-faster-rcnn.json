{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06870"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9937209197938014
      ],
      "excerpt": "- Train on COCO 2014 trainval35k minus refer_valtest, and test on minival (800k/1250k), 35.8 on detection and 30.7 on segmentation (nms). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lichengunc/mask-faster-rcnn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-11-05T05:25:57Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-03T13:53:22Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.943234448098068
      ],
      "excerpt": "A pytorch implementation of Mask RCNN detection framework based on  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9868606678072102,
        0.9293740982929556
      ],
      "excerpt": "This project supports single-GPU training of ResNet101-based Mask R-CNN (without FPN support).  \nThe purpose is to support the experiments in MAttNet, whose REFER dataset is a subset of COCO training portion. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.847987774132677
      ],
      "excerpt": "As pointed out by ruotianluo/pytorch-faster-rcnn, choose the right -arch to compile the cuda code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.907810918877772,
        0.9566234517655907
      ],
      "excerpt": "| Faster R-CNN   |  34.1      |    53.7        |    36.8        | \n| Our Mask R-CNN   |  35.8      |    55.3        |    38.6        | \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9916231523295069
      ],
      "excerpt": "- We compare with Mask R-CNN implementation. Note this comparison is slightly unfair to ours, due to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8773420327968168,
        0.9948056225471855
      ],
      "excerpt": "* Our training is single GPU. \n* The shorter border length in our model is 600px instead of 800px. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927578097058405,
        0.9504374020228977,
        0.9388551164350842
      ],
      "excerpt": "| Original Mask R-CNN   |  32.7      |    54.2    |    34.0    | \n| Our Mask R-CNN     |  30.7      |    52.3    |    32.4    | \nWe provide the model we used in MAttNet for mask comprehension. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Mask R-CNN ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lichengunc/mask-faster-rcnn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 27,
      "date": "Wed, 29 Dec 2021 18:49:15 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lichengunc/mask-faster-rcnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lichengunc/mask-faster-rcnn",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/test/test_proposal_target_layer.ipynb",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/test/test_roi_data_layer.ipynb",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/test/check_model.ipynb",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/test/coco_images.ipynb",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/test/test_grabcut.ipynb",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/test/test_mask.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/convert_vgg16.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/train_mask_rcnn_align.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/train_mask_rcnn_notime.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/test_mask_rcnn_notime.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/test_mask_rcnn_from_frcn.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/train_mask_rcnn_from_frcn.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/experiments/scripts/test_mask_rcnn_align.sh",
      "https://raw.githubusercontent.com/lichengunc/mask-faster-rcnn/master/data/scripts/fetch_faster_rcnn_models.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. First of all, clone the code with [refer API](https://github.com/lichengunc/refer):\n```\ngit clone --recursive https://github.com/lichengunc/mask-faster-rcnn\n```\n\n2. Prepare data:\n\n* **COCO**: We use `coco` to name COCO's API as inheritance. Download the [annotations and images](http://cocodataset.org/#download) into `data/coco`. Note the valminusminival and minival can be downloaded [here](https://github.com/rbgirshick/py-faster-rcnn/blob/77b773655505599b94fd8f3f9928dbf1a9a776c7/data/README.md). \n```shell\ngit clone https://github.com/cocodataset/cocoapi data/coco\n```\n\n* **REFER**: Follow the instructions in [REFER](https://github.com/lichengunc/refer) to prepare the annotations for RefCOCO, RefCOCO+ and RefCOCOg.\n```shell\ngit clone https://github.com/lichengunc/refer data/refer\n```\n\n* **ImageNet Weights**: Find the resnet101-caffe download link from this [repository](https://github.com/ruotianluo/pytorch-resnet), and download it as `data/imagenet_weights/res101.pth`.\n\n* **coco_minus_refer**: Make the `coco_minus_refer` annotation, which is to be saved as `data/coco/annotations/instances_train_minus_refer_valtest2014.json`\n```shell\npython tools/make_coco_minus_refer_instances.py\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9176896656968426
      ],
      "excerpt": "* ruotianluo/pytorch-faster-rcnn, developed based on Pytorch + Numpy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.848362453290836
      ],
      "excerpt": "As pointed out by ruotianluo/pytorch-faster-rcnn, choose the right -arch to compile the cuda code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.892741516521176,
        0.953691433472028
      ],
      "excerpt": "Compile the CUDA-based nms and roi_pooling using following simple commands: \ncd lib \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9050628422249402
      ],
      "excerpt": "./experiments/scripts/train_mask_rcnn_notime.sh 0 refcoco res101 notime \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8031195257323972
      ],
      "excerpt": "tensorboard --logdir tensorboard/res101 --port=port_number \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9050628422249402
      ],
      "excerpt": "./experiments/scripts/test_mask_rcnn_notime.sh 0 refcoco res101 notime \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lichengunc/mask-faster-rcnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "C",
      "Shell",
      "Cuda",
      "MATLAB",
      "C++",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch-mask-rcnn",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "mask-faster-rcnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lichengunc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lichengunc/mask-faster-rcnn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 2.7\n* Pytorch 0.2 or higher\n* CUDA 8.0 or higher\n* requirements.txt\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 54,
      "date": "Wed, 29 Dec 2021 18:49:15 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Follow the ipython notebook of `test/check_model.ipynb` to test our model.\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}