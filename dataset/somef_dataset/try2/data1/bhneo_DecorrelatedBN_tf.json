{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1804.08450",
      "https://arxiv.org/abs/1904.03441"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "More deteils please refer to the implementations:\n- Torch: [princeton-vl/DecorrelatedBN](https://github.com/princeton-vl/DecorrelatedBN)\n- Pytorch: [huangleiBuaa/IterNorm-pytorch](https://github.com/huangleiBuaa/IterNorm-pytorch)",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9862029344057983
      ],
      "excerpt": "Decorrelated Batch Normalization(CVPR 2018) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bhneo/decorrelated_bn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-30T02:51:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-11-12T11:57:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9929822949179784
      ],
      "excerpt": "This project provides the Tensorflow implementation of ZCA whitening described in paper:   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8913036433939423
      ],
      "excerpt": "and IterNorm whitening in paper: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An implementation of DecorrelatedBN by tensorflow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bhneo/DecorrelatedBN_tf/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 20 Dec 2021 10:34:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bhneo/decorrelated_bn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bhneo/decorrelated_bn",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bhneo/decorrelated_bn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Decorrelated Batch Normalization",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "decorrelated_bn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bhneo",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bhneo/decorrelated_bn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* python3\n* seaborn\n* matplotlib\n* easydict\n* tensorflow >= 2.0.0\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To reproduce the VGG-network experiment, just run `vgg.py` and pass the config parameters.\nFor example: \n```\npython vgg.py --type=A --batch=256 --lr=0.1 --method=zca --m=0\n```\nwhere the \"type\" denotes the type of VGG-network architecture, \n\"batch\" denotes the batch size, \"lr\" denotes the initial learning rate,\n\"method\" denotes the whitening method (zca, iter_norm), \n\"m\" denotes the group size (0 indicates full whitening).\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Mon, 20 Dec 2021 10:34:42 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "An example can be found in `vgg.py`.\n\n1) Copy the common/normalization.py to your root directory and import it.\n2) Build a DecorelationNormalization layer to replace the batch normalization layer.\n\n```python\nfrom common import normalization\n\n...\nfeature = normalization.DecorelationNormalization(decomposition='iter_norm_wm',\n                                                  iter_num=5)(feature)\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}