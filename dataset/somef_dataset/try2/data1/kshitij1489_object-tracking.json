{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1801.04381",
      "https://arxiv.org/abs/1703.07402"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Pre-trained Mobilenet file at https://tfhub.dev/google/openimages_v4/ssd/mobilenet_v2/1\n\n<a id=\"1\">[1]</a> \nM Sandler (2018). \nMobileNetV2: Inverted Residuals and Linear Bottlenecks [arxiv link](https://arxiv.org/abs/1801.04381)\n\n<a id=\"1\">[2]</a> \nN Wojke (2017). \nSimple Online and Realtime Tracking with a Deep Association Metric [arxiv link](https://arxiv.org/abs/1703.07402)\n\n<a id=\"1\">[3]</a> https://github.com/nwojke/deep_sort\n\n",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kshitij1489/object-tracking",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-02-27T19:18:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-27T12:21:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This application is an implementation of People tracking using Tensorflow implementation of MobileNet V3 + SSD[1] and DeepSort[2]. This could very well be extended to any other objects for tracking like cars or animals.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.982582351930797,
        0.8750342991465292
      ],
      "excerpt": "Extract features(128 dim) of the people detected in step 1 using a CNN. \nEstimate trajectory of the person using Kalman Filter. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9551390883858913,
        0.9965161160422152
      ],
      "excerpt": "using the features extracted in step 2 and trajectory prediction of the person id using step 3. \nusing a weighted sum of the cosine distance of CNN features and trajectory prediction score. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kshitij1489/object-tracking/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 30 Dec 2021 05:53:28 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kshitij1489/object-tracking/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kshitij1489/object-tracking",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kshitij1489/object-tracking/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Object Tracking",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "object-tracking",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kshitij1489",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kshitij1489/object-tracking/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python3\n- TensorFlow >= 2.1\n- OpenCV\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Pass in the relative location of the video file <br>\nExample file_dir : ../videos/video_1.avi\n\n```\npython object_tracking.py file_dir\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 11,
      "date": "Thu, 30 Dec 2021 05:53:28 GMT"
    },
    "technique": "GitHub API"
  }
}