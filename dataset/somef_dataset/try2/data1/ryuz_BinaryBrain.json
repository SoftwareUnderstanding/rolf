{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1602.02505\n\n- Binarized Neural Networks: Training Deep Neural Networks with Weights and Activations Constrained to +1 or -1<br>\nhttps://arxiv.org/abs/1602.02830\n\n- XNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks<br>\nhttps://arxiv.org/abs/1603.05279\n\n- Xilinx UltraScale Architecture Configurable Logic Block User Guide<br>\nhttps://japan.xilinx.com/support/documentation/user_guides/ug574-ultrascale-clb.pdf\n",
      "https://arxiv.org/abs/1602.02830\n\n- XNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks<br>\nhttps://arxiv.org/abs/1603.05279\n\n- Xilinx UltraScale Architecture Configurable Logic Block User Guide<br>\nhttps://japan.xilinx.com/support/documentation/user_guides/ug574-ultrascale-clb.pdf\n",
      "https://arxiv.org/abs/1603.05279\n\n- Xilinx UltraScale Architecture Configurable Logic Block User Guide<br>\nhttps://japan.xilinx.com/support/documentation/user_guides/ug574-ultrascale-clb.pdf\n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8840467439138965
      ],
      "excerpt": "open VC++ solution \"samples\\mnist\\sample_mnist.sln\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8652282448416018
      ],
      "excerpt": "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999637001273405
      ],
      "excerpt": "2019 IEEE 9th International Conference on Consumer Electronics (ICCE-Berlin)  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9698834407712852
      ],
      "excerpt": "- github : https://github.com/ryuz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906174419333412
      ],
      "excerpt": " https://www.slideshare.net/kentotajiri/ss-77136469 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ryuz/BinaryBrain",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-08-04T14:10:46Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-30T03:56:11Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\u30c7\u30b8\u30bf\u30eb\u56de\u8def\u306f\u901a\u5e38\u3067\u306f0\u304b1\u306e\u5024\u3057\u304b\u3068\u3089\u306a\u3044\u305f\u901a\u5e38\u3067\u3042\u308c\u3070\u5fae\u5206\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u4e00\u65b9\u3067\u3001\u5165\u51fa\u529b\u30920\u30841\u3067\u306f\u306a\u304f\u300c1\u306b\u306a\u308b\u78ba\u7387\u300d\u3068\u3057\u3066\u30a2\u30ca\u30ed\u30b0\u7684\u306b\u6271\u3046\u624b\u6cd5\u304c\u3042\u308a\u3001Stochastic\u8a08\u7b97\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\u5e78\u3044\u306a\u4e8b\u306b Neural Network \u306f\u3001\u5b66\u7fd2\u306b\u304a\u3044\u3066\u591a\u304f\u306e\u5bfe\u8c61\u306e\u5c24\u5ea6\u3092\u53d6\u308a\u6271\u3046\u70ba\u3053\u306e\u8003\u3048\u65b9\u306f\u76f8\u6027\u306e\u3088\u3044\u8003\u3048\u65b9\u3067\u3059\u3002\n\nStochastic\u8a08\u7b97\u3092\u7528\u3044\u308b\u3068\u3001\u4f8b\u3048\u3070AND\u30b2\u30fc\u30c8\u306f\u4e8c\u3064\u306e\u5165\u529b\u306e\u4e21\u65b9\u304c\u540c\u6642\u306b1\u306b\u306a\u308b\u78ba\u7387\u3001\u3059\u306a\u308f\u3061\u78ba\u7387\u306e\u4e57\u7b97\u5668\u3068\u3057\u3066\u632f\u821e\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3059\u3079\u3066\u306e\u30c7\u30b8\u30bf\u30eb\u56de\u8def\u3092Stochastic\u8a08\u7b97\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\nFPGA\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u306f\u3001LUT\u3068\u547c\u3070\u308c\u308b\u5c0f\u3055\u306a\u30e1\u30e2\u30ea\u3068\u3053\u306e\u30e1\u30e2\u30ea\u3092\u9078\u629e\u3059\u308b\u96c6\u5408\u4f53\u3067\u3001\u30e1\u30e2\u30ea\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30eb\u306a\u56de\u8def\u8a18\u8ff0\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u3053\u306eLUT\u56de\u8def\u3092\u5fae\u5206\u53ef\u80fd\u56de\u8def\u8a18\u8ff0\u306b\u7f6e\u304d\u63db\u3048\u305f\u306e\u3061\u306b\u3001\u30e1\u30e2\u30ea\u306b\u76f8\u5f53\u3059\u308b\u90e8\u5206\u306b\u5b66\u7fd2\u5bfe\u8c61\u306e\u91cd\u307f\u4fc2\u6570\u3092\u7f6e\u3044\u3066\u5b66\u7fd2\u3092\u884c\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c LUT-Network \u3067\u3059\u3002\n\nBinaryBrain \u306f LUT-Network \u306e\u5b66\u7fd2\u53ef\u80fd\u6027\u3092\u5b9f\u8a3c\u3059\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3059\u3002\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8009512079859675
      ],
      "excerpt": "\u4ee5\u4e0b\u306f All \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5185\u8535\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3059\u3079\u3066\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u3067\u3059\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "decompress MNIST for \"\\samples\\mnist\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8708332015576032
      ],
      "excerpt": "\u30c7\u30b8\u30bf\u30eb\u56de\u8def\u306f AND \u3084 OR \u306a\u3069\u306e\u8ad6\u7406\u56de\u8def\u3067\u3059\u304c\u3001\u3053\u308c\u3089\u306f Stochastic\u6f14\u7b97\u306b\u5f53\u3066\u306f\u3081\u308b\u3068\u4e57\u7b97\u306a\u3069\u306e\u4e00\u822c\u7684\u306a\u8a08\u7b97\u306b\u5e30\u7740\u53ef\u80fd\u3067\u3059\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9031109725614272
      ],
      "excerpt": "BinaryConnect: Training Deep Neural Networks with binary weights during propagations<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911393533685154
      ],
      "excerpt": "Binarized Neural Networks: Training Deep Neural Networks with Weights and Activations Constrained to +1 or -1<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8231470329324778
      ],
      "excerpt": "XNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks<br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Binary Neural Network Framework for FPGA(Differentiable LUT)",
      "technique": "GitHub API"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://binarybrain.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ryuz/BinaryBrain/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Tue, 28 Dec 2021 02:23:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ryuz/BinaryBrain/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ryuz/BinaryBrain",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/googlecolab/GoogleColabTest.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mvtec/Scratch_LutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/pytorch/mnist_iir_segmentation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/pytorch/cmp_torch_cross_loss.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/pytorch/cmp_torch_affine.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/pytorch/cmp_torch_MnistIirSegmentation_bb2.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/pytorch/cmp_torch_mnist_iir_segmentation_v2.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/pytorch/cmp_torch_mnist_iir_segmentation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/cifar10/Cifar10DenseCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/cifar10/Cifar10DifferentiableLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/cifar10/Cifar10DifferentiableLutMobileNet.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistDifferentiableLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSemanticSegmentation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSemanticSegmentation2.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSegmentationDense.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistAeDifferentiableLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSegmentation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistStochasticLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistDenseAffine.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSegmentationAndClassificationDistillation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSegmentationDistillation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistSegDistillation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistDifferentiableLutSimple.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/python/mnist/MnistIirSegmentation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/svhn/SvhnCnnFP32.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/svhn/SvhnCnnLutNet.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/introduction/binarybrain_system.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/introduction/google_colab.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/cifar10/Cifar10DenseCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/cifar10/Cifar10DifferentiableLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistDifferentiableLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistSemanticSegmentation.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistAeDifferentiableLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistStochasticLutCnn.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistDifferentiableLutCnnMobileNet.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistDenseAffine.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistDifferentiableLutSimple.ipynb",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/python/mnist/MnistSegmentationAndClassification.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/python/copy_src.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/python/build.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/python/upload_pypi.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/python/clean.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/python/uninstall.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/cpp/mnist/get_nmist.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/tests/svhn/download_svhn.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_lut_simple/iverilog/run_iverilog.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_lut_simple/xsim/run_xsim.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_semantic_segmentation/iverilog/run_iverilog.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_semantic_segmentation/xsim/run_xsim.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_segmentation_and_classification/iverilog/run_iverilog.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_segmentation_and_classification/xsim/run_xsim.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_lut_cnn/iverilog/run_iverilog.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/verilog/mnist/tb_mnist_lut_cnn/xsim/run_xsim.sh",
      "https://raw.githubusercontent.com/ryuz/BinaryBrain/master/samples/cpp/mnist/get_nmist.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9767457899766377,
        0.9799489993452795,
        0.8284172294909351
      ],
      "excerpt": "install VisualStudio 2019 + CUDA 11.3 \ngit clone --recursive -b ver4_release https://github.com/ryuz/BinaryBrain.git  \ndownload MNIST from http://yann.lecun.com/exdb/mnist/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.926422947698878
      ],
      "excerpt": "build \"x64 Release\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9469256375374087,
        0.9156483279131096,
        0.8629551947002404,
        0.9959187499054897,
        0.9931788395734003,
        0.9896960115058692,
        0.9467102709002997,
        0.8732956776531225
      ],
      "excerpt": "install tools  \n% sudo apt update \n% sudo apt upgrade \n% sudo apt install git \n% sudo apt install make \n% sudo apt install g++ \n% wget https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda_11.3.1_465.19.01_linux.run \n% sudo sh cuda_11.3.1_465.19.01_linux.run \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799489993452795
      ],
      "excerpt": "% git clone --recursive -b ver4_develop  https://github.com/ryuz/BinaryBrain.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474895321345809,
        0.8474895321345809
      ],
      "excerpt": "% make \n% make dl_data \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9799489993452795
      ],
      "excerpt": "!git clone --recursive -b ver4_release  https://github.com/ryuz/BinaryBrain.git \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8246130083680622,
        0.9059092392575345
      ],
      "excerpt": "!make all \n!make run \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837680365796365
      ],
      "excerpt": "\u4f5c\u8005\u306f\u73fe\u5728 Python 3.6/3.7 \u306b\u3066\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9853665467684689,
        0.999833231880651,
        0.9963463717137461,
        0.999833231880651,
        0.9322609392449874
      ],
      "excerpt": "% pip3 install setuptools \n% pip3 install pybind11 \n% pip3 install numpy \n% pip3 install tqdm \n\u672c\u30b5\u30f3\u30d7\u30eb\u3067\u306f PyTorch \u3092\u4f7f\u3044\u307e\u3059\u306e\u3067\u3001\u74b0\u5883\u306b\u5408\u308f\u305b\u3066 \u3053\u3061\u3089 \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999833231880651
      ],
      "excerpt": "% pip3 install binarybrain \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999833231880651,
        0.9943731987556338,
        0.8988642918559062
      ],
      "excerpt": "% #: install \n% cd python \n% python3 setup.py install --user \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9491918471645125
      ],
      "excerpt": "% cd samples/python/mnist \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.999746712887969,
        0.9893272198983933,
        0.9906248903846466,
        0.8988642918559062
      ],
      "excerpt": "!pip install pybind11 \n!git clone -b ver4_release  https://github.com/ryuz/BinaryBrain.git \n%cd BinaryBrain \n!python3 setup.py install --user \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8411004553040458
      ],
      "excerpt": "GPU\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u30d8\u30c3\u30c0\u8aad\u307f\u8fbc\u307f\u306e\u969b\u306b BB_WITH_CUDA \u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3057\u305f\u4e0a\u3067\u3001cuda \u4ee5\u4e0b\u306b\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u3057\u305f\u4e0a\u3067\u30ea\u30f3\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8564053107084612
      ],
      "excerpt": "- github : https://github.com/ryuz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8732089505944296
      ],
      "excerpt": "- twitter : https://twitter.com/ryuz88 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "% python3 MnistDifferentiableLutSimple.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "% python3 MnistDifferentiableLutCnn.py \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ryuz/BinaryBrain/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Jupyter Notebook",
      "Cuda",
      "Python",
      "Makefile",
      "Batchfile",
      "Shell",
      "CSS"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "BinaryBrain Version 4<br> --binary neural networks platform for LUT-networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "BinaryBrain",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ryuz",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ryuz/BinaryBrain/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 70,
      "date": "Tue, 28 Dec 2021 02:23:32 GMT"
    },
    "technique": "GitHub API"
  }
}