{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06870"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/asyrovprog/cs230project",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-25T19:03:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-21T15:29:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9266386044613006
      ],
      "excerpt": "Optionally, review configuration files for the instance segmentation with Mask R-CNN are under /configs/ directory. The most important ones are configuration of baseline model (urban3d_baseline_rgb.py) and configuration of final optimal model (urban3d_optimal_rgbdt.py). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "CS230 2020 Winter Project",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/asyrovprog/cs230project/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 30 Dec 2021 05:51:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/asyrovprog/cs230project/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "asyrovprog/cs230project",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/asyrovprog/cs230project/master/evaluate.sh",
      "https://raw.githubusercontent.com/asyrovprog/cs230project/master/train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Dataset is about 30GB and can be downloaded from aws as described [here](doc/datasets.md). After downloading dataset install dependencies and preprocess dataset:\n\n1. Follow instructions at https://github.com/matterport/Mask_RCNN to install Mask-RCNN model libraries from github \n\n2. Install project dependencies:\n\n   ```bash\n   pip3 install -r requirements.txt\n   ```\n\n3. Download pre-trained COCO weights (`mask_rcnn_coco.h5`) from the [releases page](https://github.com/matterport/Mask_RCNN/releases). We use them to do transfer learning. \n\n4. Copy `mask_rcnn_coco.h5` into `mask_rcnn` folder.\n\n5. Setup environment variable DATASET_ROOT and make sure it exists. \n\n6. Run pre-processing of the dataset. Preprocessing splits every tile into set of smaller images and also splits original Test dataset into Dev and Test datasets.\n\n   ```bash\n   python3 build_dataset.py\n   ```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/asyrovprog/cs230project/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/asyrovprog/cs230project/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2018 CS230 Teaching team\\n\\nTeaching assistants contributors (Winter 2018): Guillaume Genthial, Olivier Moindrot, Surag Nair.\\nInstructors: Kian Katanforoosh, Andrew Ng.\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CS230: Building footprint extraction based on RGBD satellite imagery",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "cs230project",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "asyrovprog",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/asyrovprog/cs230project/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To train model from scratch using pre-trained weights, run the training script:\n    ```bash\n    python -m experiments.urban3d_training --config optimal_rgbdt\n    ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To run model inference on a few examples from test set and to compute precision/recall/F1 metrics on the entire test set, run validation script:\n    ```bash\n    python -m experiments.urban3d_validation --config optimal_rgbdt --dataset \"test\" \n    ```\n\nTo visualize model from inside/outside using occlusion maps and saliency maps, run visualization script:\n\n    ```bash\n    python -m experiments.urban3d_visualization --config optimal_rgbdt --dataset \"test\"\n    ```\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To train model from scratch using pre-trained weights, run the training script:\n\n    ```bash\n    python -m experiments.urban3d_training_cgan --itype \"rgbd\" --epochs 20\n    ```\n\nAfter this, _manually_ copy all files from `logs/urban3d_cond_gan_rgbd/models/` into `models/urban3d_cond_gan_rgbd/models/`\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "To run model inference on a few examples from dev set and to compute precision/recall/F1 metrics on the entire dev set, run validation script:\n\n    ```bash\n    python -m experiments.urban3d_validation_cgan --itype \"rgbd\" --dataset \"test\"\n    ```\n\nTo compute precision/recall/F1/IoU metrics on the entire test set, run:\n\n    ```bash\n    python -m experiments.urban3d_visualization_cgan --itype \"rgbd\" --dataset \"test\"\n    ```\n\nAbove command saves output in `models/urban3d_cond_gan_rgbd/images` folder.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 30 Dec 2021 05:51:56 GMT"
    },
    "technique": "GitHub API"
  }
}