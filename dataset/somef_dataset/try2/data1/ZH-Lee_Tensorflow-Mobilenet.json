{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1704.04861"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "epochs            = 10 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "epochs            = 10 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZH-Lee/Tensorflow-MobileNetV1",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-31T03:06:33Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-09T08:28:12Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.89512885545917,
        0.9580974235653871
      ],
      "excerpt": "As we all know, MobileNetv1 is a light framework neural network, it can be deployed in any mobile device. The full details in paper(https://arxiv.org/abs/1704.04861) \nThe final goal is to take MobileNet as backbone in YOLOv3. But it is diffucult to train from scratch, so a mobilenet pre_train weight is needed. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8012335981275136
      ],
      "excerpt": "The second ways is to train your model from scratch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9254130224454868
      ],
      "excerpt": "Because of the number of every class in cifar are retively balanced, so i just use top-1 acc to measure my model,but if your own dataset are imbalanced, you will need some other score (e.g. Recall, mAP, F1 Score, etc.) to measure your result. Besides, i got stuck in lower train acc 0.9+, the one reson flash in my mind is that the resolution of cifar image is too small, only 32*32, after some downsample, it becomes one pixel, it is diffcult to use this information. I can't use higher resolution image because of no gpus. So, you can try train a more accuracy model by following methods: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9374689204640089
      ],
      "excerpt": "What paper explanied is use less regularization and less augmentation because small model have less trouble with overfitting. Maybe the small model have samll capacity to representation??? I don't know so far. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Mobilenetv1 implemented by Tensorflow",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZH-Lee/Tensorflow-Mobilenet/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 11:16:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ZH-Lee/Tensorflow-MobileNetV1/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ZH-Lee/Tensorflow-MobileNetV1",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8744188459725252
      ],
      "excerpt": "$ wget https://github.com/ZH-Lee/Tensorflow-Mobilenet/releases/download/Mobilenetv1-0.7688/Mobilenet-0.768.zip \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8009728079941938
      ],
      "excerpt": "You are allowed to use command line to start training: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8659320755005481
      ],
      "excerpt": "        --epochs        the total epoch your model trained \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046710673411699
      ],
      "excerpt": "$ python3 train.py --lr 1e-3 --batch_size 16 --epochs 20 --load_pretrain 1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046710673411699
      ],
      "excerpt": "$ python3 train.py --lr 1e-3 --batch_size 16 --epochs 20 --load_pretrain 0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9139643750185656
      ],
      "excerpt": "First train: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594142235991984
      ],
      "excerpt": "load_pretrain     = True \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589534893990137
      ],
      "excerpt": "train acc         = 0.9+ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8633989807152664
      ],
      "excerpt": "test acc          = 0.76+ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ZH-Lee/Tensorflow-MobileNetV1/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tensorflow-Mobilenet",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tensorflow-MobileNetV1",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ZH-Lee",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ZH-Lee/Tensorflow-MobileNetV1/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "ZH-Lee",
        "body": "This ckpt's accuracy in test data is 76.8%.",
        "dateCreated": "2019-05-31T03:33:12Z",
        "datePublished": "2019-05-31T04:07:41Z",
        "html_url": "https://github.com/ZH-Lee/Tensorflow-MobileNetV1/releases/tag/Mobilenetv1-0.7688",
        "name": "",
        "tag_name": "Mobilenetv1-0.7688",
        "tarball_url": "https://api.github.com/repos/ZH-Lee/Tensorflow-MobileNetV1/tarball/Mobilenetv1-0.7688",
        "url": "https://api.github.com/repos/ZH-Lee/Tensorflow-MobileNetV1/releases/17696691",
        "zipball_url": "https://api.github.com/repos/ZH-Lee/Tensorflow-MobileNetV1/zipball/Mobilenetv1-0.7688"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Tue, 28 Dec 2021 11:16:33 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "mobilenetv1",
      "classification",
      "tensorflow",
      "python3"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "My Environment:\n```\nMac 10.14 (no GPU)\nPython3.6\nTensorflow 1.12\nTrain: Tesla T4 (Google Colab)\n```\n\n1. Clone this repo  \n```\n$ git clone https://github.com/ZH-Lee/Tensorflow-Mobilenet.git\n```\n2. You will need a cifar10 dataset before train your model\n```\n$ wget http://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n```\n3. Into your repo and mkdir\n```\n$ cd Tensorflow-Mobilenet\n$ mkdir cifar\nthen unzip you cifar10 dataset into cifar\n$ mkdir ckpt (for saved model)\n\n```\nAfter step mentioned above, your repo will looks like this:  \n```\n  Mobilnet:\n          cifar (your data)\n          ckpt (saved model ckpt)\n          train.py\n          freeze_graph.py\n          mobilenet.py\n          train.py\n```\n",
      "technique": "Header extraction"
    }
  ]
}