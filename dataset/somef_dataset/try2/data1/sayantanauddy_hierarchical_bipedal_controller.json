{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1909.00732"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "    @INPROCEEDINGS{auddy2019,\n    author={S. {Auddy} and S. {Magg} and S. {Wermter}},\n    booktitle={2019 Joint IEEE 9th International Conference on Development and Learning and Epigenetic Robotics (ICDL-EpiRob)},\n    title={Hierarchical Control for Bipedal Locomotion using Central Pattern Generators and Neural Networks},\n    year={2019},\n    volume={},\n    number={},\n    pages={13-18},\n    doi={10.1109/DEVLRN.2019.8850683},\n    ISSN={2161-9484},\n    month={Aug},}\n\n    @Mastersthesis{AuddyMscThesis2017,\n      Title                    = {Hierarchical Control for Bipedal Locomotion using Central Pattern Generators and Neural Networks},\n      Author                   = {Auddy, Sayantan},\n      school                   = {Universit{\\\"a}t Hamburg, Hamburg, Germany},\n      language                 = {English},\n      Year                     = {2017},\n      month                    = {Dec}\n    }\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@INPROCEEDINGS{auddy2019,\nauthor={S. {Auddy} and S. {Magg} and S. {Wermter}},\nbooktitle={2019 Joint IEEE 9th International Conference on Development and Learning and Epigenetic Robotics (ICDL-EpiRob)},\ntitle={Hierarchical Control for Bipedal Locomotion using Central Pattern Generators and Neural Networks},\nyear={2019},\nvolume={},\nnumber={},\npages={13-18},\ndoi={10.1109/DEVLRN.2019.8850683},\nISSN={2161-9484},\nmonth={Aug},}\n\n@Mastersthesis{AuddyMscThesis2017,\n  Title                    = {Hierarchical Control for Bipedal Locomotion using Central Pattern Generators and Neural Networks},\n  Author                   = {Auddy, Sayantan},\n  school                   = {Universit{\\\"a}t Hamburg, Hamburg, Germany},\n  language                 = {English},\n  Year                     = {2017},\n  month                    = {Dec}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8556593543009302
      ],
      "excerpt": "(Master of Science Thesis, Intelligent Adaptive Systems, University of Hamburg) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sayantanauddy/hierarchical_bipedal_controller",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-03-24T17:36:07Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-02T10:30:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9719948603192666,
        0.9202851642181568,
        0.8992913451404422,
        0.975802650733956,
        0.9703227187154613,
        0.9417544250142476,
        0.9033967212402324
      ],
      "excerpt": "network (based on this work) with feedback pathways controls the individual joints. The parameters \nof the CPG network are optimized by a genetic algorithm. At the higher level, a \nneural network modulates the output of the CPG network in order to optimize the \nrobot\u2019s movements with respect to an overall objective. In this case, the objective \nis to minimize the lateral deviation while walking which may occur due to slippage or due to an imperfect robot model. The neural network is trained \nusing the deep deterministic policy gradient algorithm (a deep reinforcement learning algorithm). This work was carried out using the NICO humanoid robot.  \nThe hierarchical controller can minimize the lateral deviation, even in the presence of systematic and non-systematic errors. The robot with the red colored path uses only the CPG network. For the blue-paths the hierarchical controller was used. The highlighted case (4th from left) shows the best performing hyperparameter setup. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9081446461819708,
        0.9243549454684608,
        0.8630390027155049,
        0.8914268708660585,
        0.8155066616164807
      ],
      "excerpt": "A small explanation of the architecture and videos of the robot's walking motion can be found here. \nThe NICO robot's VREP model and the associated Python API can be found at this link under resources. The folders motor_configs, nicomotion and vrep_scenes are empty in this repository but the relevant files should be obtained from the links mentioned above. \ndocker: Scripts for setting up the Docker environment (instructions are provided in a later section of this readme). \nmatsuoka_walk: All necessary scripts for the hierarchical controller (details of important scripts are provided in the next section). \nmotor_configs: Motor configuration files for the NICO robot (empty at present) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8012883251732575
      ],
      "excerpt": "plot_scripts: Scripts used for creating the plots used in the thesis \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8718142027611655
      ],
      "excerpt": "vrep_scenes: VREP scenes with the NICO robot, used in the experiments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8050925142648266,
        0.8234403695978111
      ],
      "excerpt": "cristiano2014_network.py: Implementation of the Matsuoka CPG network proposed by Cristiano et al. \nfitness.py: Different types of fitness functions used by the genetic algorithm. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8584996164302774
      ],
      "excerpt": "ga_5.py: Script used to run the GA for phase reset (with ROS) - This is not used in the final results. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8350555128665568
      ],
      "excerpt": "matsuoka2011.py: Implementation of a solitary Matsuoka oscillator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8634632367135466
      ],
      "excerpt": "monitor.py: Monitors the state of the robot, also used to detect falls. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959945852257433
      ],
      "excerpt": "oscillator*.py: Implementation of the Matsuoka CPG network for various setups. This is used by the GA and DDPG scripts. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.900735988269208
      ],
      "excerpt": "Force vectors for l1,l2,l3,l4,r1,r2,r3,r4 are concatanated into a single string and published \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8036072203840106
      ],
      "excerpt": "custom remoteApiConnections.txt - Defines the ports for communicating with VREP (see example in vrep_scripts folder). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A biologically inspired, hierarchical bipedal locomotion controller for robots, trained using deep reinforcement learning.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sayantanauddy/hierarchical_bipedal_controller/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sat, 25 Dec 2021 15:02:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sayantanauddy/hierarchical_bipedal_controller/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "sayantanauddy/hierarchical_bipedal_controller",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/shell_scripts/asus_20171005.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/shell_scripts/logreader.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/shell_scripts/svg_to_eps.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/shell_scripts/run_openloop.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/shell_scripts/run_phasereset.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/shell_scripts/run_anglefeedback.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/vrep_scripts/start_vrep.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/vrep_scripts/start_vrep_headless.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/docker/build.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/docker/bio_walk_paths.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/docker/run.sh",
      "https://raw.githubusercontent.com/sayantanauddy/hierarchical_bipedal_controller/master/docker/bio_walk_setup.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Set the $HOME location to where the repository can be stored:\n\n    ```bash\n    #:#:#: Change the path as required\n    export HOME=/data/sayantan\n    ```\n\n2. Clone the repository (or copy it from the disk)\n\n    ```bash\n    cd $HOME\n    mkdir -p $HOME/computing/repositories/\n    cd $HOME/computing/repositories/\n    git clone https://github.com/sayantanauddy/hierarchical_bipedal_controller.git\n    ```\n\n3. Download VREP\n\n    ```bash\n    cd $HOME\n    mkdir $HOME/computing/simulators/\n    cd $HOME/computing/simulators/\n    #: Download\n    wget http://coppeliarobotics.com/files/V-REP_PRO_EDU_V3_4_0_Linux.tar.gz\n    #: Extract\n    tar -xvf V-REP_PRO_EDU_V3_4_0_Linux.tar.gz\n    ```\n\n3. Copy the VREP scripts\n\n    ```bash\n    cd $HOME/computing/repositories/hierarchical_bipedal_controller\n    cp start_vrep.sh $HOME/computing/simulators/V-REP_PRO_EDU_V3_4_0_Linux/\n    cp remoteApiConnections.txt $HOME/computing/simulators/V-REP_PRO_EDU_V3_4_0_Linux/\n    cd $HOME/computing/simulators/V-REP_PRO_EDU_V3_4_0_Linux/\n    chmod a+x start_vrep.sh\n    ```\n\n4. Create the log folder\n\n    ```bash\n    mkdir -p $HOME/.bio_walk/logs/\n    ```\n\n5. Create the virtual environment\n\n    ```bash\n    cd $HOME\n    virtualenv --system-site-packages $HOME/matsuoka_virtualenv\n    #: Activate the virtual environment\n    source $HOME/matsuoka_virtualenv/bin/activate\n    ```\n\n6. Add the code location to PYTHONPATH\n\n    ```bash\n    export PYTHONPATH=$PYTHONPATH:$HOME/computing/repositories/hierarchical_bipedal_controller/nicomotion\n    export PYTHONPATH=$PYTHONPATH:$HOME/computing/repositories/hierarchical_bipedal_controller\n    ```\n\n7. Install the dependencies\n\n    ```bash\n    #: numpy, matplotlib should also be installed\n    pip install pypot\n    pip install poppy-humanoid\n    pip install deap\n    pip install --upgrade tensorflow\n    pip install keras\n    pip install gym\n    pip install h5py\n    ```\n\n8. Start VREP in a terminal\n\n    ```bash\n    cd $HOME/computing/simulators/V-REP_PRO_EDU_V3_4_0_Linux\n    ./start_vrep.sh\n    ```\n\n9. Run the necessary script. For example ga_3.py to run the genetic algorithm or matsuoka_ddpg.py to run the DDPG training.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8943851230904244
      ],
      "excerpt": "My MSc thesis can be viewed or downloaded from here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9677450217106333,
        0.9064740368014937
      ],
      "excerpt": "The following were added to .bashrc source /opt/ros/indigo/setup.bash and source ~/catkin_ws/devel/setup.bash \n(Steps 4-6 are needed to run ROS code outside the catkin workspace) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8248860186082109
      ],
      "excerpt": "VREP should ideally be invoked using the command LC_NUMERIC=en_US.UTF-8 ./vrep.sh to make sure that '.' is used as the decimal separator and not ',' \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8673493150490387,
        0.8468325806499329
      ],
      "excerpt": "ga_2.py: Script used to run the GA for open loop. \nga_3.py: Script used to run the GA for angle feedback. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/sayantanauddy/hierarchical_bipedal_controller/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Lua",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Hierarchical Control for Bipedal Locomotion using Central Pattern Generators and Neural Networks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "hierarchical_bipedal_controller",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "sayantanauddy",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/sayantanauddy/hierarchical_bipedal_controller/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Sat, 25 Dec 2021 15:02:57 GMT"
    },
    "technique": "GitHub API"
  }
}