{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chambliss/Multilingual_NER",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-08-23T21:43:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-17T12:06:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9924328063238737,
        0.8982481149381392,
        0.9844866321655315
      ],
      "excerpt": "This repository applies BERT to named entity recognition in English and Russian. The goal is to help developers of machine translation models to analyze and address model errors in the translation of names. More precisely, these NER models will be used as part of a pipeline for improving MT quality estimation between Russian-English sentence pairs. \nNamed entities are a known challenge in machine translation, and in particular, identifying names in Slavic languages such as Russian presents a unique challenge. Slavic names can vary in spelling depending on what role the name occupies in the sentence (see Slavic name suffixes on Wikipedia for more details). This means an NER model cannot learn to rely on spelling alone, like it could for many English names (\"Smith\", etc.). In addition, word order in Russian is highly variable, so models cannot necessarily rely on positional cues either. \nSince translation is often used in tandem with other information extraction and retrieval techniques, ensuring that names are translated correctly is particularly important for strengthening the usefulness of MT models and the products and services relying on them. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.922616654481637
      ],
      "excerpt": "Raw and preprocessed data for fine-tuning BERT models in both English and Russian \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8915066717644282,
        0.974174210503799
      ],
      "excerpt": "Comprehensive outputs of performance, including confusion matrix and P/R/F1 for every label at each epoch (included in each saved checkpoint) \nInteractive demos for testing the performance of the model on both monolingual and parallel text \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9965755611354897,
        0.9957219064302764
      ],
      "excerpt": "The English model is a fine-tuned implementation of Google's bert-base-cased model, ensembled with spaCy's en_core_web_lg, which uses a CNN architecture. \nThe Russian model is a fine-tuned implementation of Google's bert-base-multilingual-cased model, ensembled with spaCy's multilingual xx_ent_wiki_sm NER model, which uses a CNN architecture. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9970256597762457,
        0.9228524617931008
      ],
      "excerpt": "The English BERT model was fine-tuned on CONLL2003 data and Emerging Entities '17 data. The Emerging Entities '17 data is composed of informal text (such as tweets), and includes more diverse entity types (such as creative works and products) than CONLL2003, providing the model with the ability to identify MISC entities in addition to the standard person, location, and organization tags. \nThe English spaCy model was trained on OntoNotes and uses GloVe word vectors trained on Common Crawl; see the spaCy docs for more information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Applying BERT to named entity recognition in English and Russian.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chambliss/Multilingual_NER/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 22,
      "date": "Thu, 23 Dec 2021 04:38:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chambliss/Multilingual_NER/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "chambliss/Multilingual_NER",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/chambliss/Multilingual_NER/master/notebooks/spacy_eval_en.ipynb",
      "https://raw.githubusercontent.com/chambliss/Multilingual_NER/master/notebooks/spacy_eval_ru.ipynb",
      "https://raw.githubusercontent.com/chambliss/Multilingual_NER/master/notebooks/exploratory_nbs/exploring_multilingual_BERT.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/chambliss/Multilingual_NER/master/setup.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "**NOTE**: Since there are quite a few requirements, creating a virtual environment for this repo is strongly recommended.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9540358064227399,
        0.952145295855847,
        0.9632347459754548,
        0.9951892287748783
      ],
      "excerpt": "Clone or download the repo to your machine. \nUse conda to create the virtual environment - currently environment creation via pip is not supported. Navigate to the Multilingual_NER directory and run the following in the command line: \nconda env create -f environment.yml \nYou can verify that the required packages installed correctly by activating the environment (conda activate m_ner) and running conda list. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8634055121891644
      ],
      "excerpt": "<div style=\"text-align:center; height:600px\"><img src=\"./img/monolingual_demo.png\"/></div> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8391696472368055
      ],
      "excerpt": "Done-for-you training script to train and save a model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9238962780255121
      ],
      "excerpt": "Use python main.py to train an English model and save per-epoch checkpoints. Add -lang ru to train a Russian model. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/chambliss/Multilingual_NER/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2015 dialogue-evaluation\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "multilingual_NER",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Multilingual_NER",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "chambliss",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/chambliss/Multilingual_NER/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Major dependencies include `pytorch-transformers`, `spacy`, and `streamlit`. Take a look at the `environment.yml` file for a full list. (Note that at the moment, some of the packages in the environment are not strictly necessary, and a leaner environment file will be added down the line.)\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 112,
      "date": "Thu, 23 Dec 2021 04:38:36 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "nlp-machine-learning",
      "bert",
      "named-entity-recognition",
      "russian-language",
      "english-language",
      "spacy",
      "pytorch"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Once you have a usable model checkpoint, run `streamlit run demo.py en` (or `ru` for Russian), which opens a web app you can use to test the model's predictions interactively. Be sure to download both `xx_ent_wiki_sm` and `en_core_web_lg` before running the demo.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "In line with the main goal of the project, there is also a demo specifically for testing NER performance on parallel Russian-English sentences. Use `streamlit run parallel_demo.py` to try out the parallel demo. Keep in mind that **you will need to have at least one usable model checkpoint for each language.**\n\n<!-- markdownlint-disable MD033 -->\n<div style=\"text-align:center; height:600px\"><img src=\"./img/parallel_demo.png\"/></div>\n\n",
      "technique": "Header extraction"
    }
  ]
}