{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1502.03167",
      "https://arxiv.org/abs/1412.6980"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8008699497042234
      ],
      "excerpt": "Convolution net for image (http://yann.lecun.com/exdb/publis/pdf/lecun-98.pdf) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9944484218006108
      ],
      "excerpt": "Batch normalization (https://arxiv.org/abs/1502.03167) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9912556242864674
      ],
      "excerpt": "Adam optimization (https://arxiv.org/abs/1412.6980) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "    output_shape = (w_x,h_x,12) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huybik/CNN-from-scratch",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-19T04:49:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-18T05:09:53Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9836557075213817
      ],
      "excerpt": "This notebook implement a mini deep learning frame-work in the style of pytorch. Everything here from RELU, Batch Norm, Softmax, ...  are implemented from scratch, in an attemp to fully understand how Convolutional neuron netowrk works under the hood. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9989376687874852,
        0.9113913999040093
      ],
      "excerpt": "The purpose of this notebook is to encourage understanding of deep learning, everything under the hood that enable these stuffs to work (which is not scary at all) and the frameworks that implement them. A little bit of programming skill and linnear algebra is sufficient to work your way from bottom up to implement convolution neural networks. I also include a graident check function that helps validate back-probagation implement. \nThe list of layers and activation that were implemented from scratch in this repo: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9969933594878
      ],
      "excerpt": "The network declaration and using is similar to that of pytorch.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8967747647974206
      ],
      "excerpt": "    #: only layers with trainable weights here, which are used in optimization/gradient update. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560187895509076
      ],
      "excerpt": "    for k, (W,b) in weight_list.items(): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Convolutional neuron network from scratch using only Numpy.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/hoanghuy89/CNN-from-first-principle/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 18:46:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huybik/CNN-from-scratch/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "huybik/CNN-from-scratch",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/hoanghuy89/CNN-from-first-principle/main/CNN-from-first-principle.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8595215944002806
      ],
      "excerpt": "<img src=\"images/yes-no.png\" style=\"width:600px;height:300px;\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8997243352845468
      ],
      "excerpt": "    linear_in = np.prod(output_shape) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/huybik/CNN-from-scratch/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CNN from scratch usinng only Numpy for MNIST and CIFAR10",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CNN-from-scratch",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "huybik",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/huybik/CNN-from-scratch/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 29 Dec 2021 18:46:38 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "numpy",
      "deep-learning",
      "convolutional-neural-networks",
      "mnist",
      "cifar10"
    ],
    "technique": "GitHub API"
  }
}