{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1810.12546",
      "https://arxiv.org/abs/1709.02755",
      "https://arxiv.org/abs/1611.01576",
      "https://arxiv.org/abs/1810.12546",
      "https://arxiv.org/abs/1705.07393"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please cite the following paper:\n> Biao Zhang; Rico Sennrich (2019). *A Lightweight Recurrent Network for Sequence Modeling*. \nIn Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics. Florence, Italy.\n\n```\n@inproceedings{zhang-sennrich:2019:ACL,\n  address = \"Florence, Italy\",\n  author = \"Zhang, Biao and Sennrich, Rico\",\n  booktitle = \"{Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics}\",\n  publisher = \"Association for Computational Linguistics\",\n  title = \"{A Lightweight Recurrent Network for Sequence Modeling}\",\n  year = \"2019\"\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{zhang-sennrich:2019:ACL,\n  address = \"Florence, Italy\",\n  author = \"Zhang, Biao and Sennrich, Rico\",\n  booktitle = \"{Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics}\",\n  publisher = \"Association for Computational Linguistics\",\n  title = \"{A Lightweight Recurrent Network for Sequence Modeling}\",\n  year = \"2019\"\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8470329734279318
      ],
      "excerpt": "Source code for \"A Lightweight Recurrent Network for Sequence Modeling\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9464710244864579
      ],
      "excerpt": "The above structure which is also observed by Zhang et al., Lee et al.,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8714162992508173
      ],
      "excerpt": "* Machine Translation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959546310417776
      ],
      "excerpt": "* Named Entity Recognition \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bzhangGo/lrn",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For any further comments or questions about LRN, please email <a href=\"mailto:b.zhang@ed.ac.uk\">Biao Zhang</a>.",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-21T13:44:07Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-09-28T07:08:35Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9870764100371451,
        0.908925214220865,
        0.8756840120180446
      ],
      "excerpt": "In our new paper, we propose lightweight recurrent network, which combines the strengths of  \nATR and SRU.  \nATR helps reduces model parameters and avoids additional free parameters for gate calculation, through the twin-gate \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8563582844888584,
        0.8454607350897441,
        0.9095250186861178,
        0.8674637209676773,
        0.8054306853945971,
        0.86384813477949
      ],
      "excerpt": "SRU follows the QRNN and moves all recurrent computations outside the recurrence. \nBased on the above units, we propose LRN: \n<img src=\"https://latex.codecogs.com/svg.latex?\\begin{align*}&space;\\mathbf{q}_t,&space;\\mathbf{k}_t,&space;\\mathbf{v}_t&space;=&space;\\mathbf{x}_t\\mathbf{W}_q,&space;\\mathbf{x}_t\\mathbf{W}_k,&space;\\mathbf{x}_t\\mathbf{W}_v&space;\\\\&space;\\mathbf{i}_t&space;=&space;\\sigma(\\mathbf{k}_t&space;&plus;&space;\\mathbf{h}_{t-1})&space;\\\\&space;\\mathbf{f}_t&space;=&space;\\sigma(\\mathbf{q}_t&space;-&space;\\mathbf{h}_{t-1})&space;\\\\&space;\\mathbf{h}_t&space;=&space;g(\\mathbf{i}_t&space;\\odot&space;\\mathbf{v}_t&space;&plus;&space;\\mathbf{f}_t&space;\\odot&space;\\mathbf{h}_{t-1})&space;\\end{align}\" title=\"\\begin{align} \\mathbf{q}_t, \\mathbf{k}_t, \\mathbf{v}_t = \\mathbf{x}_t\\mathbf{W}_q, \\mathbf{x}_t\\mathbf{W}_k, \\mathbf{x}_t\\mathbf{W}_v \\\\ \\mathbf{i}_t = \\sigma(\\mathbf{k}_t + \\mathbf{h}_{t-1}) \\\\ \\mathbf{f}_t = \\sigma(\\mathbf{q}_t - \\mathbf{h}_{t-1}) \\\\ \\mathbf{h}_t = g(\\mathbf{i}_t \\odot \\mathbf{v}_t + \\mathbf{f}_t \\odot \\mathbf{h}_{t-1}) \\end{align*}\"/> \nwhere g(&middot;) is an activation function, tanh or identity. W<sub>q</sub>, W<sub>k</sub> and W<sub>v</sub>  \nare model parameters. The matrix computation (as well as potential layer noramlization) can be shfited outside the  \nrecurrence. Therefore, the whole model is fast in running. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9188646423550418
      ],
      "excerpt": "which could grow into infinity. This is the reason we added the activation function. Another alternative solution \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8816786151422843,
        0.8163482361196608
      ],
      "excerpt": "One way to understand the model is to unfold the LRN structure along input tokens: \n<img src=\"https://latex.codecogs.com/svg.latex?\\mathbf{h}_t&space;&&space;=&space;\\sum_{k=1}^t&space;\\mathbf{i}_k&space;\\odot&space;\\left(\\prod_{l=1}^{t-k}\\mathbf{f}_{k&plus;l}\\right)&space;\\odot&space;\\mathbf{v}_k,\" title=\"\\mathbf{h}_t & = \\sum_{k=1}^t \\mathbf{i}_k \\odot \\left(\\prod_{l=1}^{t-k}\\mathbf{f}_{k+l}\\right) \\odot \\mathbf{v}_k,\"/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9063375256793418,
        0.816429083331122
      ],
      "excerpt": "and etc, endows the RNN model with multiple interpretations. We provide two as follows: \nRelation with Self Attention Networks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8717454751857527,
        0.8323910812100516,
        0.8077633682227094,
        0.8587105828849857
      ],
      "excerpt": "weight is assigned to the corresponding value representation and contributes to the final hidden representation. \nDoes the learned weights make sense? We do a classification tasks on AmaPolar task with a unidirectional linear-LRN. \nThe final hidden state is feed into the classifier. One example below shows the learned weights. The term great gains \na large weight, which decays slowly and contributes the final positive decision. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9013916585899576
      ],
      "excerpt": "Another view of the unfolded structure is that different gates form different memory mechanism. The input gate acts as \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8338763027571319
      ],
      "excerpt": "chain that controls how to erase meaningless past information. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Source code for \"A Lightweight Recurrent Network for Sequence Modeling\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bzhangGo/lrn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Thu, 23 Dec 2021 12:18:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bzhangGo/lrn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bzhangGo/lrn",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/rc/rnet/train_lrn.sh",
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/rc/rnet/test_lrn.sh",
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/rc/rnet/code/download.sh",
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/rc/elmo_rnet/train_lrn.sh",
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/rc/elmo_rnet/test_lrn.sh",
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/rc/elmo_rnet/code/download.sh",
      "https://raw.githubusercontent.com/bzhangGo/lrn/master/lm/code/get_data.sh"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8741542412426502
      ],
      "excerpt": "<img src=\"figures/san_corr.png\" width=300 /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8578988917319892
      ],
      "excerpt": "<img src=\"figures/memory.png\"  width=500 /> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8741542412426502
      ],
      "excerpt": "<img src=\"figures/ls_mem.png\"  width=250 /> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bzhangGo/lrn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2019, Biao Zhang\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its\\n   contributors may be used to endorse or promote products derived from\\n   this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "lrn",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "lrn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bzhangGo",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bzhangGo/lrn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 22,
      "date": "Thu, 23 Dec 2021 12:18:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "recurrent-neural-network",
      "lightweight-recurrent",
      "sequence-modeling"
    ],
    "technique": "GitHub API"
  }
}