{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.03268",
      "https://arxiv.org/abs/1806.09055"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you use any part of this code in your research, please cite our conference paper:\n\n```\n@inproceedings{guo2019nat,\n  title={NAT: Neural Architecture Transformer for Accurate and Compact Architectures},\n  author={Guo, Yong and Zheng, Yin and Tan, Mingkui and Chen, Qi and Chen, Jian and Zhao, Peilin and Huang, Junzhou},\n  booktitle={Advances in Neural Information Processing Systems},\n  year={2019}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{guo2019nat,\n  title={NAT: Neural Architecture Transformer for Accurate and Compact Architectures},\n  author={Guo, Yong and Zheng, Yin and Tan, Mingkui and Chen, Qi and Chen, Jian and Zhao, Peilin and Huang, Junzhou},\n  booktitle={Advances in Neural Information Processing Systems},\n  year={2019}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8091637078695846
      ],
      "excerpt": "We consider two benchmark classification datsets, including CIFAR-10 and ImageNet. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/guoyongcs/NATv2",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-08T11:42:16Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-11T06:06:23Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Pytorch implementation for \u201cTowards Accurate and Compact Architectures via Neural Architecture Transformer\u201d.\n\n<p align=\"center\">\n<img src=\"./imgs/nat_scheme.jpg\" alt=\"darts\" width=\"100%\">\n</p>\n<p align=\"aligned\">\nFigure. The scheme of NAT++. Our NAT++ takes an arbitrary architecture as input and produces the optimized architecture as the output. We use blue arrows to represent the process of architecture optimization. Red arrows and boxes denote the computation of reward and gradients.\n</p>\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9651718254059389
      ],
      "excerpt": "Figure. Operation transition scheme of NAT++. (a) operation transition of NAT++; (b) computation costs of different operations. We set the input channel and output channel to 128, the height and width of the input feature maps to 32. Here, sep denotes a separable convolution and dil denotes a dilated separable convolution.. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9687832826969454
      ],
      "excerpt": "We consider to optimize two kinds of architectures, namely loose-end architectures and fully-concat architectures. More details about these two kinds of architectures can be found in ENAS and DARTS, respectively. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Implementation for NATv2.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/guoyongcs/NATv2/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 23 Dec 2021 15:15:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/guoyongcs/NATv2/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "guoyongcs/NATv2",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9086183379932165
      ],
      "excerpt": "ImageNet needs to be manually downloaded (preferably to a SSD) following the instructions here. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9291983518725018
      ],
      "excerpt": "<img src=\"./imgs/natv2_transition.jpg\" alt=\"darts\" width=\"100%\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9382892056106165
      ],
      "excerpt": "python train_search.py --data $DATA_DIR$ --op_type FULLY_CONCAT_PRIMITIVES \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9382892056106165
      ],
      "excerpt": "python train_search.py --data $DATA_DIR$ --op_type LOOSE_END_PRIMITIVES \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9441373808465089
      ],
      "excerpt": "python derive.py --data ./data --arch DARTS --model_path pretrained/fully_connect.pt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9291983518725018
      ],
      "excerpt": "<img src=\"./imgs/darts.jpg\" alt=\"darts\" width=\"100%\"> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/guoyongcs/NATv2/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Towards Accurate and Compact Architectures via Neural Architecture Transformer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "NATv2",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "guoyongcs",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/guoyongcs/NATv2/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\nPython>=3.6, PyTorch==0.4.0, torchvision==0.2.1 graphviz=0.10.1 scipy=1.1.0 pygcn\n```\n\nPlease follow the [guide](https://github.com/tkipf/pygcn) to install pygcn.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 21,
      "date": "Thu, 23 Dec 2021 15:15:12 GMT"
    },
    "technique": "GitHub API"
  }
}