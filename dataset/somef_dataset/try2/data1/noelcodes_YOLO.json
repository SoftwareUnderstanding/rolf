{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1506.02640 <br>\nTutorial Video: https://www.youtube.com/playlist?list=PLX-LrBk6h3wSGvuTnxB2Kj358XfctL4BM <br>\nDarkflow Repo: https://github.com/thtrieu/darkflow <br>\nYOLO weights: https://pjreddie.com/darknet/yolo/ <br>\n\n[![LIVE DEMO](https://github.com/noelcodes/YOLO/blob/master/ezgif.com-video-to-gif%20(2",
      "https://arxiv.org/abs/1506.02640. \nYolo is very fast, outperformed any other method we have discussed, mainly because it detects the object location in a smarter way. \nThe general idea is: \n- The input image is divided into an S \u00d7 S grid. \n- For each grid cell predicts B bounding boxes, confidence for those boxes and C class probabilities.\n- These predictions are encoded as an S x S x (B*5+C"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9977994744046882,
        0.890734504593722,
        0.8656070203791273
      ],
      "excerpt": "Yolo paper: https://arxiv.org/abs/1506.02640 <br> \nTutorial Video: https://www.youtube.com/playlist?list=PLX-LrBk6h3wSGvuTnxB2Kj358XfctL4BM <br> \nDarkflow Repo: https://github.com/thtrieu/darkflow <br> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8527257674205588
      ],
      "excerpt": "For details you can read the paper here https://arxiv.org/abs/1506.02640.  \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/noelcodes/YOLO",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-06-06T03:38:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-04-11T06:40:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8909775991482651
      ],
      "excerpt": "Just wanted to check out what Yolo is, so followed tutorial by Mark Jay, and made it working on my laptop. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9117361126309326
      ],
      "excerpt": "Yolo is very fast, outperformed any other method we have discussed, mainly because it detects the object location in a smarter way.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8414938439945263
      ],
      "excerpt": "- The input image is divided into an S \u00d7 S grid.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Exploring YOLO. Credits to Mark Jay and darkflow.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/noelcodes/YOLO/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Wed, 22 Dec 2021 00:30:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/noelcodes/YOLO/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "noelcodes/YOLO",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Yolo is written in Darknet, Open Source Neural Networks in C, for its speed.\nClick here for the link to [Darknet](https://pjreddie.com/darknet/yolo/).\n\nBut we are died hard python fan. Luckily some one translated darknet to a Tensorflow version, hence the name darkflow. You can clone it from this [Darkflow link](https://github.com/thtrieu/darkflow).\nFollow thru the installation guide written there. Basically it uses Cython language to bridge between C to Python. Then run my code 'yolo_noel.py\" in terminal. \nDownload you own weight too, as filesize too large, I am unable to push it up to my github.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.932451947899597,
        0.8732089505944296
      ],
      "excerpt": "Darkflow Repo: https://github.com/thtrieu/darkflow <br> \nYOLO weights: https://pjreddie.com/darknet/yolo/ <br> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/noelcodes/YOLO/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "[Home Page](https://noelcodes.github.io/)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "YOLO",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "noelcodes",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/noelcodes/YOLO/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Wed, 22 Dec 2021 00:30:38 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "I did not have time to use my custom image on this, preparation of the labelmaps and xml format is slightly different from the tensorflow method. I also noticed that the accuracy of Yolo model is not as good as Faster R-CNN, so I did not bother to waste time on it. However, it is still possible to use custom images. Instruction is on the same link above. \n\nFor advertising tagging purpose, we just need to replace labels with resepctive slogan/promotions. Example:\n```\nlabel = result['label']\nif label == 'laptop':\n     label='Laptop now $999'\nelif label == 'Wine':\n     label='Buy 1 Wine, Get 1 Free'\n```     \n\n![alt text](https://i.imgur.com/F0GhB4D.jpg)\n",
      "technique": "Header extraction"
    }
  ]
}