{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fantianwen/laalaz13E",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "How to become a contributor and submit your own code\nContributor License Agreements\nWe'd love to accept your patches! Before we can take them, we\nhave to jump a couple of legal hurdles.\nPlease fill out either the individual or corporate Contributor License Agreement\n(CLA).\n\nIf you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an\n    individual CLA.\nIf you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a\n    corporate CLA.\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\nContributing A Patch\n\nSubmit an issue describing your proposed change to the\n   issue tracker.\nPlease don't mix more than one logical change per submittal,\n   because it makes the history hard to follow. If you want to make a\n   change that doesn't have a corresponding issue in the issue\n   tracker, please create one.\nAlso, coordinate with team members that are listed on the issue in\n   question. This ensures that work isn't being duplicated and\n   communicating your plan early also generally leads to better\n   patches.\nIf your proposed change is accepted, and you haven't already done so, sign a\n   Contributor License Agreement (see details above).\nFork the desired repo, develop and test your code changes.\nEnsure that your code adheres to the existing style in the sample to which\n   you are contributing.\nEnsure that your code has an appropriate set of unit tests which all pass.\nSubmit a pull request.\n\nIf you are a Googler, it is preferable to first create an internal change and\nhave it reviewed and submitted, and then create an upstreaming pull\nrequest here. \nThe Google Test and Google Mock Communities\nThe Google Test community exists primarily through the\ndiscussion group\nand the GitHub repository.\nLikewise, the Google Mock community exists primarily through their own\ndiscussion group.\nYou are definitely encouraged to contribute to the\ndiscussion and you can also help us to keep the effectiveness of the\ngroup high by following and promoting the guidelines listed here.\nPlease Be Friendly\nShowing courtesy and respect to others is a vital part of the Google\nculture, and we strongly encourage everyone participating in Google\nTest development to join us in accepting nothing less. Of course,\nbeing courteous is not the same as failing to constructively disagree\nwith each other, but it does mean that we should be respectful of each\nother when enumerating the 42 technical reasons that a particular\nproposal may not be the best choice. There's never a reason to be\nantagonistic or dismissive toward anyone who is sincerely trying to\ncontribute to a discussion.\nSure, C++ testing is serious business and all that, but it's also\na lot of fun. Let's keep it that way. Let's strive to be one of the\nfriendliest communities in all of open source.\nAs always, discuss Google Test in the official GoogleTest discussion group.\nYou don't have to actually submit code in order to sign up. Your participation\nitself is a valuable contribution.\nStyle\nTo keep the source consistent, readable, diffable and easy to merge,\nwe use a fairly rigid coding style, as defined by the google-styleguide project.  All patches will be expected\nto conform to the style outlined here.\nRequirements for Contributors\nIf you plan to contribute a patch, you need to build Google Test,\nGoogle Mock, and their own tests from a git checkout, which has\nfurther requirements:\n\nPython v2.3 or newer (for running some of\n    the tests and re-generating certain source files from templates)\nCMake v2.6.4 or newer\nGNU Build System\n    including automake (>= 1.9), autoconf (>= 2.59), and\n    libtool / libtoolize.\n\nDeveloping Google Test\nThis section discusses how to make your own changes to Google Test.\nTesting Google Test Itself\nTo make sure your changes work as intended and don't break existing\nfunctionality, you'll want to compile and run Google Test's own tests.\nFor that you can use CMake:\nmkdir mybuild\ncd mybuild\ncmake -Dgtest_build_tests=ON ${GTEST_DIR}\n\nMake sure you have Python installed, as some of Google Test's tests\nare written in Python.  If the cmake command complains about not being\nable to find Python (Could NOT find PythonInterp (missing:\nPYTHON_EXECUTABLE)), try telling it explicitly where your Python\nexecutable can be found:\ncmake -DPYTHON_EXECUTABLE=path/to/python -Dgtest_build_tests=ON ${GTEST_DIR}\n\nNext, you can build Google Test and all of its own tests.  On *nix,\nthis is usually done by 'make'.  To run the tests, do\nmake test\n\nAll tests should pass.\nRegenerating Source Files\nSome of Google Test's source files are generated from templates (not\nin the C++ sense) using a script.\nFor example, the\nfile include/gtest/internal/gtest-type-util.h.pump is used to generate\ngtest-type-util.h in the same directory.\nYou don't need to worry about regenerating the source files\nunless you need to modify them.  You would then modify the\ncorresponding .pump files and run the 'pump.py'\ngenerator script.  See the Pump Manual.\nDeveloping Google Mock\nThis section discusses how to make your own changes to Google Mock.\nTesting Google Mock Itself\nTo make sure your changes work as intended and don't break existing\nfunctionality, you'll want to compile and run Google Test's own tests.\nFor that you'll need Autotools.  First, make sure you have followed\nthe instructions above to configure Google Mock.\nThen, create a build output directory and enter it.  Next,\n${GMOCK_DIR}/configure  # try --help for more info\n\nOnce you have successfully configured Google Mock, the build steps are\nstandard for GNU-style OSS packages.\nmake        # Standard makefile following GNU conventions\nmake check  # Builds and runs all tests - all should pass.\n\nNote that when building your project against Google Mock, you are building\nagainst Google Test as well.  There is no need to configure Google Test\nseparately.",
    "technique": "File Exploration"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "This file contains a list of people who've made non-trivial\ncontribution to the Google C++ Testing Framework project.  People\nwho commit code to the project are encouraged to add their names\nhere.  Please keep the list sorted by first names.\nAjay Joshi &#106;&#97;&#106;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nBal\u00e1zs D\u00e1n &#98;&#97;&#108;&#97;&#122;&#115;&#46;&#100;&#97;&#110;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nBharat Mediratta &#98;&#104;&#97;&#114;&#97;&#116;&#64;&#109;&#101;&#110;&#97;&#108;&#116;&#111;&#46;&#99;&#111;&#109;\nChandler Carruth &#99;&#104;&#97;&#110;&#100;&#108;&#101;&#114;&#99;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nChris Prince &#99;&#112;&#114;&#105;&#110;&#99;&#101;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nChris Taylor &#116;&#97;&#121;&#108;&#111;&#114;&#99;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nDan Egnor &#101;&#103;&#110;&#111;&#114;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nEric Roman &#101;&#114;&#111;&#109;&#97;&#110;&#64;&#99;&#104;&#114;&#111;&#109;&#105;&#117;&#109;&#46;&#111;&#114;&#103;\nHady Zalek &#104;&#97;&#100;&#121;&#46;&#122;&#97;&#108;&#101;&#107;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nJeffrey Yasskin &#106;&#121;&#97;&#115;&#115;&#107;&#105;&#110;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nJ\u00f3i Sigur\u00f0sson &#106;&#111;&#105;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nKeir Mierle &#109;&#105;&#101;&#114;&#108;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nKeith Ray &#107;&#101;&#105;&#116;&#104;&#46;&#114;&#97;&#121;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nKenton Varda &#107;&#101;&#110;&#116;&#111;&#110;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nManuel Klimek &#107;&#108;&#105;&#109;&#101;&#107;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nMarkus Heule &#109;&#97;&#114;&#107;&#117;&#115;&#46;&#104;&#101;&#117;&#108;&#101;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nMika Raento &#109;&#105;&#107;&#105;&#101;&#64;&#105;&#107;&#105;&#46;&#102;&#105;\nMikl\u00f3s Fazekas &#109;&#102;&#97;&#122;&#101;&#107;&#97;&#115;&#64;&#115;&#122;&#101;&#109;&#97;&#102;&#111;&#114;&#46;&#99;&#111;&#109;\nPasi Valminen &#112;&#97;&#115;&#105;&#46;&#118;&#97;&#108;&#109;&#105;&#110;&#101;&#110;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nPatrick Hanna &#112;&#104;&#97;&#110;&#110;&#97;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nPatrick Riley &#112;&#102;&#114;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nPeter Kaminski &#112;&#105;&#111;&#116;&#114;&#107;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nPreston Jackson &#112;&#114;&#101;&#115;&#116;&#111;&#110;&#46;&#97;&#46;&#106;&#97;&#99;&#107;&#115;&#111;&#110;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nRainer Klaffenboeck &#114;&#97;&#105;&#110;&#101;&#114;&#46;&#107;&#108;&#97;&#102;&#102;&#101;&#110;&#98;&#111;&#101;&#99;&#107;&#64;&#100;&#121;&#110;&#97;&#116;&#114;&#97;&#99;&#101;&#46;&#99;&#111;&#109;\nRuss Cox &#114;&#115;&#99;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nRuss Rufer &#114;&#117;&#115;&#115;&#64;&#112;&#101;&#110;&#116;&#97;&#100;&#46;&#99;&#111;&#109;\nSean Mcafee &#101;&#101;&#102;&#97;&#99;&#109;&#64;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\nSigur\u00f0ur \u00c1sgeirsson &#115;&#105;&#103;&#103;&#105;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nTracy Bialik &#116;&#114;&#97;&#99;&#121;&#64;&#112;&#101;&#110;&#116;&#97;&#100;&#46;&#99;&#111;&#109;\nVadim Berman &#118;&#97;&#100;&#105;&#109;&#98;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nVlad Losev &#118;&#108;&#97;&#100;&#108;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;\nZhanyong Wan &#119;&#97;&#110;&#64;&#103;&#111;&#111;&#103;&#108;&#101;&#46;&#99;&#111;&#109;",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-01-16T09:28:06Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-13T16:10:33Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9293580889064363
      ],
      "excerpt": "Please checkout to branch develop for document watching \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "13x13 and for strength control use",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fantianwen/laalaz13E/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 30 Dec 2021 01:34:38 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fantianwen/laalaz13E/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fantianwen/laalaz13E",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/fantianwen/laalaz13E/tree/master/gtest/googlemock/docs",
      "https://github.com/fantianwen/laalaz13E/tree/master/gtest/googletest/docs"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/googletest/xcode/Scripts/runtests.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/googletest/xcode/Samples/FrameworkSample/runtests.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/build-linux-bazel.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/install-osx.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/travis.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/env-osx.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/build-linux-autotools.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/install-linux.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/log-config.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/get-nprocessors.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/gtest/ci/env-linux.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/autoTrain/minitrain.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/blas/testing/runblastest.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/bench_multi_compilers.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/btl/data/mk_gnuplot_script.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/btl/data/smooth_all.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/btl/data/mk_new_gnuplot.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/btl/data/mk_mean_script.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/perf_monitoring/gemm/make_plot.sh",
      "https://raw.githubusercontent.com/fantianwen/laalaz13E/master/src/Eigen/bench/perf_monitoring/gemm/run.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fantianwen/laalaz13E/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Fortran",
      "Python",
      "CMake",
      "C",
      "Cuda",
      "Shell",
      "Makefile",
      "M4",
      "Starlark",
      "JavaScript",
      "CSS",
      "Batchfile",
      "QMake"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "GNU General Public License v3.0",
      "url": "https://api.github.com/licenses/gpl-3.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2008, Google Inc.\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\nnotice, this list of conditions and the following disclaimer.\\n    * Redistributions in binary form must reproduce the above\\ncopyright notice, this list of conditions and the following disclaimer\\nin the documentation and/or other materials provided with the\\ndistribution.\\n    * Neither the name of Google Inc. nor the names of its\\ncontributors may be used to endorse or promote products derived from\\nthis software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Notification",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "laalaz13E",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fantianwen",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fantianwen/laalaz13E/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 30 Dec 2021 01:34:38 GMT"
    },
    "technique": "GitHub API"
  }
}