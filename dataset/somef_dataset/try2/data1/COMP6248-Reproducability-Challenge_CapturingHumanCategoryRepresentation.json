{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1605.09782 \r\n\r\n----\r\n\r\n## Introduction\r\nIn the paper writers used 2 GAN types which are DCGAN and BiGAN classify images.\r\nDCGAN wass used for creating happy, sad, male, female faces.\r\nBiGAN, which employed from Adversarial Feature Learning, was ran on Imagenet ILSVRC 2012 dataset to classify images. \r\n\r\n---\r\n\r\n## Requirements\r\n1. ILSVRC 2012 dataset should be downlaoded and  extracted under data/imagenet/\r\n2. Python2\r\n3. theano\r\n4. pytorch\r\n5. scipy\r\n6. matplotlib\r\n7. numpy\r\n8. joblib\r\n9. lazy_python\r\n10. flask\r\n11. itertools\r\n12. OrderedDict\r\n13. data\r\n14. argparse\r\n15. rescale\r\n---\r\n\r\n### To Run\r\n  To train the model from strach, run train_imagenet.sh\r\n\r\n  To evaluate the model, run eval_model.sh\r\n\r"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nBelow you will find a collection of guidelines for submitting issues as well as contributing code to the Caffe repository.\nPlease read those before starting an issue or a pull request.\nIssues\nSpecific Caffe design and development issues, bugs, and feature requests are maintained by GitHub Issues.\nPlease do not post installation, build, usage, or modeling questions, or other requests for help to Issues.\nUse the caffe-users list instead.\nThis helps developers maintain a clear, uncluttered, and efficient view of the state of Caffe.\nSee the chapter caffe-users below for guidance on posting to the users list.\nWhen reporting an issue, it's most helpful to provide the following information, where applicable:\n* How does the problem look like and what steps reproduce it?\n* Can you reproduce it using the latest master, compiled with the DEBUG make option?\n* What hardware and software are you running? In particular:\n    * GPU make and model, if relevant,\n    * operating system/distribution,\n    * compiler; please also post which version (for example, with GCC run gcc --version to check),\n    * CUDA version, if applicable (run nvcc --version to check),\n    * cuDNN version, if applicable (version number is stored in cudnn.h, look for lines containing CUDNN_MAJOR, CUDNN_MINOR and CUDNN_PATCHLEVEL),\n    * BLAS library,\n    * Python version, if relevant,\n    * MATLAB version, if relevant.\n* What have you already tried to solve the problem? How did it fail? Are there any other issues related to yours?\n* If this is not a build-related issue, does your installation pass make runtest?\n* If the bug is a crash, provide the backtrace (usually printed by Caffe; always obtainable with gdb).\n* If you are reporting a build error that seems to be due to a bug in Caffe, please attach your build configuration (either Makefile.config or CMakeCache.txt) and the output of the make (or cmake) command.\nIf only a small portion of the code/log is relevant to your issue, you may paste it directly into the post, preferably using Markdown syntax for code block: triple backtick ( ``` ) to open/close a block.\nIn other cases (multiple files, or long files), please attach them to the post - this greatly improves readability.\nIf the problem arises during a complex operation (e.g. large script using pycaffe, long network prototxt), please reduce the example to the minimal size that still causes the error.\nAlso, minimize influence of external modules, data etc. - this way it will be easier for others to understand and reproduce your issue, and eventually help you.\nSometimes you will find the root cause yourself in the process.\nTry to give your issue a title that is succinct and specific. The devs will rename issues as needed to keep track of them.\nCaffe-users\nBefore you post to the caffe-users list, make sure you look for existing solutions.\nThe Caffe community has encountered and found solutions to countless problems - benefit from the collective experience.\nRecommended places to look:\n* the users list itself,\n* caffe tag on StackOverflow,\n* GitHub issues tracker (some problems have been answered there),\n* the public wiki,\n* the official documentation.\nFound a post/issue with your exact problem, but with no answer?\nDon't just leave a \"me too\" message - provide the details of your case.\nProblems with more available information are easier to solve and attract good attention.\nWhen posting to the list, make sure you provide as much relevant information as possible - recommendations for an issue report (see above) are a good starting point.\nPlease make it very clear which version of Caffe you are using, especially if it is a fork not maintained by BVLC.\nFormatting recommendations hold: paste short logs/code fragments into the post (use fixed-width text for them), attach long logs or multiple files.\nPull Requests\nCaffe welcomes all contributions.\nSee the contributing guide for details.\nBriefly: read commit by commit, a PR should tell a clean, compelling story of one improvement to Caffe. In particular:\n\nA PR should do one clear thing that obviously improves Caffe, and nothing more. Making many smaller PRs is better than making one large PR; review effort is superlinear in the amount of code involved.\nSimilarly, each commit should be a small, atomic change representing one step in development. PRs should be made of many commits where appropriate.\nPlease do rewrite PR history to be clean rather than chronological. Within-PR bugfixes, style cleanups, reversions, etc. should be squashed and should not appear in merged PR history.\nAnything nonobvious from the code should be explained in comments, commit messages, or the PR description, as appropriate.",
    "technique": "File Exploration"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributors\nCaffe is developed by a core set of BAIR members and the open-source community.\nWe thank all of our contributors!\nFor the detailed history of contributions of a given file, try\ngit blame file\n\nto see line-by-line credits and\ngit log --follow file\n\nto see the change log even across renames and rewrites.\nPlease refer to the acknowledgements on the Caffe site for further details.\nCopyright is held by the original contributor according to the versioning history; see LICENSE.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-17T14:25:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-17T14:42:20Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "In the paper writers used 2 GAN types which are DCGAN and BiGAN classify images.\r\nDCGAN wass used for creating happy, sad, male, female faces.\r\nBiGAN, which employed from Adversarial Feature Learning, was ran on Imagenet ILSVRC 2012 dataset to classify images. \r\n\r\n---\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 14:30:56 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/docker/gpu/Dockerfile",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/docker/cpu/Dockerfile",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/dcgan/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/tree/master/BiGAN/raid/ekerakin/caffe/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/02-fine-tuning.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/pascal-multilabel-with-datalayer.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/net_surgery.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/detection.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/01-learning-lenet.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/brewing-logreg.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/00-classification.ipynb",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/siamese/mnist_siamese.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/theanosetup.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/train_imagenet_highres_encoder.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/train_imagenet.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/train_mnist.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/eval_model.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/voc-classification/eval_matrix.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/deploy_docs.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/build_docs.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/download_model_from_gist.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/upload_model_to_gist.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/gather_examples.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/install-python-deps.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/test.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/defaults.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/setup-venv.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/configure-make.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/configure.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/build.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/install-deps.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/scripts/travis/configure-cmake.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/imagenet/create_imagenet.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/imagenet/resume_training.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/imagenet/train_caffenet.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/imagenet/make_imagenet_mean.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/cifar10/create_cifar10.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/cifar10/train_quick.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/cifar10/train_full_sigmoid.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/cifar10/train_full_sigmoid_bn.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/cifar10/train_full.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_lenet_adam.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_lenet_consolidated.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_lenet_docker.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_mnist_autoencoder_adagrad.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_lenet_rmsprop.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/create_mnist.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_mnist_autoencoder_nesterov.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_lenet.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_mnist_autoencoder.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/mnist/train_mnist_autoencoder_adadelta.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/siamese/create_mnist_siamese.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/examples/siamese/train_mnist_siamese.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/tools/extra/parse_log.sh",
      "https://raw.githubusercontent.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/master/BiGAN/raid/ekerakin/caffe/tools/extra/launch_resize_and_crop_images.sh"
    ],
    "technique": "File Exploration"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "C++",
      "Python",
      "Cuda",
      "CMake",
      "Shell",
      "MATLAB",
      "Makefile",
      "CSS",
      "HTML",
      "Dockerfile",
      "JavaScript"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'COPYRIGHT\\n\\nAll contributions by the University of California:\\nCopyright (c) 2014-2017 The Regents of the University of California (Regents)\\nAll rights reserved.\\n\\nAll other contributions:\\nCopyright (c) 2014-2017, the respective contributors\\nAll rights reserved.\\n\\nCaffe uses a shared copyright model: each contributor holds copyright over\\ntheir contributions to Caffe. The project versioning records all such\\ncontribution and copyright details. If a contributor wants to further mark\\ntheir specific copyright on a particular contribution, they should indicate\\ntheir copyright solely in the commit message of the change when it is\\ncommitted.\\n\\nLICENSE\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met: \\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer. \\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution. \\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nCONTRIBUTION AGREEMENT\\n\\nBy contributing to the BVLC/caffe repository through pull-request, comment,\\nor otherwise, the contributor releases their content to the\\nlicense and copyright terms herein.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "CAPTURING HUMAN CATEGORY REPRESENTATIONS BY SAMPLING IN DEEP FEATURE SPACES",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "CapturingHumanCategoryRepresentation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "COMP6248-Reproducability-Challenge",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/COMP6248-Reproducability-Challenge/CapturingHumanCategoryRepresentation/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. ILSVRC 2012 dataset should be downlaoded and  extracted under data/imagenet/\r\n2. Python2\r\n3. theano\r\n4. pytorch\r\n5. scipy\r\n6. matplotlib\r\n7. numpy\r\n8. joblib\r\n9. lazy_python\r\n10. flask\r\n11. itertools\r\n12. OrderedDict\r\n13. data\r\n14. argparse\r\n15. rescale\r\n---\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  To train the model from strach, run train_imagenet.sh\r\n\r\n  To evaluate the model, run eval_model.sh\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 28 Dec 2021 14:30:56 GMT"
    },
    "technique": "GitHub API"
  }
}