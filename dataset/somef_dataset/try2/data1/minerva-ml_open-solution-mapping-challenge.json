{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1806.00844",
      "https://arxiv.org/abs/1709.00179"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9696552948250506
      ],
      "excerpt": "Ground truth masks for overlapping contours (DSB-2018 winners approach). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9356966181999057
      ],
      "excerpt": "Distance weighted cross entropy explained in the famous U-Net paper (our code :computer: and config :bookmark_tabs:). \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/minerva-ml/open-solution-mapping-challenge/master/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/neptune-ai/open-solution-mapping-challenge",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to Mapping Challenge Open Solution\nGet involved\nYou are welcome to contribute to this Open Solution. To get started:\n1. Check our kanban board to see what we are working on right now.\n1. Express your interest in a particular issue by submitting a comment or,\n    * submit your own issue.\n1. We will get back to you in order to start working together.\nCode contributions\nMajor - and most appreciated - contribution is pull request with feature or bug fix.\nRemarks\nIn case of custom ideas, please contact core contributors directly at ml-team@neptune.ai.\n\nThanks!\nKuba & Kamil,\ncore contributors to the Open Solution",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-04-10T18:59:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-01T23:59:14Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9897462709369581
      ],
      "excerpt": "Poster that summarizes our project is available here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.967297170738257
      ],
      "excerpt": "1. Check live preview of our work on public projects page: Mapping Challenge :chart_with_upwards_trend:. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9638109711221465,
        0.8954762046322398,
        0.9317750815257083
      ],
      "excerpt": "No cherry-picking here, I promise :wink:. The results exceded our expectations. The output from the network is so good that not a lot of morphological shenanigans is needed. Happy days:) \nAverage Precision and Average Recall were calculated on stage 1 data using pycocotools. Check this blog post for average precision explanation. \nIn this open source solution you will find references to the neptune.ai. It is free platform for community Users, which we use daily to keep track of our experiments. Please note that using neptune.ai is not necessary to proceed with this solution. You may run it as plain Python script :wink:. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8666814179150079,
        0.9529765127895106
      ],
      "excerpt": "Overlay binary masks for each image is produced (code :computer:). \nDistances to the two closest objects are calculated creating the distance map that is used for weighing (code :computer:). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8964435770272873
      ],
      "excerpt": "Image is resized before feeding it to the network. Surprisingly this worked better than cropping (code :computer: and config :bookmark_tabs:). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9913455296604854,
        0.8595110652534891,
        0.8631549618743342,
        0.8074133100397799,
        0.8241848401186336,
        0.8763493487016735
      ],
      "excerpt": "Unet with Resnet34, Resnet101 and Resnet152 as an encoder where Resnet101 gave us the best results. This approach is explained in the TernausNetV2 paper (our code :computer: and config :bookmark_tabs:). Also take a look at our parametrizable implementation of the U-Net. \nNetwork architecture based on dilated convolutions described in this paper. \nUnet with contextual blocks explained in this paper. \nDistance weighted cross entropy explained in the famous U-Net paper (our code :computer: and config :bookmark_tabs:). \nUsing linear combination of soft dice and distance weighted cross entropy (code :computer: and config :bookmark_tabs:). \nAdding component weighted by building size (smaller buildings has greater weight) to the weighted cross entropy that penalizes misclassification on pixels belonging to the small objects (code :computer:). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.851381600825975
      ],
      "excerpt": "* size weights: high values denotes small buildings (the smaller the building the darker the color). Note that no-building is fixed to black. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8532423138300107
      ],
      "excerpt": "increase dice weight to dice_weight=5.0 to make results smoother \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8991964267369481,
        0.9332085588674954,
        0.9039882267056359
      ],
      "excerpt": "Simple morphological operations. At the beginning we used erosion followed by labeling and per label dilation with structure elements chosed by cross-validation. As the models got better, erosion was removed and very small dilation was the only one showing improvements (code :computer:). \nScoring objects. In the beginning we simply used score 1.0 for every object which was a huge mistake. Changing that to average probability over the object region improved results. What improved scores even more was weighing those probabilities with the object size (code :computer:). \nSecond level model. We tried Light-GBM and Random Forest trained on U-Net outputs and features calculated during postprocessing. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787970131878886,
        0.845747671384708
      ],
      "excerpt": "Inference on reflection-padded images was not a way to go. What worked better (but not for the very best models) was replication padding where border pixel value was replicated for all the padded regions (code :computer:). \nConditional Random Fields. It was so slow that we didn't check it for the best models (code :computer:). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9568122416758706,
        0.855049877796951
      ],
      "excerpt": "Recurrent neural networks for postprocessing (instead of our current approach) \nModel weights for the winning solution are available here \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Open solution to the Mapping Challenge :earth_americas:",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/minerva-ml/open-solution-mapping-challenge/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 84,
      "date": "Wed, 22 Dec 2021 16:38:48 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "neptune-ai/open-solution-mapping-challenge",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/minerva-ml/open-solution-mapping-challenge/master/notebooks/results_exploration.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8541600853608156
      ],
      "excerpt": "train on a 50000 examples subset of the dataset with lr=0.0001 and dice_weight=0.5 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018-2020 neptune.ai\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Open Solution to the Mapping Challenge Competition",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "open-solution-mapping-challenge",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "neptune-ai",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/neptune-ai/open-solution-mapping-challenge/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "jakubczakon",
        "body": "* added lgbm based scoring model",
        "dateCreated": "2018-06-21T15:57:35Z",
        "datePublished": "2018-06-21T16:05:01Z",
        "html_url": "https://github.com/neptune-ai/open-solution-mapping-challenge/releases/tag/solution-6",
        "name": "",
        "tag_name": "solution-6",
        "tarball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/tarball/solution-6",
        "url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/releases/11591398",
        "zipball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/zipball/solution-6"
      },
      {
        "authorType": "User",
        "author_name": "jakubczakon",
        "body": "",
        "dateCreated": "2018-05-29T16:50:17Z",
        "datePublished": "2018-06-19T14:21:19Z",
        "html_url": "https://github.com/neptune-ai/open-solution-mapping-challenge/releases/tag/solution-4",
        "name": "",
        "tag_name": "solution-4",
        "tarball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/tarball/solution-4",
        "url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/releases/11549691",
        "zipball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/zipball/solution-4"
      },
      {
        "authorType": "User",
        "author_name": "jakubczakon",
        "body": "",
        "dateCreated": "2018-05-24T14:20:00Z",
        "datePublished": "2018-06-19T14:21:07Z",
        "html_url": "https://github.com/neptune-ai/open-solution-mapping-challenge/releases/tag/solution-3",
        "name": "",
        "tag_name": "solution-3",
        "tarball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/tarball/solution-3",
        "url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/releases/11549685",
        "zipball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/zipball/solution-3"
      },
      {
        "authorType": "User",
        "author_name": "jakubczakon",
        "body": "",
        "dateCreated": "2018-05-09T10:04:00Z",
        "datePublished": "2018-06-19T14:20:50Z",
        "html_url": "https://github.com/neptune-ai/open-solution-mapping-challenge/releases/tag/solution-2",
        "name": "",
        "tag_name": "solution-2",
        "tarball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/tarball/solution-2",
        "url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/releases/11549678",
        "zipball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/zipball/solution-2"
      },
      {
        "authorType": "User",
        "author_name": "jakubczakon",
        "body": "",
        "dateCreated": "2018-04-27T14:07:54Z",
        "datePublished": "2018-06-19T14:20:34Z",
        "html_url": "https://github.com/neptune-ai/open-solution-mapping-challenge/releases/tag/solution-1",
        "name": "",
        "tag_name": "solution-1",
        "tarball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/tarball/solution-1",
        "url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/releases/11549671",
        "zipball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/zipball/solution-1"
      },
      {
        "authorType": "User",
        "author_name": "jakubczakon",
        "body": "* cleaned up code\r\n* added docstrings\r\n* sped-up tta\r\n* updated hyperparams",
        "dateCreated": "2018-06-19T14:18:17Z",
        "datePublished": "2018-06-19T14:19:15Z",
        "html_url": "https://github.com/neptune-ai/open-solution-mapping-challenge/releases/tag/solution-5",
        "name": "Clean up",
        "tag_name": "solution-5",
        "tarball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/tarball/solution-5",
        "url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/releases/11549633",
        "zipball_url": "https://api.github.com/repos/neptune-ai/open-solution-mapping-challenge/zipball/solution-5"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 328,
      "date": "Wed, 22 Dec 2021 16:38:48 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "There are several ways to seek help:\n1. crowdai [discussion](https://www.crowdai.org/challenges/mapping-challenge/topics).\n1. You can submit an [issue](https://github.com/neptune-ai/open-solution-mapping-challenge/issues) directly in this repo.\n1. Join us on [Gitter](https://gitter.im/minerva-ml/open-solution-mapping-challenge?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge).\n\n",
      "technique": "Header extraction"
    }
  ],
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "data-science",
      "machine-learning",
      "deep-learning",
      "kaggle",
      "python",
      "satellite-imagery",
      "data-science-learning",
      "lightgbm",
      "unet",
      "unet-image-segmentation",
      "unet-pytorch",
      "neptune",
      "machine-learning-lab",
      "mapping-challenge",
      "crowdai",
      "competition",
      "pipeline",
      "pipeline-framework"
    ],
    "technique": "GitHub API"
  }
}