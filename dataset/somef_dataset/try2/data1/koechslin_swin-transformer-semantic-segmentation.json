{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2110.05812",
      "https://arxiv.org/abs/2110.05812",
      "https://arxiv.org/abs/2103.14030"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "See the complete description of this work in the [dedicated arXiv paper](https://arxiv.org/abs/2110.05812). If you use this work, please cite it:\n```\n@misc{guerin2021satellite,\n      title={Satellite Image Semantic Segmentation}, \n      author={Eric Gu\u00e9rin and Killian Oechslin and Christian Wolf and Beno\u00eet Martinez},\n      year={2021},\n      eprint={2110.05812},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{liu2021Swin,\n  title={Swin Transformer: Hierarchical Vision Transformer using Shifted Windows},\n  author={Liu, Ze and Lin, Yutong and Cao, Yue and Hu, Han and Wei, Yixuan and Zhang, Zheng and Lin, Stephen and Guo, Baining},\n  journal={arXiv preprint arXiv:2103.14030},\n  year={2021}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@misc{guerin2021satellite,\n      title={Satellite Image Semantic Segmentation}, \n      author={Eric Gu\u00e9rin and Killian Oechslin and Christian Wolf and Beno\u00eet Martinez},\n      year={2021},\n      eprint={2110.05812},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{liu2021Swin,\n  title={Swin Transformer: Hierarchical Vision Transformer using Shifted Windows},\n  author={Liu, Ze and Lin, Yutong and Cao, Yue and Hu, Han and Wei, Yixuan and Zhang, Zheng and Lin, Stephen and Guo, Baining},\n  journal={arXiv preprint arXiv:2103.14030},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8207940084462922
      ],
      "excerpt": ": multi-gpu, multi-scale testing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9795875363523133
      ],
      "excerpt": "Object Detection: See Swin Transformer for Object Detection. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeOfConduct": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/CODE_OF_CONDUCT.md",
    "technique": "File Exploration"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/koechslin/Swin-Transformer-Semantic-Segmentation",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing to mmsegmentation\nAll kinds of contributions are welcome, including but not limited to the following.\n\nFixes (typo, bugs)\nNew features and components\n\nWorkflow\n\nfork and pull the latest mmsegmentation\ncheckout a new branch (do not use master branch for PRs)\ncommit your changes\ncreate a PR\n\nNote\n\nIf you plan to add some new features that involve large changes, it is encouraged to open an issue for discussion first.\nIf you are the author of some papers and would like to include your method to mmsegmentation,\n  please contact Kai Chen (chenkaidev[at]gmail[dot]com). We will much appreciate your contribution.\n\nCode style\nPython\nWe adopt PEP8 as the preferred code style.\nWe use the following tools for linting and formatting:\n\nflake8: linter\nyapf: formatter\nisort: sort imports\n\nStyle configurations of yapf and isort can be found in setup.cfg and .isort.cfg.\nWe use pre-commit hook that checks and formats for flake8, yapf, isort, trailing whitespaces,\n fixes end-of-files, sorts requirments.txt automatically on every commit.\nThe config for a pre-commit hook is stored in .pre-commit-config.\nAfter you clone the repository, you will need to install initialize pre-commit hook.\nshell\npip install -U pre-commit\nFrom the repository folder\nshell\npre-commit install\nAfter this on every commit check code linters and formatter will be enforced.\n\nBefore you create a PR, make sure that your code lints and is formatted by yapf.\n\nC++ and CUDA\nWe follow the Google C++ Style Guide.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-03T12:57:27Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-14T04:00:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9582753350079857,
        0.9250155397612747,
        0.9735383160920087,
        0.9172096064008101,
        0.9867295419137687,
        0.9134802282521287
      ],
      "excerpt": "This repo contains the supported code and configuration files to reproduce semantic segmentation results of Swin Transformer.  \nIt is based on mmsegmentaion. In addition, we provide pre-trained models for the semantic segmentation \nof satellite images into basic classes (vegetation, buildings, roads). The full description of this work is available on arXiv. \nThis repo was used as part of the Ampli ANR projet.   \nThe goal was to do semantic segmentation on satellite photos to precisely identify the species and the density of the trees present in the pictures. However, due to the difficulty of recognizing the exact species of trees in the satellite photos, we decided to reduce the number of classes. \nTo train and test the model, we used data provided by IGN which concerns French departments (Hautes-Alpes in our case). The following datasets \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9737891997691791,
        0.8215045510476057,
        0.8924381759087153,
        0.918118688867617,
        0.8577302739126875
      ],
      "excerpt": "* BD Foret v2 for vegetation data \n* BD Topo for buildings and roads \nImportant: note that the data precision is 50cm per pixel. \nInitially, lots of classes were present in the dataset. We reduced the number of classes by merging them and finally retained the following ones: \n* Dense forest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9144476898948398,
        0.9534043822937103
      ],
      "excerpt": "The purpose of the two last classes is twofold. We first wanted to avoid trapping the training into false segmentation, because buildings and roads were visually present \nin the satellite images and were initially assigned a vegetation class. Second, the segmentation is more precise and gives more identification of the different image elements. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8577302739126875
      ],
      "excerpt": "* Dense forest => 0.5 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9263988934030035,
        0.9404795521658371
      ],
      "excerpt": "We have also tested the model on satellite photos from another French department to see if the trained model generalizes to other locations.  \nWe chose Cantal and here are a few samples of the obtained results: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.946171457756551,
        0.960637277801609,
        0.9418342234483738
      ],
      "excerpt": "These latest results show that the model is capable of producing a segmentation even if the photos are located in another department and even if there are a lot of pixels without information (in black), which is encouraging. \nAs illustrated in the previous images that the results are not perfect. This is caused by the inherent limits of the data used during the training phase. The two main limitations are: \n* The satellite photos and the original segmentation were not made at the same time, so the segmentation is not always accurate. For example, we can see it in the following images: a zone is segmented as \"dense forest\" even if there are not many trees (that is why the segmentation after training, on the right, classed it as \"sparse forest\"):   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9737178626862363
      ],
      "excerpt": "Sometimes there are zones without information (represented in black) in the dataset. Fortunately, we can ignore them during the training phase, but we also lose some information, which is a problem: we thus removed the tiles that had more than 50% of unidentified pixels to try to improve the training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.906283416261526
      ],
      "excerpt": "Example on the Ampli ANR project: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9596353282948916
      ],
      "excerpt": "Example on the Ampli ANR project with the ImageNet-22K pretrained model (available here) : \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9618080672111103,
        0.8631453839968612
      ],
      "excerpt": "- use_checkpoint is used to save GPU memory. Please refer to this page for more details. \n- The default learning rate and training schedule is for 8 GPUs and 2 imgs/gpu. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.834671425278146
      ],
      "excerpt": "Self-Supervised Learning: See MoBY with Swin Transformer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "This is an official implementation for \"Swin Transformer: Hierarchical Vision Transformer using Shifted Windows\" on Semantic Segmentation.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/koechslin/swin-transformer-semantic-segmentation/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Tue, 21 Dec 2021 17:33:40 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/koechslin/Swin-Transformer-Semantic-Segmentation/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "koechslin/Swin-Transformer-Semantic-Segmentation",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/koechslin/swin-transformer-semantic-segmentation/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/demo/MMSegmentation_Tutorial.ipynb",
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/demo/inference_demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/tools/slurm_train.sh",
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/tools/slurm_test.sh",
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/tools/dist_test.sh",
      "https://raw.githubusercontent.com/koechslin/swin-transformer-semantic-segmentation/main/tools/dist_train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please refer to [get_started.md](https://github.com/open-mmlab/mmsegmentation/blob/master/docs/get_started.md#installation) for installation and dataset preparation.\n\n**Notes:** \nDuring the installation, it is important to:   \n* Install MMSegmentation in dev mode:\n```\ngit clone https://github.com/open-mmlab/mmsegmentation.git\ncd mmsegmentation\npip install -e .\n```\n* Copy the *mmcv_custom* and *mmseg* folders into the *mmsegmentation* folder\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Our training and test datasets are composed of tiles prepared from IGN open data. Each tile has a 1000x1000 resolution representing a 500m x 500m footprint (the resolution is 50cm per pixel). \nWe mainly used data from the Hautes-Alpes department, and we took spatially spaced data to have as much diversity as possible and to limit the area without information (unfortunately, some places lack information).\n\nThe file structure of the dataset is as follows:\n```none\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 ign\n\u2502   \u2502   \u251c\u2500\u2500 annotations\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 training\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 xxx.png\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 yyy.png\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 zzz.png\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 validation\n\u2502   \u2502   \u251c\u2500\u2500 images\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 training\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 xxx.png\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 yyy.png\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 zzz.png\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 validation\n\n```\nThe dataset is available on download [here](https://drive.google.com/file/d/1y73mUPzS5Hhq1RjPXc9bxch-Nv6HlJem/view?usp=sharing).\n\n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8405210537621255
      ],
      "excerpt": "* Sparse forest \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8405210537621255
      ],
      "excerpt": "* Sparse forest => 1.31237 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8314054868226033
      ],
      "excerpt": "The pre-trained model (i.e. checkpoint file) for satellite image segmentation is available for download here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8997864420267445
      ],
      "excerpt": "python tools/test.py <CONFIG_FILE> <SEG_CHECKPOINT_FILE> --eval mIoU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9257013285640829
      ],
      "excerpt": "python tools/test.py configs/swin/config_upernet_swin_large_patch4_window12_384x384_60k_ign.py checkpoints/ign_60k_swin_large_patch4_window12_384.pth --eval mIoU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322140700248297
      ],
      "excerpt": "python tools/test.py configs/swin/config_upernet_swin_large_patch4_window12_384x384_60k_ign.py checkpoints/ign_60k_swin_large_patch4_window12_384.pth --show \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8783324667559961
      ],
      "excerpt": "To train with pre-trained models, run: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9229478859365582
      ],
      "excerpt": "python tools/train.py <CONFIG_FILE> --options model.pretrained=<PRETRAIN_MODEL> [model.backbone.use_checkpoint=True] [other optional arguments] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.832840754698844
      ],
      "excerpt": "tools/dist_train.sh <CONFIG_FILE> <GPU_NUM> --options model.pretrained=<PRETRAIN_MODEL> [model.backbone.use_checkpoint=True] [other optional arguments]  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8489601431734908,
        0.9543296382907952
      ],
      "excerpt": "Example on the Ampli ANR project with the ImageNet-22K pretrained model (available here) : \npython tools/train.py configs/swin/config_upernet_swin_large_patch4_window12_384x384_60k_ign.py --options model.pretrained=\"./model/swin_large_patch4_window12_384_22k.pth\" \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/koechslin/Swin-Transformer-Semantic-Segmentation/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'Copyright 2020 The MMSegmentation Authors. All rights reserved.\\n\\n                                 Apache License\\n                           Version 2.0, January 2004\\n                        http://www.apache.org/licenses/\\n\\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\\n\\n   1. Definitions.\\n\\n      \"License\" shall mean the terms and conditions for use, reproduction,\\n      and distribution as defined by Sections 1 through 9 of this document.\\n\\n      \"Licensor\" shall mean the copyright owner or entity authorized by\\n      the copyright owner that is granting the License.\\n\\n      \"Legal Entity\" shall mean the union of the acting entity and all\\n      other entities that control, are controlled by, or are under common\\n      control with that entity. For the purposes of this definition,\\n      \"control\" means (i) the power, direct or indirect, to cause the\\n      direction or management of such entity, whether by contract or\\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\\n      outstanding shares, or (iii) beneficial ownership of such entity.\\n\\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\\n      exercising permissions granted by this License.\\n\\n      \"Source\" form shall mean the preferred form for making modifications,\\n      including but not limited to software source code, documentation\\n      source, and configuration files.\\n\\n      \"Object\" form shall mean any form resulting from mechanical\\n      transformation or translation of a Source form, including but\\n      not limited to compiled object code, generated documentation,\\n      and conversions to other media types.\\n\\n      \"Work\" shall mean the work of authorship, whether in Source or\\n      Object form, made available under the License, as indicated by a\\n      copyright notice that is included in or attached to the work\\n      (an example is provided in the Appendix below).\\n\\n      \"Derivative Works\" shall mean any work, whether in Source or Object\\n      form, that is based on (or derived from) the Work and for which the\\n      editorial revisions, annotations, elaborations, or other modifications\\n      represent, as a whole, an original work of authorship. For the purposes\\n      of this License, Derivative Works shall not include works that remain\\n      separable from, or merely link (or bind by name) to the interfaces of,\\n      the Work and Derivative Works thereof.\\n\\n      \"Contribution\" shall mean any work of authorship, including\\n      the original version of the Work and any modifications or additions\\n      to that Work or Derivative Works thereof, that is intentionally\\n      submitted to Licensor for inclusion in the Work by the copyright owner\\n      or by an individual or Legal Entity authorized to submit on behalf of\\n      the copyright owner. For the purposes of this definition, \"submitted\"\\n      means any form of electronic, verbal, or written communication sent\\n      to the Licensor or its representatives, including but not limited to\\n      communication on electronic mailing lists, source code control systems,\\n      and issue tracking systems that are managed by, or on behalf of, the\\n      Licensor for the purpose of discussing and improving the Work, but\\n      excluding communication that is conspicuously marked or otherwise\\n      designated in writing by the copyright owner as \"Not a Contribution.\"\\n\\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\\n      on behalf of whom a Contribution has been received by Licensor and\\n      subsequently incorporated within the Work.\\n\\n   2. Grant of Copyright License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      copyright license to reproduce, prepare Derivative Works of,\\n      publicly display, publicly perform, sublicense, and distribute the\\n      Work and such Derivative Works in Source or Object form.\\n\\n   3. Grant of Patent License. Subject to the terms and conditions of\\n      this License, each Contributor hereby grants to You a perpetual,\\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\\n      (except as stated in this section) patent license to make, have made,\\n      use, offer to sell, sell, import, and otherwise transfer the Work,\\n      where such license applies only to those patent claims licensable\\n      by such Contributor that are necessarily infringed by their\\n      Contribution(s) alone or by combination of their Contribution(s)\\n      with the Work to which such Contribution(s) was submitted. If You\\n      institute patent litigation against any entity (including a\\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\\n      or a Contribution incorporated within the Work constitutes direct\\n      or contributory patent infringement, then any patent licenses\\n      granted to You under this License for that Work shall terminate\\n      as of the date such litigation is filed.\\n\\n   4. Redistribution. You may reproduce and distribute copies of the\\n      Work or Derivative Works thereof in any medium, with or without\\n      modifications, and in Source or Object form, provided that You\\n      meet the following conditions:\\n\\n      (a) You must give any other recipients of the Work or\\n          Derivative Works a copy of this License; and\\n\\n      (b) You must cause any modified files to carry prominent notices\\n          stating that You changed the files; and\\n\\n      (c) You must retain, in the Source form of any Derivative Works\\n          that You distribute, all copyright, patent, trademark, and\\n          attribution notices from the Source form of the Work,\\n          excluding those notices that do not pertain to any part of\\n          the Derivative Works; and\\n\\n      (d) If the Work includes a \"NOTICE\" text file as part of its\\n          distribution, then any Derivative Works that You distribute must\\n          include a readable copy of the attribution notices contained\\n          within such NOTICE file, excluding those notices that do not\\n          pertain to any part of the Derivative Works, in at least one\\n          of the following places: within a NOTICE text file distributed\\n          as part of the Derivative Works; within the Source form or\\n          documentation, if provided along with the Derivative Works; or,\\n          within a display generated by the Derivative Works, if and\\n          wherever such third-party notices normally appear. The contents\\n          of the NOTICE file are for informational purposes only and\\n          do not modify the License. You may add Your own attribution\\n          notices within Derivative Works that You distribute, alongside\\n          or as an addendum to the NOTICE text from the Work, provided\\n          that such additional attribution notices cannot be construed\\n          as modifying the License.\\n\\n      You may add Your own copyright statement to Your modifications and\\n      may provide additional or different license terms and conditions\\n      for use, reproduction, or distribution of Your modifications, or\\n      for any such Derivative Works as a whole, provided Your use,\\n      reproduction, and distribution of the Work otherwise complies with\\n      the conditions stated in this License.\\n\\n   5. Submission of Contributions. Unless You explicitly state otherwise,\\n      any Contribution intentionally submitted for inclusion in the Work\\n      by You to the Licensor shall be under the terms and conditions of\\n      this License, without any additional terms or conditions.\\n      Notwithstanding the above, nothing herein shall supersede or modify\\n      the terms of any separate license agreement you may have executed\\n      with Licensor regarding such Contributions.\\n\\n   6. Trademarks. This License does not grant permission to use the trade\\n      names, trademarks, service marks, or product names of the Licensor,\\n      except as required for reasonable and customary use in describing the\\n      origin of the Work and reproducing the content of the NOTICE file.\\n\\n   7. Disclaimer of Warranty. Unless required by applicable law or\\n      agreed to in writing, Licensor provides the Work (and each\\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\\n      implied, including, without limitation, any warranties or conditions\\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\\n      PARTICULAR PURPOSE. You are solely responsible for determining the\\n      appropriateness of using or redistributing the Work and assume any\\n      risks associated with Your exercise of permissions under this License.\\n\\n   8. Limitation of Liability. In no event and under no legal theory,\\n      whether in tort (including negligence), contract, or otherwise,\\n      unless required by applicable law (such as deliberate and grossly\\n      negligent acts) or agreed to in writing, shall any Contributor be\\n      liable to You for damages, including any direct, indirect, special,\\n      incidental, or consequential damages of any character arising as a\\n      result of this License or out of the use or inability to use the\\n      Work (including but not limited to damages for loss of goodwill,\\n      work stoppage, computer failure or malfunction, or any and all\\n      other commercial damages or losses), even if such Contributor\\n      has been advised of the possibility of such damages.\\n\\n   9. Accepting Warranty or Additional Liability. While redistributing\\n      the Work or Derivative Works thereof, You may choose to offer,\\n      and charge a fee for, acceptance of support, warranty, indemnity,\\n      or other liability obligations and/or rights consistent with this\\n      License. However, in accepting such obligations, You may act only\\n      on Your own behalf and on Your sole responsibility, not on behalf\\n      of any other Contributor, and only if You agree to indemnify,\\n      defend, and hold each Contributor harmless for any liability\\n      incurred by, or claims asserted against, such Contributor by reason\\n      of your accepting any such warranty or additional liability.\\n\\n   END OF TERMS AND CONDITIONS\\n\\n   APPENDIX: How to apply the Apache License to your work.\\n\\n      To apply the Apache License to your work, attach the following\\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\\n      replaced with your own identifying information. (Don\\'t include\\n      the brackets!)  The text should be enclosed in the appropriate\\n      comment syntax for the file format. We also recommend that a\\n      file or class name and description of purpose be included on the\\n      same \"printed page\" as the copyright notice for easier\\n      identification within third-party archives.\\n\\n   Copyright 2020 The MMSegmentation Authors.\\n\\n   Licensed under the Apache License, Version 2.0 (the \"License\");\\n   you may not use this file except in compliance with the License.\\n   You may obtain a copy of the License at\\n\\n       http://www.apache.org/licenses/LICENSE-2.0\\n\\n   Unless required by applicable law or agreed to in writing, software\\n   distributed under the License is distributed on an \"AS IS\" BASIS,\\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n   See the License for the specific language governing permissions and\\n   limitations under the License.\\n\\n\\n   ======================================================================================\\n   Swin-Transformer-Semantic-Segmentation Subcomponents:\\n\\n   The Swin-Transformer-Semantic-Segmentation project contains subcomponents with separate\\n   copyright notices and license terms. Your use of the source code for the these\\n   subcomponents is subject to the terms and conditions of the following licenses.\\n\\n   =======================================================================================\\n   MIT license\\n   =======================================================================================\\n\\n   The following components are provided under an MIT license.\\n\\n   1. swin_transformer.py - For details, mmseg/models/backbones/swin_transformer.py\\n       Copyright (c) 2021 Microsoft\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Swin Transformer for Semantic Segmentation of satellite images",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Swin-Transformer-Semantic-Segmentation",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "koechslin",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/koechslin/Swin-Transformer-Semantic-Segmentation/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Tue, 21 Dec 2021 17:33:40 GMT"
    },
    "technique": "GitHub API"
  }
}