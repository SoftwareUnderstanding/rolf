{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2004.10934\n\nPaper Scaled YOLO v4: https://arxiv.org/abs/2011.08036  use to reproduce results: [ScaledYOLOv4](https://github.com/WongKinYiu/ScaledYOLOv4",
      "https://arxiv.org/abs/2011.08036  use to reproduce results: [ScaledYOLOv4](https://github.com/WongKinYiu/ScaledYOLOv4",
      "https://arxiv.org/abs/2004.10934",
      "https://arxiv.org/abs/2011.08036",
      "https://arxiv.org/abs/2011.08036\n\n----\n\n![modern_gpus](https://user-images.githubusercontent.com/4096485/82835867-f1c62380-9ecd-11ea-9134-1598ed2abc4b.png",
      "https://arxiv.org/abs/2004.10934\n\ntkDNN-TensorRT accelerates YOLOv4 **~2x** times for batch=1 and **3x-4x** times for batch=4.\n\n- tkDNN: https://github.com/ceccocats/tkDNN\n- OpenCV: https://gist.github.com/YashasSamaga/48bdb167303e10f4d07b754888ddbdcf\n\n### GeForce RTX 2080 Ti\n\n| Network Size               | Darknet, FPS (avg",
      "https://arxiv.org/abs/1911.11929"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9977994744046882,
        0.998284958502139
      ],
      "excerpt": "Paper YOLO v4: https://arxiv.org/abs/2004.10934 \nPaper Scaled YOLO v4: https://arxiv.org/abs/2011.08036  use to reproduce results: ScaledYOLOv4 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479
      ],
      "excerpt": "Manual: https://github.com/AlexeyAB/darknet/wiki \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9266797165961973
      ],
      "excerpt": "(neural networks for object detection) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.905514179514406
      ],
      "excerpt": "Youtube video of results \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146894306581498,
        0.877118600674591
      ],
      "excerpt": "Custom object detection \nHow to improve object detection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977994744046882,
        0.9977994744046882
      ],
      "excerpt": " AP50:95 - FPS (Tesla V100) Paper: https://arxiv.org/abs/2011.08036 \n AP50:95 / AP50 - FPS (Tesla V100) Paper: https://arxiv.org/abs/2004.10934 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9105368110547479,
        0.9105368110547479
      ],
      "excerpt": "tkDNN: https://github.com/ceccocats/tkDNN \nOpenCV: https://gist.github.com/YashasSamaga/48bdb167303e10f4d07b754888ddbdcf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9771565324188672
      ],
      "excerpt": "CSPNet: paper and map_fps comparison: https://github.com/WongKinYiu/CrossStagePartialNetworks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9836589059395289
      ],
      "excerpt": "Yolo v3 on MS COCO (Yolo v3 vs RetinaNet) - Figure 3: https://arxiv.org/pdf/1804.02767v1.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.901083715581408
      ],
      "excerpt": "Yolo v2 on Pascal VOC 2012 (comp4): https://hsto.org/files/3a6/fdf/b53/3a6fdfb533f34cee9b52bdd9bb0b19d9.jpg \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8395688303691
      ],
      "excerpt": "in C++: https://github.com/AlexeyAB/Yolo_mark \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8395688303691,
        0.8395688303691,
        0.8778969354790295
      ],
      "excerpt": "in C++: https://github.com/jveitchmichaelis/deeplabel \nin C#: https://github.com/BMW-InnovationLab/BMW-Labeltool-Lite \nDL-Annotator for Windows ($30): url \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Adam123wu/Edge-YOLO",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-04T14:48:05Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-16T11:14:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8981353884016408
      ],
      "excerpt": "For this purpose, we provide the Edge YOLO algorithm in the COCO and KITTI data sets related files, including modified network and structure and weight files. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9634968197276625
      ],
      "excerpt": "More details in articles on medium: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "YOLOv4 model zoo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096653558392452
      ],
      "excerpt": "How to evaluate AP of YOLOv4 on the MS COCO evaluation server \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.865783793959396
      ],
      "excerpt": "Improvements in this repository \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8792609295876371,
        0.8427396809889173
      ],
      "excerpt": "Using also PowerShell \nHow to compile on Linux (using make) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8556303529516746
      ],
      "excerpt": "How to mark bounded boxes of objects and create annotation files \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189301825894285
      ],
      "excerpt": "Get any .avi/.mp4 video file (preferably not more than 1920x1080 to avoid bottlenecks in CPU performance) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Edge YOLO paper",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Adam123wu/Edge-YOLO_algorithm/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 23:04:16 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Adam123wu/Edge-YOLO/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Adam123wu/Edge-YOLO",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/json_mjpeg_streams.sh",
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/image_yolov3.sh",
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/image_yolov4.sh",
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/net_cam_v4.sh",
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/net_cam_v3.sh",
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/video_yolov4.sh",
      "https://raw.githubusercontent.com/Adam123wu/Edge-YOLO_algorithm/main/video_yolov3.sh"
    ],
    "technique": "File Exploration"
  },
  "identifier": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://zenodo.org/badge/latestdoi/75388965",
      "technique": "Regular expression"
    }
  ],
  "installation": [
    {
      "confidence": [
        0.9140753650895566
      ],
      "excerpt": "Manual: https://github.com/AlexeyAB/darknet/wiki \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.967061619977558
      ],
      "excerpt": "Requirements (and how to install dependencies) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9752652209072148
      ],
      "excerpt": "Requirements for Windows, Linux and macOS \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9560992275845521
      ],
      "excerpt": "How to compile on Linux/macOS (using CMake) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9543904254215098,
        0.9455860062817398,
        0.9430570337450823,
        0.8394967358553171
      ],
      "excerpt": "How to compile on Linux (using make) \nHow to compile on Windows (using CMake) \nHow to compile on Windows (using vcpkg) \nHow to train with multi-GPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8918974083095406,
        0.9218762397266433
      ],
      "excerpt": "tkDNN: https://github.com/ceccocats/tkDNN \nOpenCV: https://gist.github.com/YashasSamaga/48bdb167303e10f4d07b754888ddbdcf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8120216618443424
      ],
      "excerpt": "train  = &lt;replace with your path&gt;/trainvalno5k.txt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9738589915327188
      ],
      "excerpt": "Compile Darknet with GPU=1 CUDNN=1 CUDNN_HALF=1 OPENCV=1 in the Makefile \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8806801276466416,
        0.8806801276466416
      ],
      "excerpt": "in Python: https://github.com/tzutalin/labelImg \nin Python: https://github.com/Cartucho/OpenLabeling \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8194862426406093
      ],
      "excerpt": "in JavaScript: https://github.com/opencv/cvat \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8194439134960743
      ],
      "excerpt": "Download and unzip test-dev2017 dataset from MS COCO server: http://images.cocodataset.org/zips/test2017.zip \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8070516351729637
      ],
      "excerpt": "Create /results/ folder near with ./darknet executable file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8589570457713529,
        0.8203508525562374
      ],
      "excerpt": "Rename the file  /results/coco_results.json to detections_test-dev2017_yolov4_results.json and compress it to detections_test-dev2017_yolov4_results.zip \nSubmit file detections_test-dev2017_yolov4_results.zip to the MS COCO evaluation server for the test-dev2019 (bbox) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8235207535955358
      ],
      "excerpt": "    ./darknet detector demo cfg/coco.data cfg/yolov4.cfg yolov4.weights test.mp4 -dont_show -ext_output \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8240681772393719
      ],
      "excerpt": "    ./darknet detector demo cfg/coco.data cfg/yolov4.cfg yolov4.weights test.mp4 -benchmark \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Adam123wu/Edge-YOLO/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "PowerShell",
      "CMake",
      "Cuda",
      "C++",
      "Makefile",
      "Shell",
      "Cython"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 JK Jung\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "We have proposed Edge YOLO algorithm and compare this algorithm with other object detection network",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Edge-YOLO",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Adam123wu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Adam123wu/Edge-YOLO/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "Adam123wu",
        "body": "",
        "dateCreated": "2021-08-04T16:40:36Z",
        "datePublished": "2021-08-04T17:08:44Z",
        "html_url": "https://github.com/Adam123wu/Edge-YOLO/releases/tag/3.0",
        "name": "Weights",
        "tag_name": "3.0",
        "tarball_url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/tarball/3.0",
        "url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/releases/47309475",
        "zipball_url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/zipball/3.0"
      },
      {
        "authorType": "User",
        "author_name": "Adam123wu",
        "body": "",
        "dateCreated": "2021-08-04T15:34:33Z",
        "datePublished": "2021-08-04T16:36:50Z",
        "html_url": "https://github.com/Adam123wu/Edge-YOLO/releases/tag/2.0",
        "name": "Weights",
        "tag_name": "2.0",
        "tarball_url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/tarball/2.0",
        "url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/releases/47307192",
        "zipball_url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/zipball/2.0"
      },
      {
        "authorType": "User",
        "author_name": "Adam123wu",
        "body": "",
        "dateCreated": "2021-08-04T15:34:33Z",
        "datePublished": "2021-08-04T15:51:19Z",
        "html_url": "https://github.com/Adam123wu/Edge-YOLO/releases/tag/1.0",
        "name": "Edge YOLO ",
        "tag_name": "1.0",
        "tarball_url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/tarball/1.0",
        "url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/releases/47304280",
        "zipball_url": "https://api.github.com/repos/Adam123wu/Edge-YOLO/zipball/1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Mon, 27 Dec 2021 23:04:16 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- on Linux\n  - using `build.sh` or\n  - build `darknet` using `cmake` or\n  - set `LIBSO=1` in the `Makefile` and do `make`\n- on Windows\n  - using `build.ps1` or\n  - build `darknet` using `cmake` or\n  - compile `build\\darknet\\yolo_cpp_dll.sln` solution or `build\\darknet\\yolo_cpp_dll_no_gpu.sln` solution\n\nThere are 2 APIs:\n\n- C API: https://github.com/AlexeyAB/darknet/blob/master/include/darknet.h\n  - Python examples using the C API:\n    - https://github.com/AlexeyAB/darknet/blob/master/darknet.py\n    - https://github.com/AlexeyAB/darknet/blob/master/darknet_video.py\n\n- C++ API: https://github.com/AlexeyAB/darknet/blob/master/include/yolo_v2_class.hpp\n  - C++ example that uses C++ API: https://github.com/AlexeyAB/darknet/blob/master/src/yolo_console_dll.cpp\n\n----\n\n1. To compile Yolo as C++ DLL-file `yolo_cpp_dll.dll` - open the solution `build\\darknet\\yolo_cpp_dll.sln`, set **x64** and **Release**, and do the: Build -> Build yolo_cpp_dll\n    - You should have installed **CUDA 10.2**\n    - To use cuDNN do: (right click on project) -> properties -> C/C++ -> Preprocessor -> Preprocessor Definitions, and add at the beginning of line: `CUDNN;`\n\n2. To use Yolo as DLL-file in your C++ console application - open the solution `build\\darknet\\yolo_console_dll.sln`, set **x64** and **Release**, and do the: Build -> Build yolo_console_dll\n\n    - you can run your console application from Windows Explorer `build\\darknet\\x64\\yolo_console_dll.exe`\n    **use this command**: `yolo_console_dll.exe data/coco.names yolov4.cfg yolov4.weights test.mp4`\n\n    - after launching your console application and entering the image file name - you will see info for each object:\n    `<obj_id> <left_x> <top_y> <width> <height> <probability>`\n    - to use simple OpenCV-GUI you should uncomment line `//#define OPENCV` in `yolo_console_dll.cpp`-file: [link](https://github.com/AlexeyAB/darknet/blob/a6cbaeecde40f91ddc3ea09aa26a03ab5bbf8ba8/src/yolo_console_dll.cpp#L5)\n    - you can see source code of simple example for detection on the video file: [link](https://github.com/AlexeyAB/darknet/blob/ab1c5f9e57b4175f29a6ef39e7e68987d3e98704/src/yolo_console_dll.cpp#L75)\n\n`yolo_cpp_dll.dll`-API: [link](https://github.com/AlexeyAB/darknet/blob/master/src/yolo_v2_class.hpp#L42)\n\n```cpp\nstruct bbox_t {\n    unsigned int x, y, w, h;    // (x,y) - top-left corner, (w, h) - width & height of bounded box\n    float prob;                    // confidence - probability that the object was found correctly\n    unsigned int obj_id;        // class of object - from range [0, classes-1]\n    unsigned int track_id;        // tracking id for video (0 - untracked, 1 - inf - tracked object)\n    unsigned int frames_counter;// counter of frames on which the object was detected\n};\n\nclass Detector {\npublic:\n        Detector(std::string cfg_filename, std::string weight_filename, int gpu_id = 0);\n        ~Detector();\n\n        std::vector<bbox_t> detect(std::string image_filename, float thresh = 0.2, bool use_mean = false);\n        std::vector<bbox_t> detect(image_t img, float thresh = 0.2, bool use_mean = false);\n        static image_t load_image(std::string image_filename);\n        static void free_image(image_t m);\n\n#:ifdef OPENCV\n        std::vector<bbox_t> detect(cv::Mat mat, float thresh = 0.2, bool use_mean = false);\n        std::shared_ptr<image_t> mat_to_image_resize(cv::Mat mat) const;\n#:endif\n};\n```\n",
      "technique": "Header extraction"
    }
  ]
}