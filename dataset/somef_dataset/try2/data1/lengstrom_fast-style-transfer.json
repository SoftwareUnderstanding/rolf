{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1508.06576",
      "https://arxiv.org/abs/1607.08022"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n  @misc{engstrom2016faststyletransfer,\n    author = {Logan Engstrom},\n    title = {Fast Style Transfer},\n    year = {2016},\n    howpublished = {\\url{https://github.com/lengstrom/fast-style-transfer/}},\n    note = {commit xxxxxxx}\n  }\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "YAML 1.2\n\nauthors: \n  -\n    family-names: Engstrom\n    given-names: Logan\ncff-version: \"1.1.0\"\ndate-released: 2016-10-31\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/lengstrom/fast-style-transfer\"\ntitle: \"Fast Style Transfer\"\nversion: \"1.0\"\n...",
      "technique": "File Exploration"
    },
    {
      "confidence": [
        0.9647048099704295
      ],
      "excerpt": "Please consider sponsoring my work on this project! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9337930557306444
      ],
      "excerpt": "Some readme/docs formatting was borrowed from Justin Johnson's Fast Neural Style \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lengstrom/fast-style-transfer",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-07-21T02:59:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T21:12:28Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9148076210200844
      ],
      "excerpt": "It takes 100ms on a 2015 Titan X to style the MIT Stata Center (1024\u00d7680) like Udnie, by Francis Picabia. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9921845223902476,
        0.9225042122031342,
        0.9580970697718573
      ],
      "excerpt": "Our implementation is based off of a combination of Gatys' A Neural Algorithm of Artistic Style, Johnson's Perceptual Losses for Real-Time Style Transfer and Super-Resolution, and Ulyanov's Instance Normalization. \nPlease consider sponsoring my work on this project! \nHere we transformed every frame in a video, then combined the results. Click to go to the full demo on YouTube! The style here is Udnie, as above. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8804547138380784,
        0.9153192557215805
      ],
      "excerpt": "See how to generate these videos here! \nWe added styles from various paintings to a photo of Chicago. Click on thumbnails to see full applied style images. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9823958330142484
      ],
      "excerpt": "Our implementation uses TensorFlow to train a fast style transfer network. We use roughly the same transformation network as described in Johnson, except that batch normalization is replaced with Ulyanov's instance normalization, and the scaling/offset of the output tanh layer is slightly different. We use a loss function close to the one described in Gatys, using VGG19 instead of VGG16 and typically using \"shallower\" layers than in Johnson's implementation (e.g. we use relu1_1 rather than relu1_2). Empirically, this results in larger scale style features in transformations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9219661454609418,
        0.9372135583036753
      ],
      "excerpt": "This project could not have happened without the advice (and GPU access) given by Anish Athalye.  \nThe project also borrowed some code from Anish's Neural Style \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9682534527077438
      ],
      "excerpt": "The image of the Stata Center at the very beginning of the README was taken by Juan Paulo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "TensorFlow CNN for fast style transfer \u26a1\ud83d\udda5\ud83c\udfa8\ud83d\uddbc",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lengstrom/fast-style-transfer/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2575,
      "date": "Sat, 25 Dec 2021 02:03:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lengstrom/fast-style-transfer/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "lengstrom/fast-style-transfer",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/lengstrom/fast-style-transfer/master/setup.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Tested on\n| Spec                        |                                                             |\n|-----------------------------|-------------------------------------------------------------|\n| Operating System            | Windows 10 Home                                             |\n| GPU                         | Nvidia GTX 2080 TI                                          |\n| CUDA Version                | 11.0                                                        |\n| Driver Version              | 445.75                                                      |\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9800032334551065,
        0.9867377260403754,
        0.9963347796239227
      ],
      "excerpt": "conda create -n tf-gpu tensorflow-gpu=2.1.0 \nconda activate tf-gpu \nconda install jupyterlab \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9941427418977423,
        0.999746712887969
      ],
      "excerpt": "Run the following command in the notebook or just conda install the package: \n!pip install moviepy==1.0.2 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8483597430771004
      ],
      "excerpt": "  --device /gpu:0 \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9372294343688237,
        0.9320198022179534,
        0.9535626949388951
      ],
      "excerpt": "<img src = 'examples/style/udnie.jpg' height = '246px'> \n<img src = 'examples/content/stata.jpg' height = '246px'> \n<a href = 'examples/results/stata_udnie.jpg'><img src = 'examples/results/stata_udnie_header.jpg' width = '627px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8500798636546332
      ],
      "excerpt": "        <img src = 'examples/results/fox_udnie.gif' alt = 'Stylized fox video. Click to go to YouTube!' width = '800px' height = '400px'> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9320198022179534
      ],
      "excerpt": "<img src = 'examples/content/chicago.jpg' height=\"200px\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8868200507882779,
        0.9538115313929627,
        0.9538115313929627,
        0.9518888967116772
      ],
      "excerpt": "<a href = 'examples/style/wave.jpg'><img src = 'examples/thumbs/wave.jpg' height = '200px'></a> \n<img src = 'examples/results/chicago_wave.jpg' height = '200px'> \n<img src = 'examples/results/chicago_udnie.jpg' height = '200px'> \n<a href = 'examples/style/udnie.jpg'><img src = 'examples/thumbs/udnie.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9518888967116772,
        0.9538115313929627,
        0.9538115313929627,
        0.9518888967116772
      ],
      "excerpt": "<a href = 'examples/style/rain_princess.jpg'><img src = 'examples/thumbs/rain_princess.jpg' height = '200px'></a> \n<img src = 'examples/results/chicago_rain_princess.jpg' height = '200px'> \n<img src = 'examples/results/chicago_la_muse.jpg' height = '200px'> \n<a href = 'examples/style/la_muse.jpg'><img src = 'examples/thumbs/la_muse.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9518888967116772,
        0.9538115313929627,
        0.9538115313929627,
        0.9518888967116772
      ],
      "excerpt": "<a href = 'examples/style/the_shipwreck_of_the_minotaur.jpg'><img src = 'examples/thumbs/the_shipwreck_of_the_minotaur.jpg' height = '200px'></a> \n<img src = 'examples/results/chicago_wreck.jpg' height = '200px'> \n<img src = 'examples/results/chicago_the_scream.jpg' height = '200px'> \n<a href = 'examples/style/the_scream.jpg'><img src = 'examples/thumbs/the_scream.jpg' height = '200px'></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8144953339993356
      ],
      "excerpt": "Use style.py to train a new style transfer network. Run python style.py to view all the possible parameters. Training takes 4-6 hours on a Maxwell Titan X. More detailed documentation here. Before you run this, you should run setup.sh. Example usage: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9039049060874407,
        0.8267049346693917
      ],
      "excerpt": "  --test path/to/test/img.jpg \\ \n  --test-dir path/to/test/dir \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8664299442198513,
        0.8656644474584813,
        0.8010117020001578
      ],
      "excerpt": "Use evaluate.py to evaluate a style transfer network. Run python evaluate.py to view all the possible parameters. Evaluation takes 100 ms per frame (when batch size is 1) on a Maxwell Titan X. More detailed documentation here. Takes several seconds per frame on a CPU. Models for evaluation are located here. Example usage: \npython evaluate.py --checkpoint path/to/style/model.ckpt \\ \n  --in-path dir/of/test/imgs/ \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.839329923502391,
        0.8718206193108425
      ],
      "excerpt": "Use transform_video.py to transfer style into a video. Run python transform_video.py to view all the possible parameters. Requires ffmpeg. More detailed documentation here. Example usage: \npython transform_video.py --in-path path/to/input/vid.mp4 \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/lengstrom/fast-style-transfer/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Fast Style Transfer in [TensorFlow](https://github.com/tensorflow/tensorflow)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "fast-style-transfer",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "lengstrom",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/lengstrom/fast-style-transfer/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "You will need the following to run the above:\n- TensorFlow 0.11.0\n- Python 2.7.9, Pillow 3.4.2, scipy 0.18.1, numpy 1.11.2\n- If you want to train (and don't want to wait for 4 months):\n  - A decent GPU\n  - All the required NVIDIA software to run TF on a GPU (cuda, etc)\n- ffmpeg 3.1.3 if you want to stylize video\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10249,
      "date": "Sat, 25 Dec 2021 02:03:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "style-transfer",
      "neural-style",
      "neural-networks",
      "deep-learning"
    ],
    "technique": "GitHub API"
  }
}