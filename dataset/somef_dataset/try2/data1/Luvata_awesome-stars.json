{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1911.04252\n- [tiangolo/fastapi](https://github.com/tiangolo/fastapi",
      "https://arxiv.org/abs/1308.0850",
      "https://arxiv.org/abs/1703.05175"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9829021358516454
      ],
      "excerpt": "flashlight/wav2letter - Facebook AI Research's Automatic Speech Recognition Toolkit \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959546310417776,
        0.8444342525991423
      ],
      "excerpt": "pbcquoc/crnn - Handwritten recognition, vietnamese \nbigartm/bigartm - Fast topic modeling platform \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9485279931283968
      ],
      "excerpt": "fpt-corp/DiRa - DiRa - Digital Race Platform : Open Source platform for driverless car \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9927096067288144,
        0.9887655247896298
      ],
      "excerpt": "logseq/logseq - A privacy-first, open-source platform for knowledge management and collaboration. Desktop app download link: https://github.com/logseq/logseq/releases, roadmap: https://trello.com/b/8txSM12G/roadmap \nathensresearch/athens - Free self-hosted desktop app: https://github.com/athensresearch/athens/releases; Try the demo at https://athensresearch.github.io/athens; Docs viewable at https://athensresearch.github.io/docs/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8767636688352547
      ],
      "excerpt": "org-roam/org-roam - Rudimentary Roam replica with Org-mode \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8420766622915877
      ],
      "excerpt": "lennes/spect - SpeCT - Speech Corpus Toolkit for Praat. Documentation: https://lennes.github.io/spect/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8381865190654136,
        0.9526524422176019
      ],
      "excerpt": "edwardtufte/tufte-css - Style your webpage like Edward Tufte\u2019s handouts. \nethen8181/machine-learning - :earth_americas: machine learning tutorials (mainly in Python3) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9663192316647929
      ],
      "excerpt": "chiphuyen/machine-learning-systems-design - A booklet on machine learning systems design with exercises \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9330255794022947
      ],
      "excerpt": "informramiz/opencv-face-recognition-python - Face Recognition using OpenCV and Python. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9870694408540736
      ],
      "excerpt": "vncorenlp/VnCoreNLP - A Vietnamese natural language processing toolkit (NAACL 2018) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.979828451272839
      ],
      "excerpt": "amitness/papers-with-video - A browser extension that adds video explanations to research papers on arxiv.org \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9146894306581498
      ],
      "excerpt": "scutan90/DeepLearning-500-questions - \u6df1\u5ea6\u5b66\u4e60500\u95ee\uff0c\u4ee5\u95ee\u7b54\u5f62\u5f0f\u5bf9\u5e38\u7528\u7684\u6982\u7387\u77e5\u8bc6\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u7b49\u70ed\u70b9\u95ee\u9898\u8fdb\u884c\u9610\u8ff0\uff0c\u4ee5\u5e2e\u52a9\u81ea\u5df1\u53ca\u6709\u9700\u8981\u7684\u8bfb\u8005\u3002 \u5168\u4e66\u5206\u4e3a18\u4e2a\u7ae0\u8282\uff0c50\u4f59\u4e07\u5b57\u3002\u7531\u4e8e\u6c34\u5e73\u6709\u9650\uff0c\u4e66\u4e2d\u4e0d\u59a5\u4e4b\u5904\u6073\u8bf7\u5e7f\u5927\u8bfb\u8005\u6279\u8bc4\u6307\u6b63\u3002   \u672a\u5b8c\u5f85\u7eed............ \u5982\u6709\u610f\u5408\u4f5c\uff0c\u8054\u7cfbscutjy2015@163.com                     \u7248\u6743\u6240\u6709\uff0c\u8fdd\u6743\u5fc5\u7a76       Tan 2018.06 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9760414822802655
      ],
      "excerpt": "freeCodeCamp/freeCodeCamp - freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8955886365383559
      ],
      "excerpt": "undertheseanlp/knowledge - Knowledge Base \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8946789856685954
      ],
      "excerpt": "yandex-research/DeDLOC - Official code for \"Distributed Deep Learning in Open Collaborations\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9026781722031945
      ],
      "excerpt": "probml/pml-book - \"Probabilistic Machine Learning\" - a book series by Kevin Murphy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9195926162616405
      ],
      "excerpt": "amueller/COMS4995-s19 - COMS W4995 Applied Machine Learning - Spring 19 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9195926162616405
      ],
      "excerpt": "tiepvupsu/ebookMLCB - ebook Machine Learning c\u01a1 b\u1ea3n \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9956178305224509
      ],
      "excerpt": "clovaai/deep-text-recognition-benchmark - Text recognition (optical character recognition) with deep learning methods. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9934895290360828
      ],
      "excerpt": "bangoc123/learn-machine-learning-in-two-months - Nh\u1eefng ki\u1ebfn th\u1ee9c c\u1ea7n thi\u1ebft \u0111\u1ec3 h\u1ecdc t\u1ed1t Machine Learning trong v\u00f2ng 2 th\u00e1ng. Essential Knowledge for learning Machine Learning in two months. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9834329163643761
      ],
      "excerpt": "thucdx/ml-uw-coursera - 4-course machine learning specialization by University Of Washington on Coursera \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8890179986378027
      ],
      "excerpt": "google-research/google-research - Google Research \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.983071483006222
      ],
      "excerpt": "krasserm/face-recognition - Deep face recognition with Keras, Dlib and OpenCV \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9214009868774516
      ],
      "excerpt": "tiepvupsu/ebookML_src - Source code in ebook Machine Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9354525550956688
      ],
      "excerpt": "tiepvupsu/tiepvupsu.github.io - My Machine Learning blog \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9368984258695385
      ],
      "excerpt": "diegocavalca/machine-learning - Experiments, algorithms and reports in machine learning reseach. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.868371346575934
      ],
      "excerpt": "rasbt/python-machine-learning-book - The \"Python Machine Learning (1st edition)\"  book code repository and info resource \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9776693391348151
      ],
      "excerpt": "vietai/ASR - End-to-End Vietnamese Speech Recognition using wav2vec 2.0 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9844731587620886,
        0.8807121407445627
      ],
      "excerpt": "rmcelreath/statrethinking_winter2019 - Statistical Rethinking course at MPI-EVA from Dec 2018 through Feb 2019 \nluspr/awesome-ml-courses - Awesome free machine learning and AI courses with video lectures. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9885427279391034,
        0.9999964988529554,
        0.8536985174804451
      ],
      "excerpt": "afshinea/stanford-cs-229-machine-learning - VIP cheatsheets for Stanford's CS 229 Machine Learning \nvisual-ml-notes/visual-machine-learning-notes - Machine Learning Conference & Summer School Notes.  \ud83e\udd84 \nMachine-Learning-Tokyo/Interactive_Tools - Interactive Tools for Machine Learning, Deep Learning and Math \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9819107034251252
      ],
      "excerpt": "paperswithcode/releasing-research-code - Tips for releasing research code in Machine Learning (with official NeurIPS 2020 recommendations) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9586038946453274
      ],
      "excerpt": "yassouali/ML-paper-notes - :notebook: Notes and summaries of various ML, Computer Vision & NLP papers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9770003623405885
      ],
      "excerpt": "Developer-Y/cs-video-courses - List of Computer Science courses with video lectures. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9952281854050119
      ],
      "excerpt": "jwasham/coding-interview-university - A complete computer science study plan to become a software engineer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9306565125725889
      ],
      "excerpt": "deepmind/alphafold - Open source code for AlphaFold. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9798769622455115
      ],
      "excerpt": "dreamquark-ai/tabnet - PyTorch implementation of TabNet paper : https://arxiv.org/pdf/1908.07442.pdf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8944178096468923
      ],
      "excerpt": "carolineec/EverybodyDanceNow - Motion Retargeting Video Subjects \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9704596366056615
      ],
      "excerpt": "arxiv-vanity/arxiv-vanity - Renders papers from arXiv as responsive web pages so you don't have to squint at a PDF. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9744690116628929
      ],
      "excerpt": "kdexd/virtex - [CVPR 2021] VirTex: Learning Visual Representations from Textual Annotations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9958633378630758
      ],
      "excerpt": "kornia/kornia - Open Source Differentiable Computer Vision Library \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8573139947628987
      ],
      "excerpt": "SpaceNetChallenge/RoadDetector - Winning Solutions from SpaceNet Road Detection and Routing Challenge \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.992904935974017
      ],
      "excerpt": "doccano/doccano - Open source annotation tool for machine learning practitioners. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9655909402774481
      ],
      "excerpt": "likesiwell/LGM-Net - Tensorflow code for ICML 2019 paper: LGM-Net: Learning to Generate Matching Networks for Few-Shot Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9983465749801326
      ],
      "excerpt": "google-research/noisystudent - Code for Noisy Student Training. https://arxiv.org/abs/1911.04252 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8662895165271487
      ],
      "excerpt": "oscarknagg/few-shot - Repository for few-shot learning machine learning projects \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654671031158477
      ],
      "excerpt": "facebookresearch/LASER - Language-Agnostic SEntence Representations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9082293850028555
      ],
      "excerpt": "allenai/writing-code-for-nlp-research-emnlp2018 - A companion repository for the \"Writing code for NLP Research\" Tutorial at EMNLP 2018 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8778450556104629
      ],
      "excerpt": "deepmipt/DeepPavlov - An open source library for deep learning end-to-end dialog systems and chatbots. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9821584541852468
      ],
      "excerpt": "vikasverma1077/manifold_mixup - Code for reproducing Manifold Mixup results (ICML 2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9470720012098436
      ],
      "excerpt": "Accenture/AmpliGraph - Python library for Representation Learning on Knowledge Graphs https://docs.ampligraph.org \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9668125814684367
      ],
      "excerpt": "facebookresearch/vizseq - An Analysis Toolkit for Natural Language Generation (Translation, Captioning, Summarization, etc.) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9475576180092198
      ],
      "excerpt": "espnet/espnet - End-to-End Speech Processing Toolkit \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9693728057100929
      ],
      "excerpt": "Megvii-CSG/MegReader - A research project for text detection and recognition using PyTorch 1.2. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9759309510148745
      ],
      "excerpt": "Grzego/handwriting-generation - Implementation of handwriting generation with use of recurrent neural networks in tensorflow. Based on Alex Graves paper (https://arxiv.org/abs/1308.0850). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9994838122091214
      ],
      "excerpt": "Zhongdao/Towards-Realtime-MOT - Joint Detection and Embedding for fast multi-object tracking \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9940664286247748
      ],
      "excerpt": "qipeng/golden-retriever - Authors' implementation of EMNLP-IJCNLP 2019 paper \"Answering Complex Open-domain Questions Through Iterative Query Generation\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8088237849875028
      ],
      "excerpt": "zhaohui-yang/LegoNet - A Pytorch implementation of \"LegoNet: Efficient Convolutional Neural Networks with Lego Filters\" (ICML 2019). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9840766244796287
      ],
      "excerpt": "mlflow/mlflow - Open source platform for the machine learning lifecycle \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8722036069694272
      ],
      "excerpt": "iotayo/aivivn-tone - Submission for AIviVN Vietnamese diacritics restoration contest https://www.aivivn.com/contests/3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9986943835409958
      ],
      "excerpt": "NVlabs/DG-Net - Joint Discriminative and Generative Learning for Person Re-identification. CVPR'19 (Oral) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8840467439138965
      ],
      "excerpt": "undertheseanlp/resources - Open Vietnamese NLP Resources \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8899747894666142
      ],
      "excerpt": "amirgholami/anode - [IJCAI'19, NeurIPS'19] Anode: Unconditionally Accurate Memory-Efficient Gradients for Neural ODEs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9190778567224711
      ],
      "excerpt": "facebookresearch/pyrobot - PyRobot: An Open Source Robotics Research Platform \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490817347094312
      ],
      "excerpt": "ElegantGod/SSHA - face detection and alignment \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9869786337154864
      ],
      "excerpt": "nkolkin13/STROTSS - Style Transfer by Relaxed Optimal Transport and Self-Similarity (CVPR 2019) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8617750807416824
      ],
      "excerpt": "LCorleone/Various-Loss-Function-in-Face-Recognition - Keras implementation of various loss functions in face recognition and visualization on Mnist \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9932596056400508
      ],
      "excerpt": "YadiraF/PRNet - Joint 3D Face Reconstruction and Dense Alignment with Position Map Regression Network (ECCV 2018) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9167247287076182
      ],
      "excerpt": "orobix/Prototypical-Networks-for-Few-shot-Learning-PyTorch - Implementation of Prototypical Networks for Few Shot Learning (https://arxiv.org/abs/1703.05175) in Pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.980539671342085
      ],
      "excerpt": "SurrealAI/surreal - Open-Source Distributed Reinforcement Learning Framework by Stanford Vision and Learning Lab \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8664188366553782
      ],
      "excerpt": "hoya012/deep_learning_object_detection - A paper list of object detection using deep learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8370468793265073
      ],
      "excerpt": "trieutuanvnu/Raspberry-Face-Recognition - Use Python and Open CV to recognize multi face and show the name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9999118944536932
      ],
      "excerpt": "citation-style-language/styles - Official repository for Citation Style Language (CSL) citation styles. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9565879918498751
      ],
      "excerpt": "H-M-H/Weylus - Use your tablet as graphic tablet/touch screen on your computer. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9537181110426034
      ],
      "excerpt": "pages-themes/cayman - Cayman is a Jekyll theme for GitHub Pages \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8768594116348547
      ],
      "excerpt": "undertheseanlp/slp3-vietnamese - Speech and Language Processing 3rd edition Vietnamese Translation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8069071296146577
      ],
      "excerpt": "hoppscotch/hoppscotch - \ud83d\udc7d Open source API development ecosystem https://hoppscotch.io \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Luvata/awesome-stars",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-03T10:19:59Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-24T17:50:00Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9071652708825781
      ],
      "excerpt": "A curated list of my GitHub stars!  Generated by starred \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8886470889445123
      ],
      "excerpt": "biovault/nptsne - nptsne is a numpy compatible python binary package that offers a number of APIs for fast tSNE calculation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.903553913145324,
        0.8783903889573137,
        0.9833331521593918
      ],
      "excerpt": "cbovar/ConvNetSharp - Deep Learning in C# \npytorch/xla - Enabling PyTorch on Google TPU \nopenai/triton - Development repository for the Triton language and compiler \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8256055311239135,
        0.8979411005071259
      ],
      "excerpt": "facebookresearch/gtn - Automatic differentiation with weighted finite-state transducers. \nmaxoodf/tgnews - Telegram Data Clustering Contest (Bossy Gnu's submission ) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8837318900894168
      ],
      "excerpt": "triton-inference-server/server - The Triton Inference Server provides an optimized cloud and edge inferencing solution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8372396012058242
      ],
      "excerpt": "VKCOM/YouTokenToMe - Unsupervised text tokenizer focused on computational efficiency \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9561892485039394,
        0.9311773521393961
      ],
      "excerpt": "facebookresearch/faiss - A library for efficient similarity search and clustering of dense vectors. \nthomwolf/Magic-Sand - Magic-Sand is a software for operating an augmented reality sandbox \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9032112492965816
      ],
      "excerpt": "coccoc/coccoc-tokenizer - high performance tokenizer for Vietnamese language \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047
      ],
      "excerpt": "alexandrevicenzi/Flex - The minimalist Pelican theme. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9677340357703778
      ],
      "excerpt": "bigscience-workshop/data_tooling - Tools for managing datasets for governance and training. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9223649164968046,
        0.995707517133326
      ],
      "excerpt": "scotthmurray/d3-book - Code examples for \u201cInteractive Data Visualization for the Web\u201d \nMarcSkovMadsen/awesome-streamlit - The purpose of this project is to share knowledge on how awesome Streamlit is and can be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9072551556757584
      ],
      "excerpt": "mmistakes/minimal-mistakes - :triangular_ruler: Jekyll theme for building a personal site, blog, project documentation, or portfolio. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9629266729186033
      ],
      "excerpt": "twitter/scala_school - Lessons in the Fundamentals of Scala \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8324159925622221
      ],
      "excerpt": "srid/neuron - Future-proof note-taking and publishing based on Zettelkasten \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8402709123505752
      ],
      "excerpt": "jlegewie/zotfile - Zotero plugin to manage your attachments: automatically rename, move, and attach PDFs (or other files) to Zotero items, sync PDFs from your Zotero library to your (mobile) PDF reader (e.g. an iPad, Android tablet, etc.), and extract PDF annotations. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8805188282008986
      ],
      "excerpt": "pytorch/serve - Model Serving on PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9611738883737644
      ],
      "excerpt": "elias-sundqvist/obsidian-annotator - A plugin for reading and annotating PDFs and EPUBs in obsidian. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9060107498395109,
        0.8178418554788324,
        0.962993713231522,
        0.8760078324014255,
        0.9879882100184021,
        0.9136678138248879
      ],
      "excerpt": "GitMurf/roam-highlighter - Chrome highlighter that quickly and easily puts your highlights into Roam format for easy pasting into your notes. \nzotero/zotero - Zotero is a free, easy-to-use tool to help you collect, organize, cite, and share your research sources. \nvictordibia/neuralqa - NeuralQA: A Usable Library for Question Answering on Large Datasets with BERT \nMaggieAppleton/digital-gardeners - Resources, links, projects, and ideas for gardeners tending their digital notes on the public interwebs \nrichardanaya/tour_of_rust - A tour of rust's language features \ncodota/jupyter-tabnine - Autocompletion with Deep Learning on Jupyter Notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9248098350550075
      ],
      "excerpt": "leaflet-extras/leaflet-providers - An extension to Leaflet that contains configurations for various free tile providers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8554469695829748
      ],
      "excerpt": "hexojs/hexo - A fast, simple & powerful blog framework, powered by Node.js. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8282183003312108
      ],
      "excerpt": "yangshun/tech-interview-handbook - \ud83d\udcaf Curated interview preparation materials for busy engineers \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9308645520823717,
        0.980590203325481,
        0.918153201403636,
        0.8664279012540169,
        0.8700616433707814
      ],
      "excerpt": "spark-notebook/spark-notebook - Interactive and Reactive Data Science using Scala and Spark. \npbinggeser/snake-ai - Solving the game of Snake with evolution \nhereismari/playing-games-with-tfjs - Using DeepLearnJs to play games just using your camera \nnaptha/tesseract.js - Pure Javascript OCR for more than 100 Languages \ud83d\udcd6\ud83c\udf89\ud83d\udda5 \nfreeCodeCamp/freeCodeCamp - freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8573894803443407
      ],
      "excerpt": "bencbartlett/3D-printed-mirror-array - 3D-printable hexagonal mirror array capable of reflecting sunlight into arbitrary patterns \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8035569079159671
      ],
      "excerpt": "rmokady/CLIP_prefix_caption - Simple image captioning model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9275009682264216
      ],
      "excerpt": "yandex-research/DeDLOC - Official code for \"Distributed Deep Learning in Open Collaborations\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9092878636042191
      ],
      "excerpt": "szagoruyko/pytorchviz - A small package to create visualizations of PyTorch execution graphs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9591465570286326
      ],
      "excerpt": "NielsRogge/Transformers-Tutorials - This repository contains demos I made with the Transformers library by HuggingFace. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8503829381739865,
        0.8568710522499383,
        0.8549407329002715,
        0.9497399468507144
      ],
      "excerpt": "Atcold/NYU-DLSP21 - NYU Deep Learning Spring 2021 \nmarkovka17/dla - Deep learning for audio processing \nfastai/fastdot - A simple wrapper over pydot and graphviz which fixes some sharp edges \nischlag/fast-weight-transformers - Official code repository of the paper  Linear Transformers Are Secretly Fast Weight Programmers. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787011468382627
      ],
      "excerpt": "bentrevett/pytorch-seq2seq - Tutorials on implementing a few sequence-to-sequence (seq2seq) models with PyTorch and TorchText. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9338985889865973
      ],
      "excerpt": "ChakriCherukuri/mlviz - Visualizations of machine learning models and algorithms \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8675152720494187
      ],
      "excerpt": "drfeinberg/Parselmouth-Guides - These are Jupyter Notebooks to help guide people to learn how to use Praat-Parselmouth \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8412570471164439
      ],
      "excerpt": "karpathy/minGPT - A minimal PyTorch re-implementation of the OpenAI GPT (Generative Pretrained Transformer) training \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9410694132912277,
        0.9784365077683008
      ],
      "excerpt": "deepmind/deepmind-research - This repository contains implementations and illustrative code to accompany DeepMind publications \nscikit-learn-contrib/hdbscan - A high performance implementation of HDBSCAN clustering. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8447204426755276
      ],
      "excerpt": "mozilla/TTS - :robot: :speech_balloon: Deep learning for Text to Speech  (Discussion forum: https://discourse.mozilla.org/c/tts) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8274597634140965
      ],
      "excerpt": "AliaksandrSiarohin/first-order-model - This repository contains the source code for the paper First Order Motion Model for Image Animation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9626786455927727,
        0.9257589079698679
      ],
      "excerpt": "karpathy/micrograd - A tiny scalar-valued autograd engine and a neural net library on top of it with PyTorch-like API \nLyWangPX/Reinforcement-Learning-2nd-Edition-by-Sutton-Exercise-Solutions - Solutions of Reinforcement Learning, An Introduction \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8324707806289743
      ],
      "excerpt": "google/automl - Google Brain AutoML \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8178729613073504,
        0.9602057440297199,
        0.9394449182630016,
        0.9872760933576886
      ],
      "excerpt": "huggingface/blog - Public repo for HF blog posts \npolynote/polynote - A better notebook for Scala (and more) \niechevarria/lego-face-VAE - Variational autoencoder for Lego minifig faces \ngeoffbacon/cerberus - Cerberus is an app that reduces the annotation burden of linguists \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9751452918860706,
        0.9243284499749808
      ],
      "excerpt": "enzoampil/tito-joker - A humorous AI that uses state-of-the-art deep learning to tell jokes \ndsgiitr/d2l-pytorch - This project reproduces the book Dive Into Deep Learning (https://d2l.ai/), adapting the code from MXNet into PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9624698687216746
      ],
      "excerpt": "ml-tooling/ml-workspace - \ud83d\udee0 All-in-one web-based IDE specialized for machine learning and data science. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8521629699756318,
        0.8616575616370027,
        0.9550876013003924,
        0.9488400788062732,
        0.8392957958471619,
        0.9184312234337441
      ],
      "excerpt": "bangoc123/learn-machine-learning-in-two-months - Nh\u1eefng ki\u1ebfn th\u1ee9c c\u1ea7n thi\u1ebft \u0111\u1ec3 h\u1ecdc t\u1ed1t Machine Learning trong v\u00f2ng 2 th\u00e1ng. Essential Knowledge for learning Machine Learning in two months. \nNVIDIA/tacotron2 - Tacotron 2 - PyTorch implementation with faster-than-realtime inference \nomarsar/pytorch_notebooks - A collection of PyTorch notebooks for learning and practicing deep learning \nskorch-dev/skorch - A scikit-learn compatible neural network library that wraps PyTorch \nOpenMined/PySyft - A library for answering questions using data you cannot see \nducha-aiki/pytorch-sift - PyTorch implementation of SIFT descriptor \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9304640870986135
      ],
      "excerpt": "thucdx/ml-uw-coursera - 4-course machine learning specialization by University Of Washington on Coursera \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9298196141111125
      ],
      "excerpt": "Atcold/pytorch-Deep-Learning - Deep Learning (with PyTorch) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.899888897373973,
        0.878892914269126,
        0.9940288673052841,
        0.9517338187664326,
        0.8082479845378069
      ],
      "excerpt": "firmai/industry-machine-learning - A curated list of applied machine learning and data science notebooks and libraries across different industries (by @firmai) \ngraykode/xlnet-Pytorch - Simple XLNet implementation with Pytorch Wrapper \nGoogleCloudPlatform/keras-idiomatic-programmer - Books, Presentations, Workshops, Notebook Labs, and Model Zoo  for Software Engineers and Data Scientists wanting to learn the TF.Keras Machine Learning framework \nrasbt/deeplearning-models - A collection of various deep learning architectures, models, and tips \nudacity/deep-learning-v2-pytorch - Projects and exercises for the latest Deep Learning ND program https://www.udacity.com/course/deep-learning-nanodegree--nd101 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9570255516637614,
        0.953813067966306,
        0.8617953088833168,
        0.9984780359092217,
        0.9697556906783609
      ],
      "excerpt": "tensorflow/tpu - Reference models and tools for Cloud TPUs. \nchiphuyen/MetroTwitter - What Twitter reveals about the differences between cities and the monoculture of the Bay Area \nlehoangnam040/Deep-Learning-with-Python-books - Doing example of book \"Deep learning with Python\". \nautocarclub/ACC - This is the storage of all the code of Autonomous Car Club in FPT university \ntimsainb/tensorflow2-generative-models - Implementations of a number of generative models in Tensorflow 2. GAN, VAE, Seq2Seq, VAEGAN, GAIA, Spectrogram Inversion. Everything is self contained in a jupyter notebook for easy export to colab. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.960618122846276
      ],
      "excerpt": "TreB1eN/InsightFace_Pytorch - Pytorch0.4.1 codes for InsightFace \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9398001350993243
      ],
      "excerpt": "msurtsukov/neural-ode - Jupyter notebook with Pytorch implementation of Neural Ordinary Differential Equations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.951813849089012,
        0.8391721826799569,
        0.8073802364744637,
        0.9739495644821504,
        0.9183240315085571,
        0.9487475917302387
      ],
      "excerpt": "iamtrask/Grokking-Deep-Learning - this repository accompanies the book \"Grokking Deep Learning\" \ncgpotts/cs224u - Code for Stanford CS224u \nlyeoni/nlp-tutorial - A list of NLP(Natural Language Processing) tutorials \nmicrosoft/TextWorld - \u200bTextWorld is a sandbox learning environment for the training and evaluation of reinforcement learning (RL) agents on text-based games. \nageron/tf2_course - Notebooks for my \"Deep Learning with TensorFlow 2 and Keras\" course \nslundberg/shap - A game theoretic approach to explain the output of any machine learning model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9227222370664265
      ],
      "excerpt": "higgsfield/RL-Adventure-2 - PyTorch0.4 implementation of: actor critic / proximal policy optimization / acer / ddpg / twin dueling ddpg / soft actor critic / generative adversarial imitation learning / hindsight experience replay \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8641529419827658,
        0.8623610476314845
      ],
      "excerpt": "danielhanchen/hyperlearn - Waiting hours for a future prediction is unacceptable. Hyperlearn makes AI and ML algorithms 50% faster, use 90% less memory and doesn't require you to use new hardware! ML Algorithms like PCA, Linear Regression, NMF are all faster! \nnyoki-mtl/pytorch-EverybodyDanceNow - Implementation of Everybody Dance Now by pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9017024143824602
      ],
      "excerpt": "Hyperparticle/one-pixel-attack-keras - Keras implementation of \"One pixel attack for fooling deep neural networks\" using differential evolution on Cifar10 and ImageNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.892286680342284,
        0.9712114710264886
      ],
      "excerpt": "fchollet/deep-learning-with-python-notebooks - Jupyter notebooks for the code samples of the book \"Deep Learning with Python\" \nageron/handson-ml - A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8785736238597499
      ],
      "excerpt": "mccorby/PhotoLabeller - Federated Learning: Client application doing classification of images and local training. Works better with the Parameter Server at https://github.com/mccorby/PhotoLabellerServer \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9011006335416737
      ],
      "excerpt": "LunarVim/LunarVim - An IDE layer for Neovim with sane defaults. Completely free and community driven. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9663807314441957,
        0.8128276459927996
      ],
      "excerpt": "srid/neuron-template - A template to get started with neuron \nlabuladong/fucking-algorithm - \u5237\u7b97\u6cd5\u5168\u9760\u5957\u8def\uff0c\u8ba4\u51c6 labuladong \u5c31\u591f\u4e86\uff01English version supported! Crack LeetCode, not only how, but also why. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9153808618077411
      ],
      "excerpt": "nim-lang/Nim - Nim is a statically typed compiled systems programming language. It combines successful concepts from mature languages like Python, Ada and Modula. Its design focuses on efficiency, expressiveness, and elegance (in that order of priority). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8519943006508501
      ],
      "excerpt": "futurulus/coop-nets - Scalable learning with pragmatics \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9014322619469559
      ],
      "excerpt": "cassidoo/getting-a-gig - Guide for getting a gig as a tech student. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.965921109086102
      ],
      "excerpt": "algorithmsbooks/decisionmaking - Preview of the textbook Algorithms for Decision Making \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8189825764412477,
        0.8432201748858358
      ],
      "excerpt": "luspr/awesome-ml-courses - Awesome free machine learning and AI courses with video lectures. \nsjhwang82/AdvancedML - Reading list for the Advanced Machine Learning Course \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9449079009393139
      ],
      "excerpt": "Machine-Learning-Tokyo/Interactive_Tools - Interactive Tools for Machine Learning, Deep Learning and Math \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8516403534025258
      ],
      "excerpt": "facebookmicrosites/Open-Mapping-At-Facebook - Documentation for Open Mapping At Facebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9393810485049688
      ],
      "excerpt": "WING-NUS/scisumm-corpus - Scientific Document Summarization Corpus and Annotations from the WING NUS group. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9841716301753167
      ],
      "excerpt": "dreamingechoes/awesome-mental-health - A curated list of awesome articles, websites and resources about mental health in the software industry. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8862283717578919
      ],
      "excerpt": "lampts/bert4vn - Multilingual bert retrained on news + squad2 for vietnamese \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8992633111033619
      ],
      "excerpt": "stefan-it/nmt-en-vi - Neural Machine Translation system for English to Vietnamese (IWSLT'15 English-Vietnamese data) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8288824282087501,
        0.8477917716058987,
        0.8823025303197656
      ],
      "excerpt": "mihail911/nlp-library - curated collection of papers for the nlp practitioner \ud83d\udcd6\ud83d\udc69\u200d\ud83d\udd2c \nmtdvio/every-programmer-should-know - A collection of (mostly) technical things every software developer should know about \nsohamkamani/javascript-design-patterns-for-humans - An ultra-simplified explanation of design patterns implemented in javascript \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9488080006421062
      ],
      "excerpt": "enjalot/algovis - collection of projects and links about algorithm visualization \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9400222481315066,
        0.9340700934099246,
        0.9440010135150141,
        0.8986249631383988,
        0.9136464791095452
      ],
      "excerpt": "RedditSota/state-of-the-art-result-for-machine-learning-problems - This repository provides state of the art (SoTA) results for all machine learning problems. We do our best to keep this repository up to date.  If you do find a problem's SoTA result is out of date or missing, please raise this as an issue or submit Google form (with this information: research paper name, dataset, metric, source code and year). We will fix it immediately. \n255kb/stack-on-a-budget - A collection of services with great free tiers for developers on a budget. Sponsored by Mockoon, the best mock API tool. https://mockoon.com \nletientai299/google-interview-university - A complete daily plan for studying to become a Google software engineer. \nsindresorhus/awesome - \ud83d\ude0e Awesome lists about all kinds of interesting topics \nDopplerHQ/awesome-interview-questions - :octocat: A curated awesome list of lists of interview questions. Feel free to contribute! :mortar_board: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9312630186347791
      ],
      "excerpt": "Code-Bullet/SnakeFusion - Using the genetic algorithm and neural networks I trained up 5 snakes who will then fuse to become the ultimate snake, this is how I did it \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9341728312742853
      ],
      "excerpt": "sberbank-ai/Real-ESRGAN - PyTorch implementation of Real-ESRGAN model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9872307586175973
      ],
      "excerpt": "gsarti/t5-flax-gcp - Tutorial to pretrain & fine-tune a \ud83e\udd17 Flax T5 model on a TPUv3-8 with GCP \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9915619406355116
      ],
      "excerpt": "DeNA/HandyRL - HandyRL is a handy and simple framework based on Python and PyTorch for distributed reinforcement learning that is applicable to your own environments. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9169097338871117
      ],
      "excerpt": "nguyenvulebinh/extractive-qa-mrc - Machine Reading Comprehension special for the Vietnamese language \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.888082671976204
      ],
      "excerpt": "microsoft/xtreme-distil-transformers - XtremeDistil framework for distilling/compressing massive multilingual neural network models to tiny and efficient models for AI at scale \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9180410487899252
      ],
      "excerpt": "glutanimate/review-heatmap - Anki add-on to help you keep track of your review activity \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9412185425961189
      ],
      "excerpt": "openai/lm-human-preferences - Code for the paper Fine-Tuning Language Models from Human Preferences \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.911679623702662
      ],
      "excerpt": "FooSoft/anki-connect - Anki plugin to expose a remote API for creating flash cards. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9464354176861799
      ],
      "excerpt": "prigoyal/pytorch_memonger - Experimental ground for optimizing memory of pytorch models \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9320934803478095,
        0.9153619924225801,
        0.854842688399679,
        0.8096327388093639,
        0.9238777061983297
      ],
      "excerpt": "openai/DALL-E - PyTorch package for the discrete VAE used for DALL\u00b7E. \nmrtzh/unbuch - Compile markdown into an html and pdf book based on pandoc. \npytorch/text - Data loaders and abstractions for text and NLP \nMilaNLProc/contextualized-topic-models - A python package to run contextualized topic modeling. CTMs combine contextualized embeddings (e.g., BERT) with topic models to get coherent topics. Published at EACL and ACL 2021. \nfacebookresearch/deit - Official DeiT repository \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9439578284254043,
        0.9615334766696867
      ],
      "excerpt": "deepset-ai/FARM - :house_with_garden: Fast & easy transfer learning for NLP. Harvesting language models for the industry. Focus on Question Answering. \nmicrosoft/qlib - Qlib is an AI-oriented quantitative investment platform, which aims to realize the potential, empower the research, and create the value of AI technologies in quantitative investment. With Qlib, you can easily try your ideas to create better Quant investment strategies. An increasing number of  SOTA Quant research works/papers are released in Qlib. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8260721217622227
      ],
      "excerpt": "facebookresearch/higher - higher is a pytorch library allowing users to obtain higher order gradients over losses spanning training loops rather than individual training steps. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9697512074226026
      ],
      "excerpt": "lucidrains/hamburger-pytorch - Pytorch implementation of the hamburger module from the ICLR 2021 paper \"Is Attention Better Than Matrix Decomposition\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9137098546556054,
        0.9071303229171361,
        0.8817200931350957
      ],
      "excerpt": "LCAV/pyroomacoustics - Pyroomacoustics is a package for audio signal processing for indoor applications. It was developed as a fast prototyping platform for beamforming algorithms in indoor scenarios. \nairsplay/vokenization - PyTorch code for EMNLP 2020 Paper \"Vokenization: Improving Language Understanding with Visual Supervision\" \nPyTorchLightning/pytorch-lightning - The lightweight PyTorch wrapper for high-performance AI research. Scale your models, not the boilerplate. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9438969971057586
      ],
      "excerpt": "automl/auto-sklearn - Automated Machine Learning with scikit-learn \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9053135721761918,
        0.9691868880743966
      ],
      "excerpt": "lucidrains/vit-pytorch - Implementation of Vision Transformer, a simple way to achieve SOTA in vision classification with only a single transformer encoder, in Pytorch \nccasimiro88/TranslateAlignRetrieve - Python-based implementation of the Translate-Align-Retrieve method to automatically translate the SQuAD Dataset to Spanish. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9682377152580008,
        0.8339793692824113
      ],
      "excerpt": "AntreasAntoniou/HowToTrainYourMAMLPytorch - The original code for the paper \"How to train your MAML\" along with a replication of the original \"Model Agnostic Meta Learning\" (MAML) paper in Pytorch. \ntvst/st-annotated-text - A simple component to display annotated text in Streamlit apps. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8655924571703956,
        0.9229411012271186
      ],
      "excerpt": "IlyaGusev/summarus - Models for automatic abstractive summarization \napple/ml-mkqa - We introduce MKQA, an open-domain question answering evaluation set comprising 10k question-answer pairs aligned across 26 typologically diverse languages (260k question-answer pairs in total). The goal of this dataset is to provide a challenging benchmark for question answering quality across a wide set of languages. Please refer to our paper for details, MKQA: A Linguistically Diverse Benchmark for Multilingual Open Domain Question Answering \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9355849532849957
      ],
      "excerpt": "nccgroup/blackboxprotobuf - Blackbox protobuf is a Burp Suite extension for decoding and modifying arbitrary protobuf messages without the protobuf type definition. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8445077325915823
      ],
      "excerpt": "kzhai/PyInfVoc - An Online Latent Dirichlet Allocation with Infinite Vocabulary implementation in Python. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106195637040918
      ],
      "excerpt": "yhenon/pyrcc - Python implementation of Robust Continuous Clustering \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8931517431330689
      ],
      "excerpt": "UKPLab/sentence-transformers - Multilingual Sentence & Image Embeddings with BERT \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8080424111128581,
        0.8366736274021187
      ],
      "excerpt": "JaidedAI/EasyOCR - Ready-to-use OCR with 80+ supported languages and all popular writing scripts including Latin, Chinese, Arabic, Devanagari, Cyrillic and etc. \nkotartemiy/newscatcher - Programmatically collect normalized news from (almost) any website. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168123028274505,
        0.8161327505618962
      ],
      "excerpt": "urschrei/pypolyline - Fast Google Polyline encoding and decoding using a Rust binary \nurschrei/simplification - Very fast LineString simplification using RDP or Visvalingam-Whyatt and a Rust binary \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8396962112425526,
        0.9387429256525155
      ],
      "excerpt": "lucidrains/byol-pytorch - Usable Implementation of \"Bootstrap Your Own Latent\" self-supervised learning, from Deepmind, in Pytorch \nchubin/wttr.in - :partly_sunny: The right way to check the weather \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9698226474223028,
        0.9829289752614033,
        0.9856071765183682
      ],
      "excerpt": "vwxyzjn/cleanrl - High-quality single file implementation of Deep Reinforcement Learning algorithms with research-friendly features (PPO, DQN, C51, Ape-X DQN, DDPG, TD3, SAC) \nTensorSpeech/TensorFlowTTS - :stuck_out_tongue_closed_eyes: TensorFlowTTS: Real-Time State-of-the-art Speech Synthesis for Tensorflow 2 (supported including English, French, Korean, Chinese, German and Easy to adapt for other languages) \ncbfinn/maml - Code for \"Model-Agnostic Meta-Learning for Fast Adaptation of Deep Networks\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151521895725098
      ],
      "excerpt": "facebookresearch/EmpatheticDialogues - Dialogue model that produces empathetic responses when trained on the EmpatheticDialogues dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9439784897167958
      ],
      "excerpt": "tristandeleu/pytorch-meta - A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9047037715461294
      ],
      "excerpt": "daiquocnguyen/Graph-Transformer - Transformer for Graph Classification (Pytorch and Tensorflow) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.972316963911495,
        0.9340994796182268,
        0.9677694732980047
      ],
      "excerpt": "huggingface/datasets - \ud83e\udd17 The largest hub of ready-to-use datasets for ML models with fast, easy-to-use and efficient data manipulation tools \npaperswithcode/axcell - Tools for extracting tables and results from Machine Learning papers \nwgrathwohl/JEM - Project site for \"Your Classifier is Secretly an Energy-Based Model and You Should Treat it Like One\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8332724609549776
      ],
      "excerpt": "pyro-ppl/pyro - Deep universal probabilistic programming with Python and PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9764318644050589,
        0.8994214987169826,
        0.9619629598769726
      ],
      "excerpt": "marin-m/pbtk - A toolset for reverse engineering and fuzzing Protobuf-based apps \nopenai/jukebox - Code for the paper \"Jukebox: A Generative Model for Music\" \ngboeing/osmnx - OSMnx: Python for street networks. Retrieve, model, analyze, and visualize street networks and other spatial data from OpenStreetMap. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8841582315579462,
        0.9359244773851069
      ],
      "excerpt": "thu-ml/tianshou - An elegant PyTorch deep reinforcement learning library. \ntaki0112/UGATIT - Official Tensorflow implementation of U-GAT-IT: Unsupervised Generative Attentional Networks with Adaptive Layer-Instance Normalization for Image-to-Image Translation (ICLR 2020) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8798272742073321,
        0.9509822705277009,
        0.9780961943706181
      ],
      "excerpt": "minhnq97/speech_language_processing - Implement algorithms and exercises from \"Speech and Language Processing\" by Daniel Jurafsky, James H. Martin \nyenchenlin/nerf-pytorch - A PyTorch implementation of NeRF (Neural Radiance Fields) that reproduces the results. \nkarpathy/covid-sanity - Aspires to help the influx of bioRxiv / medRxiv papers on COVID-19 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8876648591917788
      ],
      "excerpt": "as-ideas/ForwardTacotron - \u23e9 Generating speech in a single forward pass without any attention! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8946520609433729
      ],
      "excerpt": "deep-spin/entmax - The entmax mapping and its loss, a family of sparse softmax alternatives. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.891789537219002
      ],
      "excerpt": "likesiwell/LGM-Net - Tensorflow code for ICML 2019 paper: LGM-Net: Learning to Generate Matching Networks for Few-Shot Learning \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9331174605403798,
        0.9521165877949098
      ],
      "excerpt": "microsoft/DeepSpeed - DeepSpeed is a deep learning optimization library that makes distributed training easy, efficient, and effective. \nweiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks - experiments on Paper &lt;Bag of Tricks for Image Classification with Convolutional Neural Networks&gt; and other useful tricks to improve CNN acc \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9316488898071363,
        0.9265093485915754
      ],
      "excerpt": "tiangolo/fastapi - FastAPI framework, high performance, easy to learn, fast to code, ready for production \nphilgooch/abbreviation-extraction - Python3 implementation of the Schwartz-Hearst algorithm for extracting abbreviation-definition pairs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9582818004997464
      ],
      "excerpt": "bndr/pipreqs - pipreqs - Generate pip requirements.txt file based on imports of any project. Looking for maintainers to move this project forward. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.830065624594592,
        0.93997825917691
      ],
      "excerpt": "facebookresearch/cc_net - Tools to download and cleanup Common Crawl data \nexplosion/thinc - \ud83d\udd2e A refreshing functional take on deep learning, compatible with your favorite libraries \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9158954550958973,
        0.9185923524676824
      ],
      "excerpt": "deepmipt/DeepPavlov - An open source library for deep learning end-to-end dialog systems and chatbots. \nscikit-learn/scikit-learn - scikit-learn: machine learning in Python \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9100459395226894
      ],
      "excerpt": "faustomorales/keras-ocr - A packaged and flexible version of the CRAFT text detector and Keras CRNN recognition model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9494395213303802
      ],
      "excerpt": "ShangtongZhang/reinforcement-learning-an-introduction - Python Implementation of Reinforcement Learning: An Introduction \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9577986610775068
      ],
      "excerpt": "google/trax - Trax \u2014 Deep Learning with Clear Code and Speed \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8194186222644161,
        0.9394449182630016
      ],
      "excerpt": "NVlabs/stylegan2 - StyleGAN2 - Official TensorFlow Implementation \nngoanpv/albert_vi - ALBERT for Vietnamese \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9931402898908188
      ],
      "excerpt": "Holmeyoung/crnn-pytorch - Pytorch implementation of CRNN (CNN + RNN + CTCLoss) for all language OCR. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.864790958057934,
        0.9178219544431354,
        0.8670823324517034,
        0.934714079141371,
        0.9825882450990227,
        0.8028177863298441,
        0.826029707593583
      ],
      "excerpt": "espnet/espnet - End-to-End Speech Processing Toolkit \nfacebookresearch/ClassyVision - An end-to-end PyTorch framework for image and video classification \nMegvii-CSG/MegReader - A research project for text detection and recognition using PyTorch 1.2. \nclovaai/CRAFT-pytorch - Official implementation of Character Region Awareness for Text Detection (CRAFT) \nkoursaros-ai/nboost - NBoost is a scalable, search-api-boosting platform for deploying transformer models to improve the relevance of search results on different platforms (i.e. Elasticsearch) \neragonruan/text-detection-ctpn - text detection mainly based on ctpn model in tensorflow, id card detect, connectionist text proposal network \nSmerity/sha-rnn - Single Headed Attention RNN - \"Stop thinking with your head\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.892447538429063,
        0.9523509280279796,
        0.9964300105178853,
        0.8048230787364504
      ],
      "excerpt": "yardstick17/image_text_reader - The module extracts text from image using the tesseract-OCR engine. Generally, text present in the images are blur or are of uneven sizes. The image is pre-processed for better comprehension by OCR. This module first makes bounding box for text in images and then normalizes it to 300 dpi, suitable for OCR engine to read. \nhuggingface/knockknock - \ud83d\udeaa\u270aKnock Knock: Get notified when your training ends with only two additional lines of code \nnamnv1113/UITHelper_QAS - An ensemble system with a search engine for relevant document retrieval and a deep learning model (BERT) for machine comprehension in Vietnamese, applied to answer questions related to regulations of University of Information Technology (VNUHCM-UIT) \nkylebgorman/pynini - Read-only mirror of Pynini \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8092980582316222
      ],
      "excerpt": "hanxiao/bert-as-service - Mapping a variable-length sentence to a fixed-length vector using BERT model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9379141539547785,
        0.9598235882618746
      ],
      "excerpt": "ShangtongZhang/DeepRL - Modularized Implementation of Deep RL Algorithms in PyTorch \nksw0306/ClariNet - A Pytorch Implementation of ClariNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9012315235626128
      ],
      "excerpt": "foamliu/InsightFace-v2 - PyTorch implementation of Additive Angular Margin Loss for Deep Face Recognition. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9392236115041457
      ],
      "excerpt": "ShannonAI/service-streamer - Boosting your Web Services of Deep Learning Applications. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8153014498712092,
        0.9225158250930966
      ],
      "excerpt": "iterative/dvc - \ud83e\udd89Data Version Control | Git for Data & Models | ML Experiments Management \nRTIInternational/gobbli - Deep learning with text doesn't have to be scary. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8844656128771666
      ],
      "excerpt": "DagnyT/hardnet - Hardnet descriptor model - \"Working hard to know your neighbor's margins:  Local descriptor learning loss\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187122309208192,
        0.9350805108201256
      ],
      "excerpt": "undertheseanlp/languageflow - Data loaders and abstractions for text and NLP \nzhaohui-yang/LegoNet - A Pytorch implementation of \"LegoNet: Efficient Convolutional Neural Networks with Lego Filters\" (ICML 2019). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8334738301211082
      ],
      "excerpt": "mlflow/mlflow - Open source platform for the machine learning lifecycle \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9833754742521388
      ],
      "excerpt": "RasaHQ/rasa - \ud83d\udcac   Open source machine learning framework to automate text- and voice-based conversations: NLU, dialogue management, connect to Slack, Facebook, and more - Create chatbots and voice assistants \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9565436851496968,
        0.9175351969953413,
        0.8386274812376724
      ],
      "excerpt": "facebookresearch/kill-the-bits - Code for: \"And the bit goes down: Revisiting the quantization of neural networks\" \nrosinality/vq-vae-2-pytorch - Implementation of Generating Diverse High-Fidelity Images with VQ-VAE-2 in PyTorch \nIBM/pytorch-seq2seq - An open source framework for seq2seq models in PyTorch. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8036247914164237
      ],
      "excerpt": "tensorpack/tensorpack - A Neural Net Training Interface on TensorFlow, with focus on speed + flexibility \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9577664396219643
      ],
      "excerpt": "facebook/prophet - Tool for producing high quality forecasts for time series data that has multiple seasonality with linear or non-linear growth. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8048192449469774
      ],
      "excerpt": "osqp/osqpth - The differentiable OSQP solver layer for PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9812151184784139
      ],
      "excerpt": "huggingface/naacl_transfer_learning_tutorial - Repository of code for the tutorial on Transfer Learning in NLP held at NAACL 2019 in Minneapolis, MN, USA \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9622307608700631,
        0.8293951967407603,
        0.9823300771774338
      ],
      "excerpt": "zsef123/EfficientNets-PyTorch - A PyTorch implementation of \" EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks.\" \nrwightman/pytorch-image-models - PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more \nseungeunrho/minimalRL - Implementations of basic RL algorithms with minimal lines of codes! (pytorch based) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9555311080234468
      ],
      "excerpt": "flairNLP/flair - A very simple framework for state-of-the-art Natural Language Processing (NLP) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9779685435896294
      ],
      "excerpt": "google-research/lottery-ticket-hypothesis - A reimplementation of \"The Lottery Ticket Hypothesis\" (Frankle and Carbin) on MNIST. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9585550675999286
      ],
      "excerpt": "justusschock/shapenet - PyTorch implementation of \"Super-Realtime Facial Landmark Detection and Shape Fitting by Deep Regression of Shape Model Parameters\" predicting facial landmarks with up to 400 FPS \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.81443856984731
      ],
      "excerpt": "wujiyang/Face_Pytorch - face recognition algorithms  in pytorch framework, including arcface, cosface, sphereface and so on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9576947274604538,
        0.8436380974584299,
        0.8888889364629052
      ],
      "excerpt": "iperov/DeepFaceLab - DeepFaceLab is the leading software for creating deepfakes. \n1adrianb/face-alignment - :fire: 2D and 3D Face alignment library build using pytorch \nluckycallor/InsightFace-tensorflow - Tensoflow implementation of InsightFace (ArcFace: Additive Angular Margin Loss for Deep Face Recognition). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9264472289714528,
        0.9598235882618746
      ],
      "excerpt": "YadiraF/PRNet - Joint 3D Face Reconstruction and Dense Alignment with Position Map Regression Network (ECCV 2018) \nclcarwin/sphereface_pytorch - A PyTorch Implementation of SphereFace. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8022956762970509
      ],
      "excerpt": "deepmind/mathematics_dataset - This dataset code generates mathematical question and answer pairs, from a range of question types at roughly school-level difficulty. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9401191488160363,
        0.9648025102828722,
        0.9656935785437555
      ],
      "excerpt": "Lotayou/densebody_pytorch - PyTorch implementation of CloudWalk's recent work DenseBody \nfacebookresearch/XLM - PyTorch original implementation of Cross-lingual Language Model Pretraining. \nfloodsung/Deep-Learning-Papers-Reading-Roadmap - Deep Learning papers reading roadmap for anyone who are eager to learn this amazing tech! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8092977528237201
      ],
      "excerpt": "orobix/Prototypical-Networks-for-Few-shot-Learning-PyTorch - Implementation of Prototypical Networks for Few Shot Learning (https://arxiv.org/abs/1703.05175) in Pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9592570819666452,
        0.9184312234337441
      ],
      "excerpt": "Lyken17/pytorch-OpCounter - Count the MACs / FLOPs of your PyTorch model. \ndavidtvs/PyTorch-ENet - PyTorch implementation of ENet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8365110847284547
      ],
      "excerpt": "google/jax - Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9338102380428972
      ],
      "excerpt": "sebastianruder/NLP-progress - Repository to track the progress in Natural Language Processing (NLP), including the datasets and the current state-of-the-art for the most common NLP tasks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9707012961310908,
        0.994060599558001,
        0.9777865830717511
      ],
      "excerpt": "huggingface/hmtl - \ud83c\udf0aHMTL: Hierarchical Multi-Task Learning - A State-of-the-Art neural network model for several NLP tasks based on PyTorch and AllenNLP \nhuggingface/torchMoji - \ud83d\ude07A pyTorch implementation of the DeepMoji model: state-of-the-art deep learning model for analyzing sentiment, emotion, sarcasm etc \nhuggingface/transformers - \ud83e\udd17 Transformers: State-of-the-art Machine Learning for Pytorch, TensorFlow, and JAX. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8813159962821379
      ],
      "excerpt": "graykode/gpt-2-Pytorch - Simple Text-Generator with OpenAI gpt-2 Pytorch Implementation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8495508062069052,
        0.8961868985911317,
        0.8911226280210093,
        0.8861087802910645,
        0.8414829693594588,
        0.9407147725141659,
        0.9553411677956841,
        0.9342004689833004,
        0.9663306354280069,
        0.915147185109885,
        0.9833714852737273
      ],
      "excerpt": "MorvanZhou/Reinforcement-learning-with-tensorflow - Simple Reinforcement learning tutorials, \u83ab\u70e6Python \u4e2d\u6587AI\u6559\u5b66 \nhoya012/deep_learning_object_detection - A paper list of object detection using deep learning. \nrail-berkeley/rlkit - Collection of reinforcement learning algorithms \nfacebookresearch/pytext - A natural language modeling framework based on PyTorch \nayooshkathuria/pytorch-yolo-v3 - A PyTorch implementation of the YOLO v3 object detection algorithm \ndkoguciuk/DDPG-Keras-Torcs - Using Keras and Deep Deterministic Policy Gradient to play TORCS \njimkon/Deep-Reinforcement-Learning-in-Large-Discrete-Action-Spaces - Implementation of the algorithm in Python 3, TensorFlow and OpenAI Gym \nhindupuravinash/the-gan-zoo - A list of all named GANs! \nmatenure/FastGCN - The sample codes for our ICLR18 paper \"FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling\"\" \nSwall0w/torchstat - Model analyzer in PyTorch \ntiepvupsu/dlproject_structure - Structure of a deep learning project \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9466722975332038,
        0.9170111090387187
      ],
      "excerpt": "yunlongdong/FCN-pytorch - Another pytorch implementation of FCN (Fully Convolutional Networks) \nhuggingface/pytorch-openai-transformer-lm - \ud83d\udc25A PyTorch implementation of OpenAI's finetuned transformer language model with a script to import the weights pre-trained by OpenAI \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8188335105068286
      ],
      "excerpt": "taki0112/Self-Attention-GAN-Tensorflow - Simple Tensorflow implementation of \"Self-Attention Generative Adversarial Networks\" (SAGAN) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9480897461706945
      ],
      "excerpt": "eriklindernoren/ML-From-Scratch - Machine Learning From Scratch. Bare bones NumPy implementations of machine learning models and algorithms with a focus on accessibility. Aims to cover everything from linear regression to deep learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8839926745959877,
        0.8391115862588892
      ],
      "excerpt": "mbadry1/Top-Deep-Learning - Top 200 deep learning Github repositories sorted by the number of stars. \neriklindernoren/Keras-GAN - Keras implementations of Generative Adversarial Networks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.923750716954593
      ],
      "excerpt": "hunkim/PyTorchZeroToAll - Simple PyTorch Tutorials Zero to ALL! \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8449724345385292,
        0.8900735522361872
      ],
      "excerpt": "ruiminshen/yolo2-pytorch - PyTorch implementation of the YOLO (You Only Look Once) v2 \njunyanz/interactive-deep-colorization - Deep learning software for colorizing black and white images with a few clicks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9562656315765448
      ],
      "excerpt": "humphd/have-fun-with-machine-learning - An absolute beginner's guide to Machine Learning and Image Classification with Neural Networks \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8374690106805255
      ],
      "excerpt": "oscar-corpus/ungoliant - :spider: The pipeline for the OSCAR corpus \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9744264924177773,
        0.8752756375773706,
        0.9331990798248934,
        0.8143673231709304
      ],
      "excerpt": "LaurentMazare/tch-rs - Rust bindings for the C++ api of PyTorch. \nhuggingface/tokenizers - \ud83d\udca5 Fast State-of-the-Art Tokenizers optimized for Research and Production \nclayh53/tufte-jekyll - Minimal Jekyll blog styled to resemble the look and layout of Edward Tufte's books \npages-themes/cayman - Cayman is a Jekyll theme for GitHub Pages \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8463439381822143
      ],
      "excerpt": "bigscience-workshop/bigscience - Central place for the engineering/scaling WG: documentation, SLURM scripts and logs, compute environment and data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.954982191473875,
        0.9293379779772083,
        0.9926536457696893,
        0.9368540862565284
      ],
      "excerpt": "OWASP/owasp-mstg - The Mobile Security Testing Guide (MSTG) is a comprehensive manual for mobile app security testing and reverse engineering. It describes the technical processes for verifying the controls listed in the OWASP Mobile Application Security Verification Standard (MASVS). \ngothinkster/realworld - \"The mother of all demo apps\" \u2014 Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more \ud83c\udfc5 \nkaldi-asr/kaldi - kaldi-asr/kaldi is the official location of the Kaldi project. \nnode-red/node-red-docker - Repository for all things Node-RED and Docker related \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8477525447038626,
        0.8727332915521261,
        0.9394449182630016
      ],
      "excerpt": "undertheseanlp/slp3-vietnamese - Speech and Language Processing 3rd edition Vietnamese Translation \nHarisIqbal88/PlotNeuralNet - Latex code for making neural networks diagrams \nkonodyuk/obsidian-text-expander - Text Expander plugin for Obsidian \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8455394027801645,
        0.9394449182630016
      ],
      "excerpt": "lynchjames/obsidian-day-planner - An Obsidian plugin for day planning and managing pomodoro timers from a task list in a Markdown note. \nSilentVoid13/Templater - A template plugin for obsidian \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8900091319920592
      ],
      "excerpt": "gera2ld/markmap - Visualize your Markdown as mindmaps with Markmap. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9684915575131307,
        0.8400325410538465,
        0.8791994551636144
      ],
      "excerpt": "Zettlr/Zettlr - A Markdown Editor for the 21st century. \nWorldBrain/Memex - Browser Extension to full-text search your browsing history & bookmarks. \nrough-stuff/rough-notation - Create and animate hand-drawn annotations on a web page \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.807128068556755
      ],
      "excerpt": "facebookresearch/hiplot - HiPlot makes understanding high dimensional data easy \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8919807066199964
      ],
      "excerpt": "alainm23/planner - Task manager with Todoist support designed for GNU/Linux \ud83d\ude80 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9440017785383372,
        0.8792149924542879
      ],
      "excerpt": "neovim/neovim - Vim-fork focused on extensibility and usability \namix/vimrc - The ultimate Vim configuration (vimrc) \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Luvata/awesome-stars/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 23:19:42 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Luvata/awesome-stars/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Luvata/awesome-stars",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8820234121644812
      ],
      "excerpt": "Jupyter Notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.910471529999529,
        0.973488653227081
      ],
      "excerpt": "AsahiLinux/gpu - Dissecting the M1's GPU for 3D acceleration \nEHfive/pulseaudio-modules-bt - [Deprecated, see https://github.com/EHfive/pulseaudio-modules-bt/issues/154] Adds Sony LDAC, aptX, aptX HD, AAC codecs (A2DP Audio) support to PulseAudio on Linux \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8277126252634593
      ],
      "excerpt": "pytorch/xla - Enabling PyTorch on Google TPU \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8712946645979642
      ],
      "excerpt": "pytorch/pytorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8693923927038826
      ],
      "excerpt": "logseq/logseq - A privacy-first, open-source platform for knowledge management and collaboration. Desktop app download link: https://github.com/logseq/logseq/releases, roadmap: https://trello.com/b/8txSM12G/roadmap \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8775627009145878
      ],
      "excerpt": "pytorch/serve - Model Serving on PyTorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8623303914021028
      ],
      "excerpt": "kdn251/interviews - Everything you need to know to get the job. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8067593770042298
      ],
      "excerpt": "codota/jupyter-tabnine - Autocompletion with Deep Learning on Jupyter Notebook \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8368998992968657
      ],
      "excerpt": "hereismari/playing-games-with-tfjs - Using DeepLearnJs to play games just using your camera \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8824628798142807,
        0.8989188310244524
      ],
      "excerpt": "t-vi/pytorch-tvmisc - Totally Versatile Miscellanea for Pytorch \nbentrevett/pytorch-seq2seq - Tutorials on implementing a few sequence-to-sequence (seq2seq) models with PyTorch and TorchText. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9052938924996576
      ],
      "excerpt": "maycuatroi/pycocotools-window - Clone of COCO API - Dataset @ http://cocodataset.org/ - with changes to support Windows/change object's id to string build and python3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8285000856641033
      ],
      "excerpt": "nyoki-mtl/pytorch-EverybodyDanceNow - Implementation of Everybody Dance Now by pytorch \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515853524061104
      ],
      "excerpt": "s1n7ax/nvim-terminal - A Lua-Neovim plugin that toggles a terminal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.88073272772672
      ],
      "excerpt": "huggingface/accelerate - \ud83d\ude80 A simple way to train and use PyTorch models with multi-GPU, TPU, mixed-precision \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8325418164338795
      ],
      "excerpt": "openai/DALL-E - PyTorch package for the discrete VAE used for DALL\u00b7E. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.896416168948752
      ],
      "excerpt": "kbumsik/VirtScreen - Make your iPad/tablet/computer into a secondary monitor on Linux. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8981986289102115
      ],
      "excerpt": "numba/numba - NumPy aware dynamic Python compiler using LLVM \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9322609392449874
      ],
      "excerpt": "minhnq97/pytorch-transformer-text-classification -  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8025882749518886
      ],
      "excerpt": "pytorch/hub - Submission to https://pytorch.org/hub/ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8872259660376752
      ],
      "excerpt": "numpy/numpy - The fundamental package for scientific computing with Python. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.824927979509549
      ],
      "excerpt": "sharkdp/bat - A cat(1) clone with wings. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.959986374028315
      ],
      "excerpt": "conda-forge/miniforge - A conda-forge distribution. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8869796396047183
      ],
      "excerpt": "laurent22/joplin - Joplin - an open source note taking and to-do application with synchronization capabilities for Windows, macOS, Linux, Android and iOS. Forum: https://discourse.joplinapp.org/ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8174540907975313
      ],
      "excerpt": "ververica/flink-training-exercises -  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8220832911763112
      ],
      "excerpt": "yk/PyTorch_CIFAR10 - Pretrained TorchVision models on CIFAR10 dataset (with weights) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8627390459742492
      ],
      "excerpt": "gboeing/osmnx-examples - Usage examples, demos, and tutorials for OSMnx. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8206590565899321
      ],
      "excerpt": "jph00/hello_nbdev - A tutorial example for nbdev \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8466364075663708
      ],
      "excerpt": "justinpinkney/awesome-pretrained-stylegan2 - A collection of pre-trained StyleGAN 2 models to download \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8135658769220254
      ],
      "excerpt": "tensorflow/models - Models and examples built with TensorFlow \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8537820804203838
      ],
      "excerpt": "cool-RR/PySnooper - Never use print for debugging again \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8210483180931888
      ],
      "excerpt": "konodyuk/obsidian-text-expander - Text Expander plugin for Obsidian \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8358001262091059
      ],
      "excerpt": "Pseudonium/Obsidian_to_Anki - Script to add flashcards from text/markdown files to Anki \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Luvata/awesome-stars/issues{/number}",
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Awesome Stars",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "awesome-stars",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Luvata",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Luvata/awesome-stars/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Fri, 24 Dec 2021 23:19:42 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [dutchcoders/transfer.sh](https://github.com/dutchcoders/transfer.sh) - Easy and fast file sharing from the command-line.\n- [dnote/dnote](https://github.com/dnote/dnote) - A simple command line notebook for programmers\n- [unixpickle/sgdstore](https://github.com/unixpickle/sgdstore) - Augmented RNN memory via live SGD\n- [minio/minio](https://github.com/minio/minio) - High Performance, Kubernetes Native Object Storage\n- [cortexlabs/cortex](https://github.com/cortexlabs/cortex) - Production infrastructure for machine learning at scale\n\n",
      "technique": "Header extraction"
    }
  ]
}