{
  "citation": [
    {
      "confidence": [
        0.8514182284545062
      ],
      "excerpt": "02/10/2021 Release the code for inferencing TILDEv2. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8286239007222697
      ],
      "excerpt": "31/10/2021 Release the code for training TILDEv2. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ielab/TILDE",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-05-09T12:34:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-13T14:03:25Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9904172399844773
      ],
      "excerpt": "This is the official repository for the SIGIR2021 paper TILDE: Term Independent Likelihood moDEl for Passage Re-ranking. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "model = BertLMHeadModel.from_pretrained(\"ielab/TILDE\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9705268531679957,
        0.8997664081837647
      ],
      "excerpt": "13/09/2021 Release the reproducing of uniCOIL with TILDE passage expansion. \n17/09/2021 Release the code for TILDE passage expansion. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9345527208859126
      ],
      "excerpt": "TILDE uses BERT to pre-compute passage representations. Since the MS MARCO passage collection has around 8.8m passages, it will require more than 500G to store the representations of the whole collection. To quickly try out TILDE, in this example, we only pre-compute passages that we need to re-rank. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8823528610929359
      ],
      "excerpt": "Let\u2018s first check out what is the BM25 performance on TREC DL2019 with trec_eval: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009512079859675
      ],
      "excerpt": "ndcg_cut_10             all     0.4973 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "--query_path ./data/queries/DL2019-queries.tsv \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9016071708564787
      ],
      "excerpt": "In our case, we use an intel cpu version of Mac mini without cuda library, this means we do not use any gpu in this example. TILDE only uses 0.2ms to compute the query sparse representation and 6.7ms to re-rank 1000 passages retrieved by BM25. Note, by default, the code uses a pure query likelihood ranking setting (alpha=1). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009512079859675
      ],
      "excerpt": "ndcg_cut_10             all     0.5791 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "--query_path ./data/queries/DL2019-queries.tsv \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8658102383389492
      ],
      "excerpt": "This is because now TILDE has an extra step of using BERT to compute query dense representation. As a trade-off you will get higher effectiveness: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8009512079859675,
        0.9722882961811281,
        0.9890266139333272
      ],
      "excerpt": "ndcg_cut_10             all     0.6088 \nIn addition to the passage reranking model, TILDE can also serve as a passage expansion model. Our paper \"Fast Passage Re-ranking with Contextualized Exact Term \nMatching and Efficient Passage Expansion\" describes the algorithm of using TILDE to do passage expansion. Here, we give the example of expanding the MS MARCO passage collection with TILDE.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8230554520441453,
        0.9957051683171396,
        0.9778272258334857,
        0.9046021837954236
      ],
      "excerpt": "This takes around 7 hours to expand the whole MS MARCO passage collection on a single tesla v100 GPU. Note, by default, we store the token ids. You can also store the raw text of expanded passages by adding the flag --store_raw. This means the format becomes {\"pid\": str, \"psg\": str}. Also note, --store_raw will slow down the speed a little bit. \nFor impact of --topk, we refere to the experiments described in our paper (section 5.4). \nTo reproduce the uniCOIL results with TILDE passage expansion, we refer to pyserini and anserini instructions. \nTo reproduce TILDEv2 results with TILDE passage expansion, check out the instructions in/TILDEv2 folder. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ielab/tilde/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 26 Dec 2021 05:08:12 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ielab/TILDE/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ielab/TILDE",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To train and inference TILDE, we use python3.7, the [huggingface](https://huggingface.co/) implementation of BERT and [pytorch-lightning](https://www.pytorchlightning.ai/). \n\nRun `pip install -r requirements.txt` in the root folder to set up the libraries that will be used by this repository.\n\nTo repoduce the results presented in the paper, you need to download `collection.tar.gz` from the MS MARCO passage ranking repository; this is available at this [link](https://msmarco.blob.core.windows.net/msmarcoranking/collection.tar.gz). Unzip and move `collection.tsv` into the folder `./data/collection`.\n\nIn order to reproduce the results with minimum effort, we also provided the TREC DL2019 query file (`DL2019-queries.tsv`) in the `./data/queries/` folder, and its qrel file (`2019qrels-pass.txt`) in `./data/qrels/`. There is also a TREC style BM25 run file (`run.trec2019-bm25.res`) generated by [pyserini](https://github.com/castorini/pyserini) in `./data/runs/` folder which we will use to re-rank.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9287440454120753
      ],
      "excerpt": "As you see, TILDE is aBertLMHeadModel, you may get a warning fromtransformers` that says: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.88255892461249
      ],
      "excerpt": "First, run the following command from the root: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9853668735025283
      ],
      "excerpt": "If you have a gpu with big memory, you can set --batch_size that suits your gpu the best. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456152362145931
      ],
      "excerpt": "we get: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8456152362145931
      ],
      "excerpt": "we get: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9366334809431311
      ],
      "excerpt": "you will get higher query latency: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8187042306141167
      ],
      "excerpt": "First, make sure you have downloaded collection.tsv and unzipped it in data/collection/. Then just need to run the following command: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8515613908231043
      ],
      "excerpt": "--train_path path/to/doc_query_pairs.train.tsv \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8801854956928516
      ],
      "excerpt": "from transformers import BertLMHeadModel, BertTokenizerFast \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 indexing.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8081144650727402
      ],
      "excerpt": "--run_path ./data/runs/run.trec2019-bm25.res \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 indexing.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8081144650727402
      ],
      "excerpt": "--run_path ./data/runs/run.trec2019-bm25.res \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8081144650727402
      ],
      "excerpt": "--run_path ./data/runs/run.trec2019-bm25.res \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991
      ],
      "excerpt": "python3 expansion.py \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8481520352278731
      ],
      "excerpt": "This python script will generate a jsonl file that contains expanded passages in data/collection/ as well. Each line in the file has a pid and its corresponding expanded passage: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8406099990501817
      ],
      "excerpt": "Frist, download the training data (doc_query_pairs.train.tsv) from the original docTTTTTquery repo. This dataset contains approximately 500,000 passage-query pairs used to train the model. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9336801098518991,
        0.8102697908108123
      ],
      "excerpt": "python3 train_tilde.py \\ \n--train_path path/to/doc_query_pairs.train.tsv \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ielab/TILDE/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 ielab\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "TILDE",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "TILDE",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ielab",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ielab/TILDE/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 13,
      "date": "Sun, 26 Dec 2021 05:08:12 GMT"
    },
    "technique": "GitHub API"
  }
}