{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1910.04209"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Tony-Y/pytorch_warmup",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-10-31T08:28:04Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-23T08:18:46Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9908027591704104
      ],
      "excerpt": "This library contains PyTorch implementations of the warmup schedules described in On the adequacy of untuned warmup for adaptive optimization. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9578540963564421
      ],
      "excerpt": "The scheduled learning rate is dampened by the multiplication of the warmup factor: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620007613560474
      ],
      "excerpt": "    for batch in dataloader: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8174114895844474
      ],
      "excerpt": "When the learning rate schedule uses the epoch number, the warmup schedule can be used as follows (for PyTorch 1.2 or above): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620007613560474
      ],
      "excerpt": "    for batch in dataloader: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9663653787640237
      ],
      "excerpt": "The warmup period is given by a function of Adam's beta2 parameter for UntunedLinearWarmup and UntunedExponentialWarmup. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9766665990974285
      ],
      "excerpt": "The warmup factor depends on Adam's beta2 parameter for RAdamWarmup. Please see the original paper for the details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8069831573544813
      ],
      "excerpt": "The Apex library provides an Adam optimizer tuned for CUDA devices, FusedAdam. The FusedAdam optimizer can be used with the warmup schedulers. For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Learning Rate Warmup in PyTorch",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Tony-Y/pytorch_warmup/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 16,
      "date": "Mon, 27 Dec 2021 10:02:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Tony-Y/pytorch_warmup/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tony-Y/pytorch_warmup",
    "technique": "GitHub API"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/Tony-Y/pytorch_warmup/tree/master/docs"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The warmup factor `w(t)` depends on the warmup period, which must manually be specified, for `LinearWarmup` and `ExponentialWarmup`.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "Make sure you have Python 3.6+ and PyTorch 1.1+. Then, run the following command:\n\n```\npython setup.py install\n```\n\nor\n\n```\npip install -U pytorch_warmup\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8892897599895102
      ],
      "excerpt": "For PyTorch 1.4 or above, use an LR scheduler as the following: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9012248701992861,
        0.8342075967937919,
        0.8172342705654815
      ],
      "excerpt": "import pytorch_warmup as warmup \noptimizer = torch.optim.AdamW(params, lr=0.001, betas=(0.9, 0.999), weight_decay=0.01) \nnum_steps = len(dataloader) * num_epochs \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9002044555585812
      ],
      "excerpt": "optimizer = apex.optimizers.FusedAdam(params, lr=0.001, betas=(0.9, 0.999), weight_decay=0.01) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Tony-Y/pytorch_warmup/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2019 Takenori Yamamoto\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "A PyTorch Extension for Learning Rate Warmup",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch_warmup",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Tony-Y",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Tony-Y/pytorch_warmup/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 159,
      "date": "Mon, 27 Dec 2021 10:02:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "pytorch",
      "warmup",
      "adam",
      "learning-rate-scheduling",
      "deep-learning"
    ],
    "technique": "GitHub API"
  }
}