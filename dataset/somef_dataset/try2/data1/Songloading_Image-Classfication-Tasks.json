{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Songloading/Image-Classfication-Tasks",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-31T20:32:43Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-16T20:41:52Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9287307476871648,
        0.9244726610294468
      ],
      "excerpt": "Learning Objectives: Basic image classification tasks with simple models using Pytorch and Jax \nLearning Outcomes: Finish using Pytorch and Jax to build a Lenet-5 model to do image classification tasks. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654960237896013,
        0.8792925105508695
      ],
      "excerpt": "| Jax    | - Model is treated as a function <br> - stax for example returns model parameters and foward function     | - Has to define data_stream method <br>   - Has to self-define loss function <br> - Update each batch state and pass to the next   | - Has to manually define dataset | \nLearning Objectives: Getting started on Julia and corresponding libraries. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.957100284749249
      ],
      "excerpt": "Learning Outcomes: Finish using Julia and Knet building Lenet5 and classify MNIST data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8726067826998724,
        0.8723048651359875,
        0.8561694562200746,
        0.9082537812339769,
        0.8337764890438721
      ],
      "excerpt": "Julia is very similar to Python \nPackage Reference is not very clear \nIt can be very easy and clear to build each layer of NN by using the Julia Constructor \nLearning Objectives: Try to load self-defined data to each of the three previous learned pipeline. \nLearning Outcomes: Finish using Julia, Pytorch, and Knet to load custome dataset. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9635611304584079
      ],
      "excerpt": "<br />The NIH Chest X-rays dataset is composed of about 110,000 chest X-ray images with 15 classes (14 diseases, and one for \"No findings\"). We are going to build/utilize different models to perform classification. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.887509244768182
      ],
      "excerpt": "The code below will help you orient all the data paths and, assuming you want to do binary classification, truning lables into binary. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979411005071259
      ],
      "excerpt": "#: Data Preparation \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.87059324234571
      ],
      "excerpt": "#: Make the data binary \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8651211944519488
      ],
      "excerpt": "  - Model: Pytorch pretrained Resnet50 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.860059181823877
      ],
      "excerpt": "  - Model: ChexNet \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Lung  Disease Detection From X-ray Images using Ensemble CNNS",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Songloading/Image-Classfication-Tasks/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 27 Dec 2021 08:46:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Songloading/Image-Classfication-Tasks/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Songloading/Image-Classfication-Tasks",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Songloading/Image-Classfication-Tasks/main/X-Ray%20Classification/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/Songloading/Image-Classfication-Tasks/main/jaxLenet.ipynb",
      "https://raw.githubusercontent.com/Songloading/Image-Classfication-Tasks/main/Julia/LenetJulia.ipynb",
      "https://raw.githubusercontent.com/Songloading/Image-Classfication-Tasks/main/Julia/.ipynb_checkpoints/LenetJulia-checkpoint.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.8609721944325247
      ],
      "excerpt": " img_paths = {os.path.basename(name): name for name in zf.namelist() if name.endswith('.png')} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8785020703843535
      ],
      "excerpt": "  <br /> https://jrzech.medium.com/reproducing-chexnet-with-pytorch-695ff9c3bf66 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8194842505323139
      ],
      "excerpt": "Dataset & Preparation: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8262157230141619,
        0.8430147224739142
      ],
      "excerpt": "#: Data Preparation \n img_paths = {os.path.basename(name): name for name in zf.namelist() if name.endswith('.png')} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8029027297041446
      ],
      "excerpt": " df.drop(['Finding Labels'], axis=1,inplace = True) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8008481530225495,
        0.8008481530225495,
        0.8008481530225495,
        0.8008481530225495,
        0.8008481530225495
      ],
      "excerpt": "0  images_001/images/00000001_000.png      1 \n1  images_001/images/00000001_001.png      1 \n2  images_001/images/00000001_002.png      1 \n3  images_001/images/00000002_000.png      0 \n4  images_001/images/00000003_000.png      1 \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Songloading/Image-Classfication-Tasks/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python",
      "Julia",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Image-Classfication-Tasks",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Image-Classfication-Tasks",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Songloading",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Songloading/Image-Classfication-Tasks/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Mon, 27 Dec 2021 08:46:33 GMT"
    },
    "technique": "GitHub API"
  }
}