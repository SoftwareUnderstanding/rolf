{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. https://github.com/pfnet-research/sngan_projection\n2. https://github.com/mseitzer/pytorch-fid: FID score\n3. https://github.com/naoto0804/pytorch-AdaIN: Infinite Sampler of DataLoader\n",
      "technique": "Header extraction"
    }
  ],
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1802.05957\n\n## cGANs with projection discriminator\n> cGANs with Projection Discriminator  \n> Takeru Miyato, Masanori Koyama  \n> OpenReview: https://openreview.net/forum?id=ByS1VpgRZ  \n> arXiv: https://arxiv.org/abs/1802.05637  \n\n## Requirements\n- Python 3.6.4\n- PyTorch 0.4.1\n- torchvision 0.2.1\n- NumPy: Used in FID score calculation and data loader\n- SciPy: Used in FID score calculation\n- tensorflow (optional",
      "https://arxiv.org/abs/1802.05637  \n\n## Requirements\n- Python 3.6.4\n- PyTorch 0.4.1\n- torchvision 0.2.1\n- NumPy: Used in FID score calculation and data loader\n- SciPy: Used in FID score calculation\n- tensorflow (optional",
      "https://arxiv.org/abs/ https://arxiv.org/abs/1802.05957\n\n## cGANs with projection discriminator\n> cGANs with Projection Discriminator  \n> Takeru Miyato, Masanori Koyama  \n> OpenReview: https://openreview.net/forum?id=ByS1VpgRZ  \n> https://arxiv.org/abs/ https://arxiv.org/abs/1802.05637  \n\n## Requirements\n- Python 3.6.4\n- PyTorch 0.4.1\n- torchvision 0.2.1\n- NumPy: Used in FID score calculation and data loader\n- SciPy: Used in FID score calculation\n- tensorflow (optional)\n- tensorboardX (optional)\n- tqdm: Progressbar and Log\n\nIf you want to use **tensorboard** for beautiful training update visualization, please install tensorflow and tensorboardX.  \nWhen using only tensorboard, tensorflow cpu is enough.\n\n### Docker environment\nDockerfiles for pytorch 1.0 environment and tensorboard are added. PyTorch 1.0 Dockerfile requires an nvidia driver that supports CUDA 9.2.\nAlso, this dockerized environment needs some environment variables:\n- `DATA`: Path to dataset\n- `RESULTS`: Path to save results\n- `PORT`: Port number for jupyter notebook.\n\n## Dataset\n- tiny ImageNet[^1].\n\n> Tiny Imagenet has 200 classes. Each class has 500 training images, 50 validation images, and 50 test images.\n\n[^1]: https://tiny-imagenet.herokuapp.com/\n\n## Training configuration\nDefault parameters are the same as the original Chainer implementation.\n\n- to train cGAN with projection discriminator: run `train_64.py` with `--cGAN` option.\n- to train cGAN with concat discriminator: run `train_64.py` with both `--cGAN` and `--dis_arch_concat`.\n- to run without `tensorboard`, please add `--no_tensorboard`.\n- to calculate FID, add `--calc_FID` (not tested)\n- to use make discriminator relativistic, add `--relativistic_loss` or `-relloss` (not tested)\n\nTo see all the available arguments, run `python train_64.py --help`.\n\n## TODO\n- [ ] implement super-resolution (cGAN)\n\n# Acknowledgement\n1. https://github.com/pfnet-research/sngan_projection\n2. https://github.com/mseitzer/pytorch-fid: FID score\n3. https://github.com/naoto0804/pytorch-AdaIN: Infinite Sampler of DataLoader",
      "https://arxiv.org/abs/ https://arxiv.org/abs/1802.05637  \n\n## Requirements\n- Python 3.6.4\n- PyTorch 0.4.1\n- torchvision 0.2.1\n- NumPy: Used in FID score calculation and data loader\n- SciPy: Used in FID score calculation\n- tensorflow (optional)\n- tensorboardX (optional)\n- tqdm: Progressbar and Log\n\nIf you want to use **tensorboard** for beautiful training update visualization, please install tensorflow and tensorboardX.  \nWhen using only tensorboard, tensorflow cpu is enough.\n\n### Docker environment\nDockerfiles for pytorch 1.0 environment and tensorboard are added. PyTorch 1.0 Dockerfile requires an nvidia driver that supports CUDA 9.2.\nAlso, this dockerized environment needs some environment variables:\n- `DATA`: Path to dataset\n- `RESULTS`: Path to save results\n- `PORT`: Port number for jupyter notebook.\n\n## Dataset\n- tiny ImageNet[^1].\n\n> Tiny Imagenet has 200 classes. Each class has 500 training images, 50 validation images, and 50 test images.\n\n[^1]: https://tiny-imagenet.herokuapp.com/\n\n## Training configuration\nDefault parameters are the same as the original Chainer implementation.\n\n- to train cGAN with projection discriminator: run `train_64.py` with `--cGAN` option.\n- to train cGAN with concat discriminator: run `train_64.py` with both `--cGAN` and `--dis_arch_concat`.\n- to run without `tensorboard`, please add `--no_tensorboard`.\n- to calculate FID, add `--calc_FID` (not tested)\n- to use make discriminator relativistic, add `--relativistic_loss` or `-relloss` (not tested)\n\nTo see all the available arguments, run `python train_64.py --help`.\n\n## TODO\n- [ ] implement super-resolution (cGAN)\n\n# Acknowledgement\n1. https://github.com/pfnet-research/sngan_projection\n2. https://github.com/mseitzer/pytorch-fid: FID score\n3. https://github.com/naoto0804/pytorch-AdaIN: Infinite Sampler of DataLoader"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.8356013927728488,
        0.9278824608274014,
        0.9995991827938789
      ],
      "excerpt": "Takeru Miyato, Toshiki Kataoka, Masanori Koyama, Yuichi Yoshida \nOpenReview: https://openreview.net/forum?id=B1QRgziT- \narXiv: https://arxiv.org/abs/1802.05957 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014,
        0.9995991827938789
      ],
      "excerpt": "OpenReview: https://openreview.net/forum?id=ByS1VpgRZ \narXiv: https://arxiv.org/abs/1802.05637 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/crcrpar/pytorch.sngan_projection",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-09-02T06:15:28Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-01T08:22:39Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9895018757766195,
        0.9443244091986857,
        0.863745455598815,
        0.8889795439840518
      ],
      "excerpt": "This is unofficial PyTorch implementation of sngan_projection. \nThis does not reproduce the experiments and results reported in the paper due to the lack of GPUs. \nThis repository does some experiments on images of size 64x64. \nSome results are on issues with results label. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8023088733171313
      ],
      "excerpt": "Default parameters are the same as the original Chainer implementation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An unofficial PyTorch implementation of SNGAN (ICLR 2018) and cGANs with projection discriminator (ICLR 2018).",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/crcrpar/pytorch.sngan_projection/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 32,
      "date": "Sat, 25 Dec 2021 04:45:53 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/crcrpar/pytorch.sngan_projection/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "crcrpar/pytorch.sngan_projection",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/crcrpar/pytorch.sngan_projection/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.9608879476284057,
        0.8256570285161657
      ],
      "excerpt": "Dockerfiles for pytorch 1.0 environment and tensorboard are added. PyTorch 1.0 Dockerfile requires an nvidia driver that supports CUDA 9.2. \nAlso, this dockerized environment needs some environment variables: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8402988219330165
      ],
      "excerpt": "- PORT: Port number for jupyter notebook. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151564232696827
      ],
      "excerpt": "to use make discriminator relativistic, add --relativistic_loss or -relloss (not tested) \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8011838992300008
      ],
      "excerpt": "- DATA: Path to dataset \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8234616077254385
      ],
      "excerpt": "Tiny Imagenet has 200 classes. Each class has 500 training images, 50 validation images, and 50 test images. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8755658385497637
      ],
      "excerpt": "to train cGAN with projection discriminator: run train_64.py with --cGAN option. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8586145751915392
      ],
      "excerpt": "To see all the available arguments, run python train_64.py --help. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/crcrpar/pytorch.sngan_projection/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 Masaki Kozuki\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "28](https://github.com/crcrpar/pytorch.sngan_projection/issues/28))",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "pytorch.sngan_projection",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "crcrpar",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/crcrpar/pytorch.sngan_projection/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "crcrpar",
        "body": "- Support v1.0\r\n- Add docker environment",
        "dateCreated": "2019-02-20T13:04:15Z",
        "datePublished": "2019-02-20T13:05:59Z",
        "html_url": "https://github.com/crcrpar/pytorch.sngan_projection/releases/tag/2.0.0",
        "name": "Support PyTorch 1.0",
        "tag_name": "2.0.0",
        "tarball_url": "https://api.github.com/repos/crcrpar/pytorch.sngan_projection/tarball/2.0.0",
        "url": "https://api.github.com/repos/crcrpar/pytorch.sngan_projection/releases/15666838",
        "zipball_url": "https://api.github.com/repos/crcrpar/pytorch.sngan_projection/zipball/2.0.0"
      }
    ],
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3.6.4\n- PyTorch 0.4.1\n- torchvision 0.2.1\n- NumPy: Used in FID score calculation and data loader\n- SciPy: Used in FID score calculation\n- tensorflow (optional)\n- tensorboardX (optional)\n- tqdm: Progressbar and Log\n\nIf you want to use **tensorboard** for beautiful training update visualization, please install tensorflow and tensorboardX.  \nWhen using only tensorboard, tensorflow cpu is enough.\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 137,
      "date": "Sat, 25 Dec 2021 04:45:53 GMT"
    },
    "technique": "GitHub API"
  }
}