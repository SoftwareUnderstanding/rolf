{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Thanks to [Ram Krishnan](https://github.com/kriyative) for his\nfeedback and advice.\n\n<a name=\"h2-license\"></a>\n",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  {:isa #:{:person},  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": " {:isa #:{:person},  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8707921115408231
      ],
      "excerpt": "on graphs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:isa #:{:person}, :likes #:{:beef}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507374082549614,
        0.9507374082549614
      ],
      "excerpt": "(igraph/query eg [[:?person :isa :person]]) \n:{{:?person :mary} {:?person :john}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507374082549614
      ],
      "excerpt": "     ?person a :person \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9507374082549614
      ],
      "excerpt": "[{:person :mary} {:person :john}] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "{:john {:isa #:{:person}, :likes #:{:beef}}, \n :mary {:isa #:{:person}, :likes #:{:chicken}}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:isa #:{:person}, :likes #:{:beef}}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8422862053358879
      ],
      "excerpt": "mutable, immutable and accumulate-only graphs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "(igraph/triples-format  [[:john :isa :person] [:mary :isa :person]]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "{:john {:isa #:{:person}, :likes #:{:beef}}, \n :mary {:isa #:{:person}, :likes #:{:chicken}}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "{:john {:isa #:{:person}, :likes #:{:beef}}, \n :mary {:isa #:{:person}, :likes #:{:chicken}}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "described above: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:mary {:isa #:{:person}, :likes #:{:chicken}}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "{:john {:isa #:{:person}},  \n :mary {:isa #:{:person}, :likes #:{:chicken}}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "{:mary {:isa #:{:person}, :likes #:{:pork}}, \n :waldo {:isa #:{:person}, :likes #:{:beer}}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": "{:john {:isa #:{:person}, :likes #:{:beef}}, \n :mary {:isa #:{:person}, :likes #:{:pork :chicken}}, \n :waldo {:isa #:{:person}, :likes #:{:beer}}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:mary {:isa #:{:person}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:john {:isa #:{:person}, :likes #:{:beef}},  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:mary {:likes #:{:pork}}, :waldo {:isa #:{:person}, :likes #:{:beer}}} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488,
        0.8356013927728488
      ],
      "excerpt": " :john {:isa #:{:person}, :likes #:{:beef}}, \n :mary {:isa #:{:person}, :likes #:{:chicken}}, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8670519956929116
      ],
      "excerpt": "  traversal, and if truthy and non-empty, the traversal will end \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9243188970772274
      ],
      "excerpt": "(traverse-link p) -> (fn [g context acc queue] ...) -> [context \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8654671031158477
      ],
      "excerpt": "(maybe-traverse-link p) -> (fn [g context acc queue] ...) -> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": ":{:person :john :mary} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8780102629037448
      ],
      "excerpt": "Unique called on non-unique collection \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:isa :person, :likes :beef} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "{:isa #:{:person}, :likes #:{:beef :beer}} \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ont-app/igraph",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nThe master and develop branches\nEach repo in ont-app which is not 'under contruction' has two branches:\n\nmaster, which reflects the state of the current-release\ndevelop, which reflects the state of the next-release\n\nThe master branch should only be modified in ways that do not change\nthe behavior of the current release, mainly clarification of\ndocumentation. Changes to documenation on the master branch should\napply only to the current release.\nAny future development should work off of the develop branch.  I will\nendeavor to synchronize the develop branch with a clojars SNAPSHOT of\nthe next version (as indicated in project.clj). Features of this\nsnapshot may or may not be comprehensively tested, or documented\naccurately, but they should 'mostly work'.\nPull requests\nThis is a good tutorial for submitting PRs:\nhttps://kbroman.org/github_tutorial/pages/fork.html\nTo avoid wasted duplication of effort, please make sure there is an\nissue dedicated to the change you are looking to implement, and\nuse the issue's messaging utility to discuss it in advance. \nThe preferred sequence of events would be:\n- A draft of documentation relating to the change (in the issue)\n- Sketches of the pertinent test(s) (in the issue)\n- The actual PR, which would include finalized versions of the two\n  points above.\nCode of conduct\nBe nice.\nTo clarify, please follow these\nguidelines.\nFor complaints, please contact Eric Scott at {first-name}.{last-name}@acm.org.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-12-05T23:46:26Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-21T20:16:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Use `make-graph` to create a new graph, with an optional `:contents`\nargument.\n\n```\n> (def eg (g/make-graph))\neg\n> (eg)\n{}\n>\n> (def eg\n    (g/make-graph \n      :contents {:john {:isa #:{:person}, :likes #:{:beef}},\n                 :mary {:isa #:{:person}, :likes #:{:chicken}}}\neg\n> (eg)\n{:john {:isa #:{:person}, :likes #:{:beef}},\n :mary {:isa #:{:person}, :likes #:{:chicken}}}\n>\n```\n\nThe `:contents` argument must be in Normal Form.\n\n\n<a name=\"h4-querying\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- `(union g1 g2)` -> A new graph with all triples from both graphs\n- `(difference g1 g2)` -> A new graph with triples in g1 not also in\n  g2\n- `(intersection g1 g2)` -> A new graph with only triples shared in\n  both graphs\n\n<a name=\"union_method\"></a>\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "The `IGraph` protocol specifies the following methods:\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9588681702722313
      ],
      "excerpt": "a variety of graph-based representations (RDF, datascript, datomic, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8566191926079088,
        0.8738792628942215
      ],
      "excerpt": "It also defines a Graph datatype which implements IGraph. \nThere is a 15-minute video introduction here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9394449182630016
      ],
      "excerpt": "invoke for arities 0-3 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9437664627831827
      ],
      "excerpt": "The add-to-graph multimethod \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047
      ],
      "excerpt": "The queue \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9567588029116127
      ],
      "excerpt": "Traversal composition with t-comp \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8685639412059816
      ],
      "excerpt": "Using traversal functions as a p argument to invoke \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9937155720846946
      ],
      "excerpt": "One of the defining characteristics of Clojure is that it revolves \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8971516745050634,
        0.9926930997849784,
        0.8915486462960086,
        0.9072420969346906,
        0.9825630609301347,
        0.9496553190966213,
        0.9859596883994369
      ],
      "excerpt": "< map - a collection of associations \nThe conceit of IGraph is that there is room for a new collection \nprimitive with one higher level of expressiveness: \n< graph - a collection of named relationships between named entities \nThis is informed to a large degree by the \nRDF model, and aims to align \nwith linked data encoded in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9166471633925455,
        0.8275734155995689
      ],
      "excerpt": "This protocol defines the basic operations over a graph conceived of \nas a set of triples S-P-O, where subject S and object O typically \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.946352627802574,
        0.9535752940276565,
        0.9592955925444716
      ],
      "excerpt": "This is directly inspired by the RDF model, but the requirement that \nthese identifiers adhere strictly to RDF specifications for URIs, and \nthat literal values be restricted to a small set of scalars is relaxed \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9411316641347908
      ],
      "excerpt": "Any implemetation of this protocol, regardless of its native \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8151307046428256
      ],
      "excerpt": "These are facts about two subjects, :john and :mary with two facts \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8718198783775735
      ],
      "excerpt": "Mary is also a person, and likes chicken. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.958243285793637,
        0.9663632353275916,
        0.9725793729804096,
        0.8973178389981313
      ],
      "excerpt": "subject to a \"p-level\" description of that subject.  The normal form \nfor descriptions is a map from a property identifier to an \"o-level\" \nset of objects for said subject and property. \nWhat I'm aiming for here is a form that's \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8075946981931313
      ],
      "excerpt": "- lends itself to expressing and thinking about basic set operations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8898783756396339,
        0.8528241863147354
      ],
      "excerpt": "It is expected that while many implementations of IGraph will be \nin-memory data structures of modest size, others might be huge \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8433303002824338,
        0.9665653303741966
      ],
      "excerpt": "latter case it is always acceptable throw an ::igraph/Intractable \nfor any method that warrants it: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9106968120145313
      ],
      "excerpt": "(throw (ex-info \"Normal form for Wikidata is intractable\"  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.934730073843301,
        0.9090681934840465
      ],
      "excerpt": "The subjects method must return a lazy sequence of complete set of \nsubjects in the graph (modulo tractability): \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9713804128533586
      ],
      "excerpt": "We must be able to get the p-level description of any subject with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9724332967720153,
        0.9054984719334409
      ],
      "excerpt": "We must be able to get the o-level set of objects for any subject and \npredicate with get-o: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8556965618393534
      ],
      "excerpt": "We must be able to test for whether any particular triple is in the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.91671578271276
      ],
      "excerpt": "We must be able to query the graph using a format appropriate to the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8155162600560958,
        0.8165275331019494
      ],
      "excerpt": "In this case, the result is a set of binding maps, mapping \n:?variables to values, similar to the result set of a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9819610322735484
      ],
      "excerpt": "For comparison, here is a sketch of an equivalent SPARQL query, which \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9190434390768331,
        0.9573132367140862
      ],
      "excerpt": "With a single \"s\" argument, it must treat the argument as the subject \nof get-p-o: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8881656969917142
      ],
      "excerpt": "With two arguments \"s\" and \"p\", a set of objects must be returned: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8664824085415803
      ],
      "excerpt": "This will often be the value of get-o, but it may also accept as the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8153773726004756
      ],
      "excerpt": "With three arguments \"s\" \"p\" and \"o\", the response must be truthy: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620541636740094
      ],
      "excerpt": "There a several factors to take into account when adding or removing \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8916355746734588
      ],
      "excerpt": "native representations (such as a SPARQL endpoint with UPDATE \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8542475679534299
      ],
      "excerpt": "Naturally, other things being equal, the preferred solution is to use \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8600610557338958,
        0.918247568418485,
        0.8530873371472092
      ],
      "excerpt": "The mutability method returns one of the following values \n- ::igraph/read-only - there is no means for altering the contents of \n  the graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8626219357845305
      ],
      "excerpt": "- ::igraph/accumulate-only - the graph implements IGraphAccumulateOnly, the approach used in Datomic \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9572462553435915
      ],
      "excerpt": "IGraph defines a multimethod add-to-graph, dispatched on the type of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8729418091901899
      ],
      "excerpt": "Finally, we have :vector-of-vectors: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9621118264337597,
        0.9402240783385387
      ],
      "excerpt": "Any implementation of IGraph should support adding to the graph in all \nof these formats. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.810683155422887
      ],
      "excerpt": "IGraph also defines multimethod remove-from-graph, dispatched on the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8159094219178599
      ],
      "excerpt": "vector with fewer than 3 elements: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9269679575057179,
        0.8703006813199592,
        0.8661889636659776,
        0.885787268724476,
        0.8426449843210396
      ],
      "excerpt": "triples-removal-format assigns the :vector-of-vectors flag to a \nvector of either :vector or :underspecified-vector. All \nimplementations of IGraph should support each of these flags. \nThis allows us to subtract any format that could also be added, plus \nall [s * *] or all [s p *]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9281170069265935
      ],
      "excerpt": "An add or subtract operation to an immutable graph returns a cheap \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9175856925509674,
        0.9422259948680612
      ],
      "excerpt": "Calling (add g to-add) must return an immutable graph such that the \ngraph now contains to-add. Any triples in to-add which are already \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9785223277705349
      ],
      "excerpt": "See the notes above about the add-to-graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9484616479480085,
        0.8413701330801651
      ],
      "excerpt": "Typically adding to a graph in code is most easily expressed using a \nvector or a vector of vectors: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8999555366619142
      ],
      "excerpt": "We can use the Normal Form of one graph to add it to another: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8865237707368505,
        0.9675927942319702
      ],
      "excerpt": "The multimethod remove-from-graph supports the subtract operation, \ndispatched on the type of the graph and triples-removal-format, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.881105883400405
      ],
      "excerpt": "repositories. To support this, the IGraphMutable protocol provides \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9679334107219487
      ],
      "excerpt": "The add-to-graph and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8792211976982189
      ],
      "excerpt": "same, with the exception that the graph returned is the same object, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8584153709773089
      ],
      "excerpt": "(add! g to-add) -> g, where g is both the argument and return value. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9516152238563684
      ],
      "excerpt": "(subtract! g to-subtract) -> g, where g is both the argument and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9601282194543458
      ],
      "excerpt": "A graph whose native representation is based on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9316781712886815
      ],
      "excerpt": "\"Accumulate-only\" approach to adding and removing from a graph. To \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9107598873170449,
        0.9640793006614616,
        0.8309842997154062,
        0.8001354768403321,
        0.9679334107219487
      ],
      "excerpt": "claim (corresponding to the datomic 'add' operation), and \nretract. In this scheme the state of the graph can be rolled back to \nany point in its history. See the Datomic \ndocumentation for details. \nThe add-to-graph and \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.954102654850185,
        0.8668242183697622,
        0.8634044115741415
      ],
      "excerpt": "same, with the exception that the graph returned now points to the \nmost recent state of the graph after making the modification. Any \ngiven instantiation of the graph will remain immutable. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9874829081668872,
        0.8307613673881313
      ],
      "excerpt": "(claim g to-add) -> g', where g is an append-only graph, and \ng' now points to the most recent state of g's \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.988999935032396,
        0.8307613673881313
      ],
      "excerpt": "(retract g to-retract) -> g', where g is an append-only graph, and \ng' now points to the most recent state of g's \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9061987506551304
      ],
      "excerpt": "It will make sense for many implementations of IGraph also to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9388190833436468
      ],
      "excerpt": "For purposes of demonstration, let's assume a second graph other-eg: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9004100373370231
      ],
      "excerpt": "allows the user to create aggregations over a sequence by providing a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.812643787965916,
        0.9678959991113526,
        0.8690787874102931
      ],
      "excerpt": "IGraph defines a traverse function to allow the user to create \naggregations over the contents of a graph by providing a traversal \nfunction, which is analogous to a reducer function, but is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8134163843042052
      ],
      "excerpt": "queue is empty, returning the final value for acc. Each call to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.908925214220865,
        0.973431255903476
      ],
      "excerpt": "and queue. \nTo illustrate traversal, let's expand on our eg graph by adding some \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8972976412077138
      ],
      "excerpt": "Assume we have a graph called 'eg-with-types': \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9019691904548591,
        0.9888465398216639
      ],
      "excerpt": "Our eg-with-types now provides a bit more context for what's going \non with our heroes John and Mary. Note that :isa and :subClassOf \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8146532808494218
      ],
      "excerpt": "Here's an example of how the traverse function works, starting with \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9741576205859025
      ],
      "excerpt": "accumulates all :subClassOf links, starting with an initial queue of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.951720728415404,
        0.8229317075484207
      ],
      "excerpt": "The arguments for traverse are \n- g - an invariant graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8920557312608144
      ],
      "excerpt": "  defining the logic of each step in the traversal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8089884058271688,
        0.8490037945672047
      ],
      "excerpt": "- acc - (optional) accumulates the resulting value of the traversal. Default is []. \n- queue - the starting queue \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8724503070565639
      ],
      "excerpt": "The traversal function takes 4 arguments and returns a vector of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8594839203878308
      ],
      "excerpt": "subClassOf* leaves unchanged.  Context is used by traverse to avoid \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8938489292986601
      ],
      "excerpt": "The third argument (and second element returned) is the value to be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.991606409567668
      ],
      "excerpt": "The fourth argument (and third element returned) is the traversal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9776438977891959
      ],
      "excerpt": "sense. An empty queue signals and end of the traversal, at which point \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047
      ],
      "excerpt": "     (conj acc elt)         ;; updating the accumulator \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8403307186368448,
        0.8230696171396876
      ],
      "excerpt": "map containing key-values which may inform the course of the \ntraversal, but are not part of the accumulated value. This will \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8825723280255307,
        0.9589177949481111
      ],
      "excerpt": "- :history set by traverse, and updated to hold all elements \n  encountered in the course of the traversal. In order to avoid \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8817023430366006,
        0.8272914044235107
      ],
      "excerpt": "  re-appear at the head of the queue. \nThe traverse function also supports these optional keys in the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8810767604621169
      ],
      "excerpt": "  the head of the queue, which will override :history. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8750842375951864
      ],
      "excerpt": "blackboard to communicate between iterations of the traversal. For \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9727791117813305
      ],
      "excerpt": "of heuristics, details of which are stored in the context. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8119655230243602,
        0.9786335482171563
      ],
      "excerpt": "The queue argument must be sequential, but is otherwise \nunrestricted. An empty queue signals the end of the traversal, at \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8011128940194403
      ],
      "excerpt": "Note that conj-ing to a vector in the traversal function suggests a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9198996485854902
      ],
      "excerpt": "logic to prune and re-order the queue to optimize the traversal. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8800733767365869
      ],
      "excerpt": "IGraph provides utilities to express several common types of traversal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9715048101733081,
        0.8886034359529978
      ],
      "excerpt": "  s.t. any s in the queue is associated with o through zero or \n  more p links. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9891785691729262
      ],
      "excerpt": "queue, (g s p o) is truthy: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8868545358163714
      ],
      "excerpt": "Matches 0 or 1 occurrences of p: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.953485002007626
      ],
      "excerpt": "Where ps is one or more traversal functions, merging all of their outputs. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8104185338686027
      ],
      "excerpt": "- None of the component functions manipulate the traversal context \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8332121908107626
      ],
      "excerpt": "  serve as the initial queue of the component function that follows \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8905094919595311
      ],
      "excerpt": "(def instance-of  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8637647605729591
      ],
      "excerpt": "(igraph/traverse eg-with-types instance-of #:{} [:john]) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9215503124563077,
        0.9132020199693504
      ],
      "excerpt": "meet the criteria above, then instead of passing to traversal-comp a \nvector of traversal functions, you pass in a map with the following \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9263286900739733
      ],
      "excerpt": "A call to (t-comp [:a :b :c]) is equivalent to calling (t-comp \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9481685814250306
      ],
      "excerpt": "flow of contexts between each stage of traversal, and over the flow of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9284820650054297
      ],
      "excerpt": "However, most of the time, the short form is sufficient, and at this point, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625550790243968
      ],
      "excerpt": "This is a vector of traversal function specifications. Each traversal \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9515720714027687,
        0.8730759549486488,
        0.9128803613565847
      ],
      "excerpt": "interpret a map with the parameters described in the next section. \nIf the spec is a keyword without an entry in the long-form map, it is \nassumed to be a candidate for an implicit traverse-link, i.e. a graph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8945483746086471
      ],
      "excerpt": "  the current stage of traversal may be of interest to subsequent \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9604529062391983
      ],
      "excerpt": "Two of these functions involve specification of a p parameter: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9621807438488014
      ],
      "excerpt": "This is informed by a multimethod dispatched on whether p is a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8186513125543728
      ],
      "excerpt": "these two method declarations: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8226525502478987
      ],
      "excerpt": "     :cljs cljs.core/IFn) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9545752598964334
      ],
      "excerpt": "the signature of a traversal function, and the output of the method \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9818195349852303
      ],
      "excerpt": "of the graph. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9597280806045387,
        0.8608302242669352
      ],
      "excerpt": "has the advantage of ensuring that the normal form is as simple and \nregular as possible, and makes it easy to think about set operations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8328588972759118
      ],
      "excerpt": "many cases where the descriptive map's keys reliably map to a single \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8498605475360206
      ],
      "excerpt": "The following utilities are provided to help with this: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8620526459927117
      ],
      "excerpt": "  description into a simple k-v mappings wherever only a single v \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9653809241140564
      ],
      "excerpt": "(normalize-flat-description m) is the inverse of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8862146896516214
      ],
      "excerpt": "argument. Default on-ambiguity throws ex-info of type \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9708020534427487
      ],
      "excerpt": "Sometimes defining the as an alias for unique reads better, and is \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8696649840048367
      ],
      "excerpt": "(the (eg-with-types :john :isa)) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9670665219960479
      ],
      "excerpt": "This is the inverse of flatten-description: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9414112597816567,
        0.9369238623194086,
        0.8720566063127035
      ],
      "excerpt": "In general writing the normal form of a graph to a stream and applying \nthe reader to it on the other end should be fairly \nstraightforward. Any predicates bearing reader-choking objects will of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9663251097445706
      ],
      "excerpt": "At this point, only the :clj platform is directly supported with a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8879161697881331
      ],
      "excerpt": "(reduce-spo f acc g) -> acc', such that f is called on each \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9496464672017684
      ],
      "excerpt": "three other libraries in the ont-app project which implement this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9822921109390643
      ],
      "excerpt": "Other implementations are planned, and I'd be interested to learn of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9536092700485455
      ],
      "excerpt": "deftype is a very lightweight implementation of IGraph. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.957687684210299,
        0.9750424256945992,
        0.9129848084343453
      ],
      "excerpt": "Querying is done with a very simple vector-of-triples graph pattern \nusing keywords starting with \":?\" to serve as variables. It returns an \nunordered set of binding maps. This is very minimalistic. Any \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9628073455360605,
        0.9501178588401498
      ],
      "excerpt": "language is SPARQL. \nKeyword identifiers are expected to be namespaced, and rely on the ont-app/vocabulary library, which uses namespace metadata to intercede between Clojure namespaces and RDF namespaces. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.963518157858245
      ],
      "excerpt": "schema declarations. Query language is datalog. Immutable, with set \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9803827040688732
      ],
      "excerpt": "This implements IGraph for the Datomic Client API. The query language is datalog. Mutability model is Accumulate Only. Set operations are not supported. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9123995981194574
      ],
      "excerpt": "Ports to loom, ubergraph, and other graph-oriented libraries  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8570999035502532,
        0.9608803686274757
      ],
      "excerpt": "  (for weights and such). \nPorts to table-based representations \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9563182988915631
      ],
      "excerpt": "Some kind of a scheme to bring all the various query formats under a \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Defines a protocol for viewing data as Subject-Predicate-Object graphs, with a simple typedef implementing same",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ont-app/igraph/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 20 Dec 2021 16:37:57 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ont-app/igraph/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "ont-app/igraph",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9299290655110202
      ],
      "excerpt": "<a name=\"h2-dependencies\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h2-igraph-protocol\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891401888405708,
        0.8891401888405708
      ],
      "excerpt": "(get-p-o g s) -> {p #{o...} ...} \n(get-o g s p) -> #{o ...} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Normal_form\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"subjects_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9512791017673633
      ],
      "excerpt": "<a name=\"get-p-o_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891401888405708
      ],
      "excerpt": "(igraph/get-p-o eg :john) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9512791017673633
      ],
      "excerpt": "<a name=\"get-o_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8956402685769427
      ],
      "excerpt": "predicate with get-o: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8891401888405708
      ],
      "excerpt": "(igraph/get-o eg :john :isa) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"ask_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"query_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8540049387266615
      ],
      "excerpt": "  \"PREFIX : http://path/to/my/ns#:  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"invoke_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Content_Manipulation\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"mutability_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"IGraphImmutable\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"add_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"subtract_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"IGraphMutable\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.835470049596675
      ],
      "excerpt": "<a name=\"add!_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"subtract!_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"IGraphAccumulateOnly\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"claim_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"retract_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h2-igraphset-protocol\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"intersection_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"difference_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Traversal\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"traverse_function\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Traversal_functions\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"queue\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Traversal_utilities\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h4-transitive-closure\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h4-traverse-link\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h4-maybe-traverse-link\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8928290168552286
      ],
      "excerpt": "<a name=\"h4-traverse-or\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Traversal_composition\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h4-t-comp-short\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9249132962004118
      ],
      "excerpt": "the following criteria: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8057675898656085
      ],
      "excerpt": "{:path [:a :b :c]}). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8378080875653302,
        0.8308591039291715
      ],
      "excerpt": ":doc (optional) - a docstring \n:into (optional) - a container to which the output should be coerced \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"i-o\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"Other_utilities\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h3-sparql-client\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "<a name=\"h3-datomic-client\"></a> \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Normal_form\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"subjects_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"ask_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"query_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"invoke_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Content_Manipulation\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"mutability_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"IGraphImmutable\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"add_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"subtract_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"IGraphMutable\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.842306715728274
      ],
      "excerpt": "<a name=\"add!_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"subtract!_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8370595022227315
      ],
      "excerpt": "return value. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"IGraphAccumulateOnly\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"claim_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"retract_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"h2-igraphset-protocol\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"intersection_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"difference_method\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Traversal\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"traverse_function\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Traversal_functions\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8091000396206154
      ],
      "excerpt": "traverse will return the value of the accumulator. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"queue\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8567200534291117
      ],
      "excerpt": "which point traverse will return the accumulated value. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9168185848832673
      ],
      "excerpt": "depth-first tranversal. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Traversal_utilities\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"h4-transitive-closure\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Traversal_composition\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8052035711049168
      ],
      "excerpt": "<a name=\"h4-t-comp-short\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8446581836191004
      ],
      "excerpt": "<a name=\"traversal-fn-as-p\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8326386154991443
      ],
      "excerpt": "will be the value of its traversal, starting with queue [s]. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8218807332494926
      ],
      "excerpt": "<a name=\"cardinality-1_utilities\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8731562459058029
      ],
      "excerpt": "scalar value. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8731562459058029
      ],
      "excerpt": "  value \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8064854070293059
      ],
      "excerpt": "argument. Default on-ambiguity throws ex-info of type \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"i-o\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9269838380512232
      ],
      "excerpt": "<a name=\"h3-write-to-file\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9277270497376829
      ],
      "excerpt": "<a name=\"h3-read-from-file\"></a> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "<a name=\"Other_utilities\"></a> \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/ont-app/igraph/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Clojure"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Eclipse Public License 1.0",
      "url": "https://api.github.com/licenses/epl-1.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC\\nLICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM\\nCONSTITUTES RECIPIENT\\'S ACCEPTANCE OF THIS AGREEMENT.\\n\\n1. DEFINITIONS\\n\\n\"Contribution\" means:\\n\\na) in the case of the initial Contributor, the initial code and\\ndocumentation distributed under this Agreement, and\\n\\nb) in the case of each subsequent Contributor:\\n\\ni) changes to the Program, and\\n\\nii) additions to the Program;\\n\\nwhere such changes and/or additions to the Program originate from and are\\ndistributed by that particular Contributor. A Contribution \\'originates\\' from\\na Contributor if it was added to the Program by such Contributor itself or\\nanyone acting on such Contributor\\'s behalf. Contributions do not include\\nadditions to the Program which: (i) are separate modules of software\\ndistributed in conjunction with the Program under their own license\\nagreement, and (ii) are not derivative works of the Program.\\n\\n\"Contributor\" means any person or entity that distributes the Program.\\n\\n\"Licensed Patents\" mean patent claims licensable by a Contributor which are\\nnecessarily infringed by the use or sale of its Contribution alone or when\\ncombined with the Program.\\n\\n\"Program\" means the Contributions distributed in accordance with this\\nAgreement.\\n\\n\"Recipient\" means anyone who receives the Program under this Agreement,\\nincluding all Contributors.\\n\\n2. GRANT OF RIGHTS\\n\\na) Subject to the terms of this Agreement, each Contributor hereby grants\\nRecipient a non-exclusive, worldwide, royalty-free copyright license to\\nreproduce, prepare derivative works of, publicly display, publicly perform,\\ndistribute and sublicense the Contribution of such Contributor, if any, and\\nsuch derivative works, in source code and object code form.\\n\\nb) Subject to the terms of this Agreement, each Contributor hereby grants\\nRecipient a non-exclusive, worldwide, royalty-free patent license under\\nLicensed Patents to make, use, sell, offer to sell, import and otherwise\\ntransfer the Contribution of such Contributor, if any, in source code and\\nobject code form.  This patent license shall apply to the combination of the\\nContribution and the Program if, at the time the Contribution is added by the\\nContributor, such addition of the Contribution causes such combination to be\\ncovered by the Licensed Patents. The patent license shall not apply to any\\nother combinations which include the Contribution. No hardware per se is\\nlicensed hereunder.\\n\\nc) Recipient understands that although each Contributor grants the licenses\\nto its Contributions set forth herein, no assurances are provided by any\\nContributor that the Program does not infringe the patent or other\\nintellectual property rights of any other entity. Each Contributor disclaims\\nany liability to Recipient for claims brought by any other entity based on\\ninfringement of intellectual property rights or otherwise. As a condition to\\nexercising the rights and licenses granted hereunder, each Recipient hereby\\nassumes sole responsibility to secure any other intellectual property rights\\nneeded, if any. For example, if a third party patent license is required to\\nallow Recipient to distribute the Program, it is Recipient\\'s responsibility\\nto acquire that license before distributing the Program.\\n\\nd) Each Contributor represents that to its knowledge it has sufficient\\ncopyright rights in its Contribution, if any, to grant the copyright license\\nset forth in this Agreement.\\n\\n3. REQUIREMENTS\\n\\nA Contributor may choose to distribute the Program in object code form under\\nits own license agreement, provided that:\\n\\na) it complies with the terms and conditions of this Agreement; and\\n\\nb) its license agreement:\\n\\ni) effectively disclaims on behalf of all Contributors all warranties and\\nconditions, express and implied, including warranties or conditions of title\\nand non-infringement, and implied warranties or conditions of merchantability\\nand fitness for a particular purpose;\\n\\nii) effectively excludes on behalf of all Contributors all liability for\\ndamages, including direct, indirect, special, incidental and consequential\\ndamages, such as lost profits;\\n\\niii) states that any provisions which differ from this Agreement are offered\\nby that Contributor alone and not by any other party; and\\n\\niv) states that source code for the Program is available from such\\nContributor, and informs licensees how to obtain it in a reasonable manner on\\nor through a medium customarily used for software exchange.\\n\\nWhen the Program is made available in source code form:\\n\\na) it must be made available under this Agreement; and\\n\\nb) a copy of this Agreement must be included with each copy of the Program.\\n\\nContributors may not remove or alter any copyright notices contained within\\nthe Program.\\n\\nEach Contributor must identify itself as the originator of its Contribution,\\nif any, in a manner that reasonably allows subsequent Recipients to identify\\nthe originator of the Contribution.\\n\\n4. COMMERCIAL DISTRIBUTION\\n\\nCommercial distributors of software may accept certain responsibilities with\\nrespect to end users, business partners and the like. While this license is\\nintended to facilitate the commercial use of the Program, the Contributor who\\nincludes the Program in a commercial product offering should do so in a\\nmanner which does not create potential liability for other Contributors.\\nTherefore, if a Contributor includes the Program in a commercial product\\noffering, such Contributor (\"Commercial Contributor\") hereby agrees to defend\\nand indemnify every other Contributor (\"Indemnified Contributor\") against any\\nlosses, damages and costs (collectively \"Losses\") arising from claims,\\nlawsuits and other legal actions brought by a third party against the\\nIndemnified Contributor to the extent caused by the acts or omissions of such\\nCommercial Contributor in connection with its distribution of the Program in\\na commercial product offering.  The obligations in this section do not apply\\nto any claims or Losses relating to any actual or alleged intellectual\\nproperty infringement. In order to qualify, an Indemnified Contributor must:\\na) promptly notify the Commercial Contributor in writing of such claim, and\\nb) allow the Commercial Contributor to control, and cooperate with the\\nCommercial Contributor in, the defense and any related settlement\\nnegotiations. The Indemnified Contributor may participate in any such claim\\nat its own expense.\\n\\nFor example, a Contributor might include the Program in a commercial product\\noffering, Product X. That Contributor is then a Commercial Contributor. If\\nthat Commercial Contributor then makes performance claims, or offers\\nwarranties related to Product X, those performance claims and warranties are\\nsuch Commercial Contributor\\'s responsibility alone. Under this section, the\\nCommercial Contributor would have to defend claims against the other\\nContributors related to those performance claims and warranties, and if a\\ncourt requires any other Contributor to pay any damages as a result, the\\nCommercial Contributor must pay those damages.\\n\\n5. NO WARRANTY\\n\\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON\\nAN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER\\nEXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR\\nCONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A\\nPARTICULAR PURPOSE. Each Recipient is solely responsible for determining the\\nappropriateness of using and distributing the Program and assumes all risks\\nassociated with its exercise of rights under this Agreement , including but\\nnot limited to the risks and costs of program errors, compliance with\\napplicable laws, damage to or loss of data, programs or equipment, and\\nunavailability or interruption of operations.\\n\\n6. DISCLAIMER OF LIABILITY\\n\\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY\\nCONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION\\nLOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\nARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE\\nEXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY\\nOF SUCH DAMAGES.\\n\\n7. GENERAL\\n\\nIf any provision of this Agreement is invalid or unenforceable under\\napplicable law, it shall not affect the validity or enforceability of the\\nremainder of the terms of this Agreement, and without further action by the\\nparties hereto, such provision shall be reformed to the minimum extent\\nnecessary to make such provision valid and enforceable.\\n\\nIf Recipient institutes patent litigation against any entity (including a\\ncross-claim or counterclaim in a lawsuit) alleging that the Program itself\\n(excluding combinations of the Program with other software or hardware)\\ninfringes such Recipient\\'s patent(s), then such Recipient\\'s rights granted\\nunder Section 2(b) shall terminate as of the date such litigation is filed.\\n\\nAll Recipient\\'s rights under this Agreement shall terminate if it fails to\\ncomply with any of the material terms or conditions of this Agreement and\\ndoes not cure such failure in a reasonable period of time after becoming\\naware of such noncompliance. If all Recipient\\'s rights under this Agreement\\nterminate, Recipient agrees to cease use and distribution of the Program as\\nsoon as reasonably practicable. However, Recipient\\'s obligations under this\\nAgreement and any licenses granted by Recipient relating to the Program shall\\ncontinue and survive.\\n\\nEveryone is permitted to copy and distribute copies of this Agreement, but in\\norder to avoid inconsistency the Agreement is copyrighted and may only be\\nmodified in the following manner. The Agreement Steward reserves the right to\\npublish new versions (including revisions) of this Agreement from time to\\ntime. No one other than the Agreement Steward has the right to modify this\\nAgreement. The Eclipse Foundation is the initial Agreement Steward. The\\nEclipse Foundation may assign the responsibility to serve as the Agreement\\nSteward to a suitable separate entity. Each new version of the Agreement will\\nbe given a distinguishing version number. The Program (including\\nContributions) may always be distributed subject to the version of the\\nAgreement under which it was received. In addition, after a new version of\\nthe Agreement is published, Contributor may elect to distribute the Program\\n(including its Contributions) under the new version. Except as expressly\\nstated in Sections 2(a) and 2(b) above, Recipient receives no rights or\\nlicenses to the intellectual property of any Contributor under this\\nAgreement, whether expressly, by implication, estoppel or otherwise. All\\nrights in the Program not expressly granted under this Agreement are\\nreserved.\\n\\nThis Agreement is governed by the laws of the State of New York and the\\nintellectual property laws of the United States of America. No party to this\\nAgreement will bring a legal action under this Agreement more than one year\\nafter the cause of action arose. Each party waives its rights to a jury trial\\nin any resulting litigation.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<img src=\"http://ericdscott.com/NaturalLexiconLogo.png\" alt=\"NaturalLexicon logo\" :width=100 height=100/> ont-app/igraph",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "igraph",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "ont-app",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/ont-app/igraph/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "This is deployed to [clojars](https://clojars.org/ont-app/igraph):\n\n[![Clojars\nProject](https://img.shields.io/clojars/v/ont-app/igraph.svg)](https://clojars.org/ont-app/igraph)\n\n```\n[ont-app/igraph \"0.1.7\"]\n```\n\nRequire thus:\n```\n(:require \n  [ont-app.igraph.core :as igraph] ;; for the IGraph protocol and related stuff\n  [some.igraph.implementation ...] ;; implements IGraph\n  )\n           \n```\n\n<a name=\"h2-motivation\"></a>\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 75,
      "date": "Mon, 20 Dec 2021 16:37:57 GMT"
    },
    "technique": "GitHub API"
  },
  "support": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- `(g)` = `(normal-form g)`\n- `(g s)` -> {p #{o...} ...}\n- `(g s p)` -> #{o ...}\n- `(g s p o)` -> truthy\n\n<a name=\"Member_access\"></a>\n",
      "technique": "Header extraction"
    }
  ],
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To keep things simple and readable, none of the keywords used in these\nexamples are [namespaced](https://blog.jeaye.com/2017/10/31/clojure-keywords/#namespaced-keywords). \n\nIn practice you will probably want to used namespaced keywords, and\nsome implementations of IGraph, e.g. those that interact directly with\nRDF-based representations, will expect them.\n\n\n<a name=\"h4-tractability\"></a>\n",
      "technique": "Header extraction"
    }
  ]
}