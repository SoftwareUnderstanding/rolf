{
  "citation": [
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "@prefix fno: https://w3id.org/function/ontology# . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9995149739092947,
        0.9995448007983139,
        0.9983889793043038
      ],
      "excerpt": "        <ex:title lang=\"en\">Harry Potter</ex:title> \n        <ex:author>J K. Rowling</ex:author> \n        <ex:year>2005</ex:year> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8570858944844316
      ],
      "excerpt": "    rr:template \"http://www.example.com/{./ex:title}\" ; \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/carml/carml",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2017-09-19T15:38:54Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-18T06:53:40Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "CARML is a java library that transforms structured sources to RDF based as declared in and [RML](http://rml.io) mapping,\nin accordance with the [RML spec](http://rml.io/spec.html).\n\nThe best place to start learning about RML is at the [source](http://rml.io), but basically RML is defined as a superset\nof [R2RML](https://www.w3.org/TR/r2rml/) which is a W3C recommendation that describes a language for expressing mappings\nfrom relational databases to RDF datasets. RML allows not only the expression of mappings for relational databases, but\ngeneralizes this to any structured source. All you need is a way to iterate over and query the source.\n\n> NOTE: If you have questions about RML in general, the best place to ask them is at\n> [RML questions](https://github.com/kg-construct/rml-questions).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9669588925922763
      ],
      "excerpt": "When it comes to non-database sources, the current RML spec only supports the specification of file based sources in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.981524429965416
      ],
      "excerpt": "To this end CARML introduces the notion of 'Named Streams'. Which follows the ontology \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8389071694092931
      ],
      "excerpt": "Note that it is possible to map several input streams. When combining named input streams with an unnamed input stream,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9853301142064474,
        0.9044682033459046
      ],
      "excerpt": "A recent development related to RML is the possibility of adding functions to the mix. This is a powerful extension that \nincreases the expressivity of mappings immensely. Do note that the function ontology is still under development at \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.966451707943602,
        0.8796584707046953,
        0.9046379676650037
      ],
      "excerpt": "<!--- TODO: explain that the function execution is a finisher, that is it runs the normal mapping, which creates the  \nfunction execution triples, and the described execution is in turn evaluated and results in the term map value. ---> \nThe way it works is, you describe the execution of a function in terms of the Function Ontology (FnO) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9203925531488927,
        0.8674994432058881,
        0.9543790816892519,
        0.9735910111532454,
        0.9220280301389862,
        0.8883944465898483
      ],
      "excerpt": "This defines an instance ex:sumFunction of class fno:Function that is able to compute the sum of two values provided \nas parameters of the function at execution time. \nIt also describes an instance ex:sumExecution of fno:execution, which fno:executes ex:sumFunction which descibes \nan instance of an execution of the defined sum function. In this case with parameters 2 and 4. \nTo be able to use this in RML mappings we use executions of instances of fno:Function to determine the value of a term \nmap. The execution of a function can be seen as a post-processing step in the evaluation of a term map. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8610591942584442
      ],
      "excerpt": "string value of the function IRI, and the function parameters with @FnoParam, providing the string value of the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9022041798943244
      ],
      "excerpt": "the RmlMapper#addFunctions method. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9979703259006785,
        0.9102058114082939,
        0.8257114774399681,
        0.8766694394716519
      ],
      "excerpt": "It is recommended to describe and publish new functions in terms of FnO for interpretability of mappings, and, possibly, \nreuse of functions, but it's not mandatory for use in CARML. \nNote that it is currently possible to specify and use function executions as parameters of other function executions in \nCARML, although this is not (yet?) expressible in FnO. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.897034968000865
      ],
      "excerpt": "expressions. In order to convey these expressions to the CARML engine, CARML introduces the class carml:XmlDocument \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9340167189552339
      ],
      "excerpt": "See the RML implementation Report for how CARML does in \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A pretty sweet RML engine, for RDF.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/carml/carml/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 18,
      "date": "Mon, 20 Dec 2021 14:15:10 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/carml/carml/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "carml/carml",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.9043929270298233
      ],
      "excerpt": "  rml:source [ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096104964140866
      ],
      "excerpt": "    .build(); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096104964140866
      ],
      "excerpt": "    .build(); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9096104964140866
      ],
      "excerpt": "    .build(); \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8979001516401667
      ],
      "excerpt": "one can now use the following mapping, declaring namespaces, to use them in XPath expressions: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053804429658877
      ],
      "excerpt": "@prefix carml: http://carml.taxonic.com/carml/ . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9043929270298233
      ],
      "excerpt": "    rml:source [ \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.853492186136904
      ],
      "excerpt": "  rr:predicate ex:total ; \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8446471278952762
      ],
      "excerpt": "Model result=mapper.mapToModel(); \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/carml/carml/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Taxonic B.V., 2020 Skemu\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/carml/carml.github.io/master/carml-logo.png\" height=\"100\" alt=\"carml\">\n</p>\n\nCARML",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "carml",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "carml",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/carml/carml/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "## Release notes:\r\n* add map method with model parameter to rmlmapper (#108 )\r\n* bugfix: Fix concurrency issue in RDF object mapper (#105 )\r\n",
        "dateCreated": "2021-03-22T19:26:06Z",
        "datePublished": "2021-03-22T19:43:25Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.3.2",
        "name": "v0.3.2",
        "tag_name": "v0.3.2",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.3.2",
        "url": "https://api.github.com/repos/carml/carml/releases/40176607",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.3.2"
      },
      {
        "authorType": "User",
        "author_name": "victorlouw",
        "body": "# Release notes\r\n\r\nThis is an experimental release which adds an implementation of nested mappings as well as an implementation of \"merge super\" in logical sources. See IO test cases 21-30 for examples.\r\n",
        "dateCreated": "2021-02-22T08:28:45Z",
        "datePublished": "2021-02-22T11:49:30Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.3.2-exp",
        "name": "v0.3.2-exp (experimental)",
        "tag_name": "v0.3.2-exp",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.3.2-exp",
        "url": "https://api.github.com/repos/carml/carml/releases/38410972",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.3.2-exp"
      },
      {
        "authorType": "User",
        "author_name": "victorlouw",
        "body": "# Release notes\r\n\r\n- Allow join in case of multiple parent values (#98)\r\n- Fix join condition omitted when child reference/expression yields no results (#102)",
        "dateCreated": "2020-10-31T15:58:40Z",
        "datePublished": "2020-10-31T16:49:51Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.3.1",
        "name": "v0.3.1",
        "tag_name": "v0.3.1",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.3.1",
        "url": "https://api.github.com/repos/carml/carml/releases/33307407",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.3.1"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "This release introduces several substantial changes to CARML, brought about by the introduction of the RML test cases, and solves several other raised issues.\r\nThe release brings CARML as close as currently possible to accordance with the current [RML test cases](https://rml.io/test-cases/) (barring some [issues](https://github.com/RMLio/rml-test-cases/issues?q=is%3Aissue+author%3Apmaria+) raised by us).\r\n\r\n## Breaking changes\r\n\r\n### Casing of hex numbers in IRI encoding [#84] (breaking change in output generation)\r\nIn previous releases CARML percent encoded IRIs with lower case hex numbers. Although lower case and upper case hex percent encodings are equivalent, the [RML test cases](https://rml.io/test-cases/) expect upper case hex percent encodings for encoded IRIs, as recommended in [RFC3987](https://www.ietf.org/rfc/rfc3987.html).\r\n\r\nThis releases changes the default behavior of CARML to percent encode IRIs with upper case hex numbers.\r\n\r\nFor example given input `foo,bar`, previous releases would've encoded this as `foo%2cbar`, whereas the current release will encode this as `foo%2Cbar`.\r\n\r\n#### Output backwards compatibility\r\nTo provide output backwards compatibility a `RmlMapper.Builder` option `iriUpperCasePercentEncoding` is provided which defaults to true.\r\n\r\nIf you want to continue encoding IRIs with lowercase hex you can use this option as follows:\r\n\r\n```java\r\n  RmlMapper.newBuilder()\r\n    ...\r\n      // specify casing of hex numbers in IRI percent encoding (default = true)\r\n      // added for backwards compatibility with IRI encoding up until v0.2.3\r\n    .iriUpperCasePercentEncoding(false)\r\n    .build();\r\n```\r\n\r\n### New default base IRI\r\nIn previous releases the default base IRI used for IRI generating TermMaps was `http://none.com/`. In this release, for compliance with the [RML test cases](https://rml.io/test-cases/), this base IRI is changed to `http://example.com/base/`. The default base IRI is used when IRI term must be generated for a non IRI value.\r\n\r\n### Notes on RDF4J dependency\r\nThis release uses a new major version of RDF4J (3.4.0). This may lead to breaking changes in your project, depending on how you use CARML.\r\n\r\n## Deprecated constructs\r\n\r\n### MultiTermMap extensions deprecated\r\nIn this release, the `MultiTermMap` extension is deprecated. Now, when a predicate map or object map function generates multiple values, these are accepted with the default RML/R2RML constructs (rr:PredicateMap, rr:ObjectMap). It is recommended to update your mappings accordingly.\r\n\r\nThe following is an overview of what should be updated, if used.\r\n\r\n| deprecated construct     | RML construct to use |\r\n|--------------------------|----------------------|\r\n| carml:multiReference     | rml:reference        |\r\n| carml:multiTemplate      | rr:template          |\r\n| carml:multiJoinCondition | rr:joinCondition     |\r\n| carml:multiFunctionValue | fnml:functionValue   |\r\n\r\n### FnO URI\r\nThe FnO ontology, used to execute RML functions, has a new URI https://w3id.org/function/ontology#. The old URI http://semweb.datasciencelab.be/ns/function# is deprecated in this release. It is recommended to update your mappings to the new URI.\r\n\r\n## Release Notes\r\n* Support for `rr:defaultGraph` (https://github.com/carml/carml/commit/2a08b8d5e8adf1cba7309632a9ce29fc1267e4b6)\r\n* upper case hex nr percent encoding for IRIs (#84)\r\n* check generated language tags for well-formedness (#85)\r\n* improve IRI validation and change default base IRI (https://github.com/carml/carml/commit/c6d4ef5596766f08eecd7ac8ecaf137cb6448d55bb)\r\n* deprecate `MultiTermMap` extension (#52)\r\n* use new FNO IRI and deprecate old one (#83)\r\n* check for empty JSONPath results in iterator expressions (#86)\r\n* remove maxCharsPerColumn limit in CSV mapping (#93)\r\n* improved logging and clearer exceptions\r\n",
        "dateCreated": "2020-09-11T09:23:08Z",
        "datePublished": "2020-09-11T09:41:12Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.3.0",
        "name": "v0.3.0",
        "tag_name": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.3.0",
        "url": "https://api.github.com/repos/carml/carml/releases/31104462",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.3.0"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "## Release notes:\r\nbugfix: Check for null return value before iri encoding a FunctionMap value (#68)",
        "dateCreated": "2018-11-17T13:06:52Z",
        "datePublished": "2018-11-17T13:13:46Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.2.3",
        "name": "v0.2.3",
        "tag_name": "v0.2.3",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.2.3",
        "url": "https://api.github.com/repos/carml/carml/releases/14058686",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.2.3"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "## API changes\r\n\r\nThis release features a change to the RmlMapper.Builder API. \r\nThe method `iriUnicodeNormalization(java.text.Normalizer.Form)` is added, in order to control the unicode normalization form of IRIs generated by CARML. By default the NFC form is applied, but this option also enables you to apply the recommended NFKC form.\r\nSee https://tools.ietf.org/html/rfc3987#section-7.5 and http://www.unicode.org/reports/tr15/tr15-23.html for more information.\r\n\r\n## Release notes:\r\n* bugfix: FunctionMap with termType IRI should encode values as IRI (#68)\r\n* IRI unicode normalization (#70)\r\n",
        "dateCreated": "2018-11-13T17:13:48Z",
        "datePublished": "2018-11-13T17:20:06Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.2.2",
        "name": "v0.2.2",
        "tag_name": "v0.2.2",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.2.2",
        "url": "https://api.github.com/repos/carml/carml/releases/13980004",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.2.2"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "## API changes\r\n\r\nThis release features some changes to the RmlMappingLoader API. In order to  cover more use cases, the signature of the existing load methods is updated slightly. The methods with the old signatures are marked as deprecated and will be removed at some point in the future. It is strongly advised to update your usage of these methods to the new versions.\r\n\r\n## Release notes:\r\n* bugfix: Fixed an issue with nulls in multi joins (#56)\r\n* suppress json path exceptions to force null returns in some cases (#55)\r\n* Expand supported possible FnO function parameter types: primitive types and List<String> (#59)\r\n* updated RmlMappingLoader API",
        "dateCreated": "2018-08-03T09:56:37Z",
        "datePublished": "2018-08-03T10:13:53Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.2.1",
        "name": "v0.2.1",
        "tag_name": "v0.2.1",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.2.1",
        "url": "https://api.github.com/repos/carml/carml/releases/12240468",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.2.1"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "## Breaking Change\r\n\r\nThis release features a breaking change to the API. We've split off the logical source handlers into separate maven modules, to facilitate dependency management.\r\nThis means that the building the mapper now requires you to specifically specify the logical source handlers you want to use.\r\n```java\r\nRmlMapper mapper =\r\n  RmlMapper\r\n    .newBuilder()\r\n    // Add the resolvers to suit your need\r\n    .setLogicalSourceResolver(Rdf.Ql.JsonPath, new JsonPathResolver())\r\n    .setLogicalSourceResolver(Rdf.Ql.XPath, new XPathResolver())\r\n    .setLogicalSourceResolver(Rdf.Ql.Csv, new CsvResolver())\r\n    .build();\r\n```\r\n\r\n## Release notes:\r\n* ensure lexical comparison of primitives \r\n* bugfix: Fixed an issue with equality check of multiply typed objects (#18)\r\n* implemented SLF4J based logging (#42)\r\n* added `rr:TriplesMap` to vocabulary class\r\n* split logical source handlers off into separate maven modules (#47) \r\n* updated all dependencies to latest versions (#49) ",
        "dateCreated": "2018-05-20T07:46:59Z",
        "datePublished": "2018-05-20T08:02:06Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.2.0",
        "name": "v0.2.0",
        "tag_name": "v0.2.0",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.2.0",
        "url": "https://api.github.com/repos/carml/carml/releases/11084030",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.2.0"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "* Rename *impl classes (#6)\r\n* remove function execution triples from output\r\n* treat functional term map as other term maps (#26)\r\n* support for MultiTermMaps (#22) (#29)\r\n* support for XML namespaces (#28)",
        "dateCreated": "2018-02-14T21:02:22Z",
        "datePublished": "2018-02-14T21:15:21Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.1.2",
        "name": "",
        "tag_name": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.1.2",
        "url": "https://api.github.com/repos/carml/carml/releases/9679908",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.1.2"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "* Extended SHACL for rml shapes with functional term map checks (#3)\r\n* Fixed logical source issue (#19)\r\n* Added CSV support (#17)\r\n* Added XPath support (#21) ",
        "dateCreated": "2017-12-05T18:16:33Z",
        "datePublished": "2017-12-05T18:24:37Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.1.1",
        "name": "v0.1.1",
        "tag_name": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.1.1",
        "url": "https://api.github.com/repos/carml/carml/releases/8782085",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.1.1"
      },
      {
        "authorType": "User",
        "author_name": "pmaria",
        "body": "* Support stream as source (#2) \r\n* Use Set instead of List where appropriate (#4)\r\n* Decouple ReferenceFormulation related code from mapper (#9)\r\n* Added some more unit tests. (Still a ways to go for proper coverage)\r\n* Setup travis CI and sonar cloud, including pushing releases to maven central",
        "dateCreated": "2017-10-21T06:32:57Z",
        "datePublished": "2017-10-21T07:39:38Z",
        "html_url": "https://github.com/carml/carml/releases/tag/v0.1.0",
        "name": "v0.1.0",
        "tag_name": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/carml/carml/tarball/v0.1.0",
        "url": "https://api.github.com/repos/carml/carml/releases/8205626",
        "zipball_url": "https://api.github.com/repos/carml/carml/zipball/v0.1.0"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 72,
      "date": "Mon, 20 Dec 2021 14:15:10 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "rdf",
      "rml",
      "rml-mapping",
      "rml-spec",
      "linked-data",
      "semantic-web",
      "r2rml",
      "r2rml-mapping"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "CARML is available from the Central Maven Repository.\n\n```xml\n\n<dependency>\n    <groupId>com.taxonic.carml</groupId>\n    <artifactId>carml-engine</artifactId>\n    <version>${carml.version}</version>\n</dependency>\n\n    <!-- Choose the resolvers to suit your need -->\n<dependency>\n    <groupId>com.taxonic.carml</groupId>\n    <artifactId>carml-logical-source-resolver-jsonpath</artifactId>\n    <version>${carml.version}</version>\n    </dependency>\n<dependency>\n    <groupId>com.taxonic.carml</groupId>\n    <artifactId>carml-logical-source-resolver-xpath</artifactId>\n    <version>${carml.version}</version>\n</dependency>\n<dependency>\n    <groupId>com.taxonic.carml</groupId>\n    <artifactId>carml-logical-source-resolver-csv</artifactId>\n    <version>${carml.version}</version>\n</dependency>\n\n```\n\nExample usage:\n\n```java\nSet<TriplesMap> mapping = RmlMappingLoader.build()\n    .load(RDFFormat.TURTLE,Paths.get(\"path-to-mapping-file\"));\n\nRdfRmlMapper mapper = RdfRmlMapper.builder()\n    // add mappings\n    .triplesMaps(mapping)\n    // Add the resolvers to suit your need\n    .setLogicalSourceResolver(Rdf.Ql.JsonPath,new JsonPathResolver())\n    .setLogicalSourceResolver(Rdf.Ql.XPath,new XPathResolver())\n    .setLogicalSourceResolver(Rdf.Ql.Csv,new CsvResolver())\n    //-- optional: --\n    // specify IRI unicode normalization form (default = NFC)\n    // see http://www.unicode.org/unicode/reports/tr15/tr15-23.html\n    .iriUnicodeNormalization(Form.NFKC)\n    // set file directory for sources in mapping\n    .fileResolver(\"/some/dir/\")\n    // set classpath basepath for sources in mapping\n    .classPathResolver(\"some/path\")\n    // specify casing of hex numbers in IRI percent encoding (default = true)\n    // added for backwards compatibility with IRI encoding up until v0.2.3\n    .iriUpperCasePercentEncoding(false)\n    // Specify a custom value factory supplier\n    .valueFactorySupplier(ValidatingValueFactory::new)\n    //---------------\n\n    .build();\n\nModel result = mapper.mapToModel();\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}