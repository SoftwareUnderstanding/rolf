{
  "citation": [
    {
      "confidence": [
        0.8283216015784888,
        0.8283216015784888
      ],
      "excerpt": "    resource <- prefix \"dbpedia\" (iriRef \"http://dbpedia.org/resource/\") \n    dbpprop  <- prefix \"dbprop\" (iriRef \"http://dbpedia.org/property/\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888,
        0.8283216015784888
      ],
      "excerpt": "    resource <- prefix \"dbpedia\" (iriRef \"http://dbpedia.org/resource/\") \n    dbpprop  <- prefix \"dbprop\" (iriRef \"http://dbpedia.org/property/\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "    resource &lt;- prefix \"dbpedia\" (iriRef \"http://dbpedia.org/resource/\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8283216015784888,
        0.8283216015784888
      ],
      "excerpt": "    resource <- prefix \"dbpedia\" (iriRef \"http://dbpedia.org/resource/\") \n    dbprop  <- prefix \"dbprop\" (iriRef \"http://dbpedia.org/property/\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "  rdfGraph &lt;- constructQuery \"http://dbpedia.org/sparql\" simpleConstruct \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "  rdfGraph &lt;- describeQuery \"http://dbpedia.org/sparql\" simpleDescribe \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8744428695576705
      ],
      "excerpt": "open-world assumption. See: http://www.w3.org/TR/rdf-sparql-query/#ask \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8028046190715653
      ],
      "excerpt": "  res &lt;- askQuery \"http://dbpedia.org/sparql\" simpleAsk \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/robstewart57/hsparql",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2012-04-08T10:18:13Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-03-26T17:26:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`hsparql` includes a DSL to easily create queries, as well as methods to\nsubmit those queries to a SPARQL server, returning the results as\nsimple Haskell data structures.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8721052374408427
      ],
      "excerpt": "SELECT queries generate a set of sparql query solutions. See: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9092007067769646
      ],
      "excerpt": "CONSTRUCT queries generate RDF, which is serialized in N3 in this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9500226092038997
      ],
      "excerpt": "DESCRIBE queries generate RDF, which is serialized in N3 in this \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8474838258924947
      ],
      "excerpt": "ASK queries inspects whether or not a triple exists. RDF is an \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8787413036765976
      ],
      "excerpt": "  identical, types for triples, namespaces, prefixes and so on. Ideally, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "hsparql includes a DSL to easily create queries, as well as methods to submit those queries to a SPARQL server, returning the results as simple Haskell data structures.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/robstewart57/hsparql/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 14,
      "date": "Mon, 20 Dec 2021 16:39:44 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/robstewart57/hsparql/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "robstewart57/hsparql",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.8906108560295353
      ],
      "excerpt": "Take the following SPARQL query: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "  ?x foaf:name ?name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080319066647592
      ],
      "excerpt": "Can be generated using the following Haskell code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053804429658877
      ],
      "excerpt": "    foaf     <- prefix \"foaf\" (iriRef \"http://xmlns.com/foaf/0.1/\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "triple_ x (foaf .:. \"name\") name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906108560295353
      ],
      "excerpt": "Take the following SPARQL query: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8239923027853571
      ],
      "excerpt": "  ?x example:hasName ?name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "  ?x foaf:name ?name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080319066647592
      ],
      "excerpt": "Can be generated using the following Haskell code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8053804429658877
      ],
      "excerpt": "    foaf     <- prefix \"foaf\" (iriRef \"http://xmlns.com/foaf/0.1/\") \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8661176197453521
      ],
      "excerpt": "triple_ x (foaf .:. \"name\") name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906108560295353
      ],
      "excerpt": "Take the following SPARQL query: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080319066647592
      ],
      "excerpt": "Can be generated using the following Haskell code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8906108560295353
      ],
      "excerpt": "Take the following SPARQL query: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9080319066647592
      ],
      "excerpt": "Can be generated using the following Haskell code: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8554958249288773
      ],
      "excerpt": "  one type representation for such concepts should be adopted for both packages. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "  ?x foaf:name ?name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "triple_ x (foaf .:. \"name\") name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9200263995548353
      ],
      "excerpt": "  ?x example:hasName ?name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "  ?x foaf:name ?name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8421074476017179
      ],
      "excerpt": "triple_ x (foaf .:. \"name\") name \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936606094659785
      ],
      "excerpt": "  mapM_ print (triplesOf rdfGraph) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.936606094659785
      ],
      "excerpt": "  mapM_ print (triplesOf rdfGraph \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.853641748656804
      ],
      "excerpt": "  putStrLn $ \"result: \" ++ (show (res::Bool)) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/robstewart57/hsparql/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Haskell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/robstewart57/hsparql/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b\" Copyright (c) 2009, Jeff Wheeler\\n All rights reserved.\\n\\n Redistribution and use in source and binary forms, with or without\\n modification, are permitted provided that the following conditions are met:\\n     * Redistributions of source code must retain the above copyright\\n       notice, this list of conditions and the following disclaimer.\\n     * Redistributions in binary form must reproduce the above copyright\\n       notice, this list of conditions and the following disclaimer in the\\n       documentation and/or other materials provided with the distribution.\\n     * Neither the name of the <organization> nor the\\n       names of its contributors may be used to endorse or promote products\\n       derived from this software without specific prior written permission.\\n\\n THIS SOFTWARE IS PROVIDED BY <copyright holder> ''AS IS'' AND ANY\\n EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n DISCLAIMED. IN NO EVENT SHALL <copyright holder> BE LIABLE FOR ANY\\n DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\"",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# Introduction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "hsparql",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "robstewart57",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/robstewart57/hsparql/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 44,
      "date": "Mon, 20 Dec 2021 16:39:44 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Some extra examples can be found in [tests](tests/Database/HSparql/QueryGeneratorTest.hs).\n\n",
      "technique": "Header extraction"
    }
  ]
}