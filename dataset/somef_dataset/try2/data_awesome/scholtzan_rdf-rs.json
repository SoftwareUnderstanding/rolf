{
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/scholtzan/rdf-rs",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-09-04T14:29:32Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-14T17:13:19Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9699426866648513,
        0.9757663195781346,
        0.9967725023685969,
        0.8899258013717376
      ],
      "excerpt": "Note: This project is work in progress and currently not stable. \nrdf is a library for the Resource Description Framework (RDF) and SPARQL implemented in Rust. \nThis project is a way for me to learn Rust and combine it with my interests in semantic web technologies. \nCurrently rdf-rs provides basic data structures for representing RDF graphs, triples and nodes. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "RDF library implemented in Rust",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/scholtzan/rdf-rs/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 20 Dec 2021 17:54:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/scholtzan/rdf-rs/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "scholtzan/rdf-rs",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/scholtzan/rdf-rs/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Rust"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2016 Anna Scholtz\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "rdf-rs",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "rdf-rs",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "scholtzan",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/scholtzan/rdf-rs/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 20,
      "date": "Mon, 20 Dec 2021 17:54:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "rust",
      "rdf",
      "sparql"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Add this to your Cargo.toml:\n\n```toml\n[dependencies]\nrdf = \"0.1.4\"\n```\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "RDF triples can be stored and represented in a graph.\n\n```rust\nuse rdf::graph::Graph;\nuse rdf::uri::Uri;\nuse rdf::triple::Triple;\n\nlet mut graph = Graph::new(None);\nlet subject = graph.create_blank_node();\nlet predicate = graph.create_uri_node(&Uri::new(\"http://example.org/show/localName\".to_string()));\nlet object = graph.create_blank_node();\nlet triple = Triple::new(&subject, &predicate, &object);\n\ngraph.add_triple(&triple);\n```\n\nRDF graphs can be serialized to a supported format.\n\n```rust\nuse rdf::writer::n_triples_writer::NTriplesWriter;\nuse rdf::writer::rdf_writer::RdfWriter;\nuse rdf::graph::Graph;\nuse rdf::uri::Uri;\nuse rdf::triple::Triple;\n\nlet writer = NTriplesWriter::new();\n\nlet mut graph = Graph::new(None);\nlet subject = graph.create_blank_node();\nlet predicate = graph.create_uri_node(&Uri::new(\"http://example.org/show/localName\".to_string()));\nlet object = graph.create_blank_node();\nlet triple = Triple::new(&subject, &predicate, &object);\n\ngraph.add_triple(&triple);\nassert_eq!(writer.write_to_string(&graph).unwrap(),\n           \"_:auto0 <http://example.org/show/localName> _:auto1 .\\n\".to_string());\n```\n\nRDF syntax can also be parsed and transformed into an RDF graph.\n\n```rust\nuse rdf::reader::turtle_parser::TurtleParser;\nuse rdf::reader::rdf_parser::RdfParser;\nuse rdf::uri::Uri;\n\nlet input = \"@base <http://example.org/> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#:> .\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<http://www.w3.org/2001/sw/RDFCore/ntriples/> rdf:type foaf:Document ;\n        <http://purl.org/dc/terms/title> \\\"N-Triples\\\"@en-US ;\n        foaf:maker _:art .\";\n\nlet mut reader = TurtleParser::from_string(input.to_string());\nmatch reader.decode() {\n  Ok(graph) => {\n    assert_eq!(graph.count(), 3);\n    assert_eq!(graph.namespaces().len(), 2);\n    assert_eq!(graph.base_uri(), &Some(Uri::new(\"http://example.org/\".to_string())))\n  },\n  Err(_) => assert!(false)\n}\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}