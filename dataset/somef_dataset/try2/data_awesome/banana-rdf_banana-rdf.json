{
  "citation": [
    {
      "confidence": [
        0.8302556419090275
      ],
      "excerpt": "val banana = (name: String) => \"net.bblfish.rdf\" %% name % \"0.8.6\" excludeAll (ExclusionRule(organization = \"org.scala-stm\")) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.84662936142216
      ],
      "excerpt": "generation of empty source directories: \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/banana-rdf/banana-rdf",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "This is a work in progress. Sections will be added over time.\ncontributions\nAll contributions are welcome. By contributing, you accept to give the\nownership of your contribution to the World Wide Web\nConsortium. They are a nonprofit organization\nand just want to simplify the governance of this opensource project.\nstyle guide\nYour code must look like that:\n```scala\npackage org.w3.banana\npackage mypackage\nimport scala.util.{ Try, Success, Failure }\nimport java.net.{ URI => jURI, _ }\n// do not be afraid of wildcards\nimport java.io._\n/*\n * First sentence ending with a period.\n *\n * Then next paragraph.\n * And a second line.\n *\n * And so on.\n /\nclass FooRdf <: RDF(implicit\n  ops: RDFOps[Rdf],\n  writerSelector: RDFWriterSelector[Rdf],\n  turtleReader: RDFReader[Rdf, Turtle],\n  turtleWriter: RDFWriter[Rdf, Turtle],\n  jsonldReader: RDFReader[Rdf, JsonLdCompacted],\n  jsonldWriter: RDFWriter[Rdf, JsonLdCompacted]\n) extends WordSpec with Matchers {\nval longList = List(\n    1,\n    \"foo\"\n  )\nval list: List[Any] = List(1, \"foo\")\ndef baz(toto: Int, titi: String = \"bazinga\")(implicit ev: Show[Int]): Unit = {\n    ???\n  }\nlist.filter(! _.isEmpty).map(s => s.toString.toUppercase).flatMap { s => ??? }\n// that's an inline comment helpful when reading the code\n  // there could be several lines too!\n  // TODO no really, do it some day\n  list\n    .filter(! _.isEmpty)\n    .map(s => s.toString.toUppercase)\n    .flatMap { s =>\n      ???\n    }\n    .collect {\n      case somethingMuchLongerThatDidntFitPreviousLine if ??? =>\n        // notice the indentation\n        ???\n    }\n// that's a more general comment, not really attached to the very\n  // next line of code, more like a section of code\nlist.foldLeft(0) { (acc, i) => acc + i }\nlist.foldLeft(0)( + )\nlist.collect { case Blah(\"blah\", x) if x.isEmpty => ??? }\n}\n/* A much shorter comment, just one line. /\nclass Foo2Rdf <: RDF(implicit ops: RDFOps[Rdf]) {\n}\n/* If you need more that one line, all parameters go on their own line. /\nclass Foo3Rdf <: RDF(implicit\n  ops: RDFOps[Rdf]\n) {\n}\n/* Extending classes and traits /\nclass Foo4Rdf <: RDF(implicit ops: RDFOps[Rdf])\nextends Class1 with Trait2 {\n}\n```\nnotes\n\nthe style is subject to change as we learn or need to refine\nnew code must follow this standard\nolder code should be refactored as it gets worked on\ntools (e.g. scalariform) could help and that's the goal, but it's not there yet\n\ncredits and inspiration\n\nhttp://docs.scala-lang.org/style/\nunwritten shapeless coding style e.g. generic.scala",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2012-04-30T03:02:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-10-29T02:29:27Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9309571867608099
      ],
      "excerpt": "The current published version 0.8.6, compiled with scala 2.13.6, is to be found on Maven Central under groupId net/bblfish/rdf/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9690811617047337,
        0.9906268341341817
      ],
      "excerpt": "A Scala3 version is being developed on the scala-3 branch of this repository. \nbanana-rdf is a library for RDF, SPARQL and Linked Data technologies \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8024722520132535,
        0.8521356939770857
      ],
      "excerpt": "is no wrapping involved: you manipulate directly the real objects. We \ncurrently support Jena, RDF4J and Plantain, a pure Scala \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9768966645559947
      ],
      "excerpt": "with some cost when the underlying implementation is very mutable (I'm \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9185987395628948
      ],
      "excerpt": "between the core concepts and the enhanced syntax that Scala can give \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9473822343469969
      ],
      "excerpt": "itself is defined as a record of types. Implementations just have to \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8490037945672047
      ],
      "excerpt": "introduce the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8774843438122997
      ],
      "excerpt": "typeclass, which defines the mandatory operations that an RDF \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.883702710296782
      ],
      "excerpt": "node). You also get an abstraction for graph stores \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9095463484992831,
        0.945541541784189
      ],
      "excerpt": "banana-rdf introduces the concept of binders, which let you \nbridge the Scala and RDF worlds. Most of the common datastructures are \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8763764635019926
      ],
      "excerpt": "Independent of your preferred IDE, optionally the add the following line to ~/.sbt/0.13/global.sbt to prevent the  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9504429180773243
      ],
      "excerpt": "Eclipse should work \"out of the box\" with the addition of the following global settings: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9285373677063479
      ],
      "excerpt": "Banana-RDF contributors all agree to follow the W3C Code of Ethics and Professional Conduct. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Banana RDF",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/banana-rdf/banana-rdf/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 66,
      "date": "Mon, 20 Dec 2021 17:54:41 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/banana-rdf/banana-rdf/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "banana-rdf/banana-rdf",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "`banana-rdf` works with both [eclipse](https://www.eclipse.org/) and [IntelliJ IDEA](http://www.jetbrains.com/idea/).\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8700841999568317
      ],
      "excerpt": "The current published version 0.8.6, compiled with scala 2.13.6, is to be found on Maven Central under groupId net/bblfish/rdf/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9771554283539186
      ],
      "excerpt": "//choose the packages you need for your dependencies \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9434466881526319
      ],
      "excerpt": "Snapshot releases can be found on [sonatype.org](https://oss.sonatype.org/content/repositories/snapshots/net/bblfish/rdf/). To use these you will need at add the sonatype resolver to your sbt build:scala \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8826193088390845
      ],
      "excerpt": "With banana-rdf, you get Diesel, a nice DSL to build and navigate \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8418450398360597
      ],
      "excerpt": "addSbtPlugin(\"com.typesafe.sbteclipse\" % \"sbteclipse-plugin\" % \"2.5.0\") \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8169365521584483
      ],
      "excerpt": "To generate eclipse project files, just run the command: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/banana-rdf/banana-rdf/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Scala",
      "JavaScript",
      "Java"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'This work is being provided by the copyright holders under the W3C Software and Document Short Notice.\\n\\nLicense\\n\\nBy obtaining and/or copying this work, you (the licensee) agree that you have read, understood, and will comply with the following terms and conditions.\\n\\nPermission to copy, modify, and distribute this work, with or without modification, for any purpose and without fee or royalty is hereby granted, provided that you include the following on ALL copies of the work or portions thereof, including modifications:\\n\\n    The full text of this NOTICE in a location viewable to users of the redistributed or derivative work.\\n    Any pre-existing intellectual property disclaimers, notices, or terms and conditions. If none exist, the W3C Software and Document Short Notice should be included.\\n    Notice of any changes or modifications, through a copyright statement on the new code or document such as \"This software or document includes material copied from or derived from [title and URI of the W3C document]. Copyright \\xc2\\xa9 [YEAR] W3C\\xc2\\xae (MIT, ERCIM, Keio, Beihang).\" \\n\\nDisclaimers\\n\\nTHIS WORK IS PROVIDED \"AS IS,\" AND COPYRIGHT HOLDERS MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE OR DOCUMENT WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.\\n\\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENT.\\n\\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the work without specific, written prior permission. Title to copyright in this work will at all times remain with copyright holders.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "banana-rdf",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "banana-rdf",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "banana-rdf",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/banana-rdf/banana-rdf/blob/series/0.8.x/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 275,
      "date": "Mon, 20 Dec 2021 17:54:41 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To get going with banana-rdf  and get a feel for how to use it the easiest and\nfastest way may well be to use it directly in the Ammonite shell as explained in the\n[Scripting with Ammonite wiki page](https://github.com/banana-rdf/banana-rdf/wiki/Scripting-with-Ammonite).\n\nIt always helps to have the code available, as there are a lot of useful examples in \nthe test suite. You only need a recent version of Java, that's all:\n\n``` bash\n$ git clone git@github.com:w3c/banana-rdf.git\n$ cd banana-rdf\n$ sbt\n```\n\nIt's also easy to just build specific target platforms:\n    \n``` bash\n$ sbt +banana_js/test    # for javascript only \n$ sbt +banana_jvm/test   # for jvm only\n```\n\n( note: scala-js compilation uses more memory. see [travis.yml](.travis.yml) )\n\n",
      "technique": "Header extraction"
    }
  ]
}