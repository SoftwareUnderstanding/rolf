{
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bibtex\n@software{https://github.com/rdflib/geosparql-dggs,\n  author = {{David Habgood}},\n  title = {RDFlib GeoSPARQL Functions for DGGS},\n  version = {0.0.1},\n  date = {2021},\n  url = {https://github.com/rdflib/geosparql-dggs}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@software{https://github.com/rdflib/geosparql-dggs,\n  author = {{David Habgood}},\n  title = {RDFlib GeoSPARQL Functions for DGGS},\n  version = {0.0.1},\n  date = {2021},\n  url = {https://github.com/rdflib/geosparql-dggs}\n}",
      "technique": "Regular expression"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RDFLib/geosparql-dggs",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "_Creator & maintainer:_  \n**David Habgood**  \n_Application Architect_  \n[SURROUND Australia Pty Ltd](https://surroundaustralia.com)  \n<david.habgood@surroundaustrlaia.com>  \n\nhttps://orcid.org/0000-0002-3322-1868\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-04T00:52:42Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-13T22:04:03Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9416478460401491,
        0.9014322619469559,
        0.8576651226281437,
        0.8701058663378466
      ],
      "excerpt": "This library provides support for the GeoSPARQL 1.1 Simple Features Relation Family \nfor geometries expressed as DGGS Literals. \nCurrently, rHEALPix DGGS Grids are supported. \nThe Simple Feature relations have been interpreted in the following way for the context of a nested square DGGS grid (such as rHEALPix grids).   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9849950865189337,
        0.9909578212160801,
        0.9754441756667334,
        0.9214601574111495,
        0.9906175760387906,
        0.974764181573559,
        0.8594773949462954,
        0.9105896053513154
      ],
      "excerpt": "dggs:sfWithin: One set of cells (A) is within some other set of cells (B) if the addition of A's cells to B results in a set of cells equal to B, where A is not equal to B.   \ndggs:sfContains: One set of cells (A) is contains some other set of cells (B) if the addition of A's cells to B results in a set of cells equal to A, where A is not equal to B.   \ndggs:sfIntersects: One set of cells (A) intersects some other set of cells (B) where they share any two cells, or any cell in A is the parent or child of a cell in B, or any cell in A or B touches.   \ndggs:sfTouches: One set of cells (A) touches some other set of cells (B) where the cells meet at an edge, or vertex.   \ndggs:sfDisjoint: One set of cells (A) is disjoint with some other set of cells (B) where they do not share any two cells, no cell in A is the parent or child of a cell in B, and no cells in A and B touch.   \ndggs:sfOverlaps: One set of cells (A) overlaps some other set of cells (B) where the addition of A's cells to B results in a set of cells different from A and B, and A and B are not disjoint and do not touch. \nAll tests are in tests/ and implemented using pytest. \nThere are individual tests for each function, along with more granular tests for supporting Python classes (Cells and CellCollections), as well as application of the functions without RDF. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "An implementation of GeoSPARQL's Simple Features SPARQL functions for AusPIX Discreet Global Grid System (DGGS) geometries, as per GeoSPARQL",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RDFLib/geosparql-dggs/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 20 Dec 2021 12:59:04 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/RDFLib/geosparql-dggs/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "RDFLib/geosparql-dggs",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "From the python package index, PyPi: https://pypi.org/project/geosparql-dggs/  \n`pip install geosparql-dggs`\n\nThis package depends on to support the functions' use against graphs [RDFlib](https://pypi.org/project/rdflib/). The functions themselves depend on the [rHEAL-sf](https://github.com/surroundaustralia/rhealpix-sf/) \nlibrary, which in turn depends on the [rHEAL-geo](https://github.com/surroundaustralia/rhealpix-geo/) library for the base classes\nwhich represent DGGS Cells and collections of Cells. \n",
      "technique": "Header extraction"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8422814811459005
      ],
      "excerpt": "There are individual tests for each function, along with more granular tests for supporting Python classes (Cells and CellCollections), as well as application of the functions without RDF. \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/RDFLib/geosparql-dggs/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2021, RDFLib Team\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its\\n   contributors may be used to endorse or promote products derived from\\n   this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "RDFlib GeoSPARQL Functions for DGGS",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "geosparql-dggs",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "RDFLib",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/RDFLib/geosparql-dggs/blob/master/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "recalcitrantsupplant",
        "body": "First release on pypi",
        "dateCreated": "2021-09-30T01:22:08Z",
        "datePublished": "2021-09-30T01:22:55Z",
        "html_url": "https://github.com/RDFLib/geosparql-dggs/releases/tag/v0.2",
        "name": "v0.2",
        "tag_name": "v0.2",
        "tarball_url": "https://api.github.com/repos/RDFLib/geosparql-dggs/tarball/v0.2",
        "url": "https://api.github.com/repos/RDFLib/geosparql-dggs/releases/50515391",
        "zipball_url": "https://api.github.com/repos/RDFLib/geosparql-dggs/zipball/v0.2"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 20 Dec 2021 12:59:04 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "These functions are implemented in RDFlib Python in the file `gsdggs/sf_functions.py` and are imported into `gsdggs/__init__.py` and registered there in RDFlib as SPARQL extension functions with their IRIs.\n\nThis means they can be used like this (full working script):\n\n```python\nfrom rdflib import Literal, Graph, Namespace, URIRef\nfrom gsdggs import DGGS\n\nEX = Namespace(\"http://example.com/\")\nGEO = Namespace(\"http://www.opengis.net/ont/geosparql#:\")\n\n#: Define the DGGS Geometries, add them to an in-memory RDF graph\ng = Graph()\ng.add((URIRef('https://geom-a'), GEO.asDGGS, Literal('CELLLIST ((R0 R10 R13 R16 R30 R31 R32 R40))', EX.ausPixLiteral)))\ng.add((URIRef('https://geom-b'), GEO.asDGGS, Literal('CELLLIST ((R06 R07 R30 R31))', EX.ausPixLiteral)))\ng.add((URIRef('https://geom-c'), GEO.asDGGS, Literal('CELLLIST ((R11 R12 R14 R15))', EX.ausPixLiteral)))\n\n#: Query the in-memory graph\nq = \"\"\"\n    PREFIX geo: <http://www.opengis.net/ont/geosparql#:>\n    PREFIX dggs: <https://placeholder.com/dggsfuncs/>\n    \n    SELECT ?a ?b \n    WHERE {\n        ?a geo:asDGGS ?a_geom .\n        ?b geo:asDGGS ?b_geom .\n        \n        FILTER dggs:sfWithin(?a_geom, ?b_geom)\n    }\"\"\"\n#: Interate through and print results\nfor r in g.query(q):\n    print(f\"{r['a']} is within {r['b']}\")\n```\nThe above stript outputs:\n\n```bash\nhttps://geom-b is within https://geom-a\n```\n\nThe functions can also be used directly (without RDFLib) by direct import from _source, for example:\n```python\nfrom _source import sfEquals\n\nsfEquals(\"R1\", \"R1\")\n```\nThe above stript outputs:\n\n```bash\nTrue\n```\n",
      "technique": "Header extraction"
    }
  ]
}