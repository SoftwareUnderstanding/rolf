{
  "citation": [
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "        \"query\": \"select ?predicate ?object\\nwhere {\\n\" + \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "                 \"      ?predicate ?object\\n}\" \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "      \"query\": \"select ?predicate ?object\\nwhere {\\n\" + \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8090016440670298
      ],
      "excerpt": "               \"      ?predicate ?object\\n}\", \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epimorphics/qonsole",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2013-10-01T11:48:39Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-08-17T11:26:38Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9064082988176131
      ],
      "excerpt": "out the elements of the page body that Qonsole needs, and the JavaScript and CSS files you'll \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9455761964203714
      ],
      "excerpt": "Qonsole is configured by passing a JSON data structure to the qonsole.init() call. Currently, \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8482251258878929
      ],
      "excerpt": "  selected on or off by a single click. The value is a JSON object, whose keys are the \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8993646904435968
      ],
      "excerpt": "  to base their own queries on. The value is a JSON array, each element of \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8186302415228428,
        0.8881822973467688
      ],
      "excerpt": "  structure itself, with the `query` key, or accessed remotely from a different URL \n  using the `queryURL` key: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9597085320053819
      ],
      "excerpt": "By default, each query gets all of the shared prefixes declared in the configuration \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "A simple console for running SPARQL queries and displaying results",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epimorphics/qonsole/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 20 Dec 2021 20:19:29 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/epimorphics/qonsole/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "epimorphics/qonsole",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        0.942927791974474
      ],
      "excerpt": "Clone the git repository (epimorphics/qonsole), or \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9194202533821013
      ],
      "excerpt": "  which is one example query. Note that prefixes do not need to be \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8049115808554381
      ],
      "excerpt": "you can list the prefix keys that should be used with the query with a <code>prefixes</code> key \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8199263510338121
      ],
      "excerpt": "  declared in the example queries. The query text can be declared in the config \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811645567185341
      ],
      "excerpt": "      { \"name\": \"Properties of a named bathing water\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811645567185341
      ],
      "excerpt": "      { \"name\": \"Properties of a named bathing water\", \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.811645567185341
      ],
      "excerpt": "    { \"name\": \"Properties of a named bathing water\", \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/epimorphics/qonsole/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "JavaScript",
      "HTML",
      "CSS",
      "Ruby"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Qonsole - a simple console for running SPARQL queries",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "qonsole",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "epimorphics",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "Organization",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/epimorphics/qonsole/blob/master/readme.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Suppose you have a linked-data dataset that you've published on the web, and that\nyou'd like to provide your users with the means to run SPARQL queries to explore \nyour data. Most SPARQL end-points allow you to use HTTP `get` and `post` commands\nto send a query and get back results, so it's easy enough to put up an HTML form for \nyour users to type in a query and get back some results. But that's not necessarily\nthat helpful for your users, because:\n\n  * in some browsers, hitting the 'back' button after posting a query means that the\n  text input control is emptied. So your users will lose the query that they have typed, \n  which makes iterative development of the query hard.\n  * you can provide at most one sample query to get your users started with suggestions\n  and ideas.\n  * you don't have any to manage prefixes, which can make a huge difference to the\n  readability of a query (compare `<http://www.w3.org/2000/01/rdf-schema#comment>` to\n  `rdfs:comment`, for example).\n  * the returned values from a SPARQL form are generally represented as a text format, or\n  using a MIME type (e.g. `text/csv` that makes your user's computer open the returning file\n  in another program (e.g. a spreadsheet). Plain text can be hard to explore, while opening a\n  different application takes your user's focus away from the task of editing the query and\n  exploring your data.\n\nSee a [demo of qonsole](http://epimorphics.github.io/qonsole/demo-vertical.html), \nusing the [UK bathing water quality dataset](http://environment.data.gov.uk/bwq/).\n\nQonsole provides the following features:\n\n  * An edit control with SPARQL syntax highlighting, undo, and other familiar code editing \n  features (courtesy of [CodeMirror](http://codemirror.net/)).\n  * Display of the query and the return result on one page\n  * A configurable set of example queries your users can select with one click\n  * A configurable set of pre-declared prefixes, and the ability to add new prefixes dynamically,\n  including looking a well-know prefix up on [prefix.cc](http://prefix.cc). Users can add or\n  remove prefix declarations from the edit window with one click.\n  * A choice of return formats, including XML, JSON and plain text. XML and JSON results\n  display in a structured editor window for easier browsing. By default, results are returned\n  in a table control, with sortable columns, paging and search.\n\nQonsole is free open-source software under an \n[Apache license](http://www.apache.org/licenses/LICENSE-2.0.html), and was developed by  \n[Epimorphics Ltd](http://www.epimorphics.com).\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 15,
      "date": "Mon, 20 Dec 2021 20:19:29 GMT"
    },
    "technique": "GitHub API"
  }
}