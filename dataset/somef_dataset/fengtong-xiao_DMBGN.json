{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1606.07792  http://arxiv.org/abs/1606.07792 .\n- [4] Guorui Zhou, Xiaoqiang Zhu, Chenru Song, Ying Fan, Han Zhu, Xiao Ma, YanghuiYan, Junqi Jin, Han Li, and Kun Gai. 2018. Deep interest network for click-throughrate prediction. InProceedings of the 24th ACM SIGKDD International Conferenceon Knowledge Discovery & Data Mining. 1059\u20131068"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9030859728368266
      ],
      "excerpt": "|      DMBGN       | 0.7885 |     10.20%    |     4.06%     |  0.3616 | \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fengtong-xiao/DMBGN",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-06T07:16:35Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-12T09:08:13Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9710401986052817,
        0.9414549330270697
      ],
      "excerpt": "The implementation of the accepted paper \"Deep Multi-Behaviors Graph Networks for Voucher Redemption Rate Prediction\" in SIGKDD 2021 Applied Data Science Track.  \nDMBGN utilizes a User-Behavior Voucher Graph (UVG) to extract complex user-voucher-item relationship and the attention mechanism to capture users' long-term voucher redemption preference. Experiments shows that DMBGN achieves 10%-16% relative AUC improvement over Deep Neural Networks (DNN), and 2% to 4% AUC improvement over Deep Interest Network (DIN). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.939767680846046
      ],
      "excerpt": "A randomly desensitized sampled dataset from one of the large-scaled production dataset from from Lazada (Alibaba Group) is included. The dataset contains three dataframes corresponding users' voucher collection logs, related user behavior logs and related item features, a detailed description can be found in ./data/README.md file. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9270791653549347,
        0.8087291026189342,
        0.9800693678060266,
        0.8407559143235095
      ],
      "excerpt": "GBDT: Gradient Boosting Decision Tree [2], a tree-based non deep-learning model. \nDNN: Deep Neural Networks. \nWDL: Wide and Deep model [3], a widely accepted model in real industrial applications with an additional linear model besides the deep model compared to DNN. \nDIN: Deep Interest Network [4], an attention-based model in recommendation systems that has been proven successful in Alibaba. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9360153537150073
      ],
      "excerpt": "Note that this dataset is a random sample from dataset Region-C and the performance is different as in the submitted paper due to the smaller sample size (especially xgBoost). However, the conclusion from the experiment results is consistent with the submitted paper, where DMBGN achieves 10.20% relative AUC improvement over DNN and 4.6% uplift over DIN.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9192979774462552
      ],
      "excerpt": "All experiment codes are organized into the DMBGN_SIGKDD21-release.ipynb jupyter notebook including corresponding running logs, detail code implementation of each model (LR, GBDT, DNN, WDL, DIN, DMBGN) can be found in ./models folder.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "The implementation of the submitted paper \"Deep Multi-Behaviors Graph Network for Voucher Redemption Rate Prediction\" in SIGKDD 2021 Applied Data Science Track.",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fengtong-xiao/DMBGN/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 5,
      "date": "Mon, 06 Dec 2021 10:40:02 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fengtong-xiao/DMBGN/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "fengtong-xiao/DMBGN",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/fengtong-xiao/DMBGN/master/DMBGN_SIGKDD21-release.ipynb"
    ],
    "technique": "File Exploration"
  },
  "invocation": [
    {
      "confidence": [
        0.8014561852623361
      ],
      "excerpt": "To run the experiments, simply start a jupyter notebook and run all code cells in the DMBGN_SIGKDD21-release.ipynb file and check the output logs. Alternatively, you can refer to the existing log outputs in the notebook file. (If you encounter \"Sorry, something went wrong. Roload?\" error message, just click Reload and the notebook will show.) \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/fengtong-xiao/DMBGN/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/fengtong-xiao/DMBGN/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'/ \\n * Copyright (C) 2002-2019 Igor Sysoev\\n * Copyright (C) 2011,2019 Nginx, Inc.\\n * Copyright (C) 2010-2019 Alibaba Group Holding Limited\\n * Copyright (C) 2011-2013 Xiaozhe \"chaoslawful\" Wang\\n * Copyright (C) 2011-2013 Zhang \"agentzh\" Yichun\\n * Copyright (C) 2011-2013 Weibin Yao\\n * Copyright (C) 2012-2013 Sogou, Inc.\\n * Copyright (C) 2012-2013 NetEase, Inc.\\n * Copyright (C) 2014-2017 Intel, Inc.\\n * All rights reserved.\\n \\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions\\n * are met:\\n * 1. Redistributions of source code must retain the above copyright\\n *    notice, this list of conditions and the following disclaimer.\\n * 2. Redistributions in binary form must reproduce the above copyright\\n *    notice, this list of conditions and the following disclaimer in the\\n *    documentation and/or other materials provided with the distribution.\\n \\n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS\\'\\' AND\\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\\n * SUCH DAMAGE.\\n /\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "DMBGN: Deep Multi-Behaviors Graph Networks for Voucher Redemption Rate Prediction",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "DMBGN",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "fengtong-xiao",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/fengtong-xiao/DMBGN/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "python: 3.7.1 <br>\nnumpy: 1.19.5 <br>\npandas 1.2.1 <br>\npandasql 0.7.3 <br>\ntorch: 1.7.1 <br>\ntorch_geometric: 1.6.3 <br>\ntorch: 1.7.1 <br>\ntorch-cluster: 1.5.8 <br>\ntorch-geometric: 1.6.3 <br>\ntorch-scatter: 2.0.5 <br>\ntorch-sparse: 0.6.8 <br>\ntorch-spline-conv: 1.2.0 <br>\ntorchaudio: 0.7.2 <br>\ntorchvision: 0.8.2 <br>\ndeepctr-torch: 0.2.3 <br>\npickle: 4.0\n\nWhat To Do\n-------\n- We are currently deploying DMBGN model online for Lazada voucher related business, the online A/B testing performance will be reported soon.\n- More detailed code comments are being added.\n\nAcknowledgment\n-------\nOur code implementation is developed based on the [Deep Interest Network (DIN)](https://deepctr-doc.readthedocs.io/en/latest/_modules/deepctr/models/din.html) codes from the DeepCTR package, with modification to fit DMBGN model architecture and multi-GPU usage.\n\nWe thanks the anonymous reviewers for their time and feedback.\n\nReference\n-------\n- [1] H Brendan McMahan, Gary Holt, David Sculley, Michael Young, Dietmar Ebner,Julian Grady, Lan Nie, Todd Phillips, Eugene Davydov, Daniel Golovin, et al.2013.  Ad click prediction: a view from the trenches. InProceedings of the 19thACM SIGKDD international conference on Knowledge discovery and data mining.1222\u20131230.\n- [2] Guolin Ke, Qi Meng, Thomas Finley, Taifeng Wang, Wei Chen, Weidong Ma,Qiwei Ye, and Tie-Yan Liu. 2017. Lightgbm: A highly efficient gradient boostingdecision tree.Advances in neural information processing systems30 (2017), 3146\u20133154.\n- [3] Heng-Tze Cheng, Levent Koc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra,Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai, Mustafa Ispir, RohanAnil, Zakaria Haque, Lichan Hong, Vihan Jain, Xiaobing Liu, and Hemal Shah.2016. Wide & Deep Learning for Recommender Systems.CoRRabs/1606.07792(2016). arXiv:1606.07792  http://arxiv.org/abs/1606.07792 .\n- [4] Guorui Zhou, Xiaoqiang Zhu, Chenru Song, Ying Fan, Han Zhu, Xiao Ma, YanghuiYan, Junqi Jin, Han Li, and Kun Gai. 2018. Deep interest network for click-throughrate prediction. InProceedings of the 24th ACM SIGKDD International Conferenceon Knowledge Discovery & Data Mining. 1059\u20131068.",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 8,
      "date": "Mon, 06 Dec 2021 10:40:02 GMT"
    },
    "technique": "GitHub API"
  }
}