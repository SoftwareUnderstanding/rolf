{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1503.08895 [cs.NE]*"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, Rob Fergus, \n  \"[End-To-End Memory Networks](http://arxiv.org/abs/1503.08895)\",\n  *arXiv:1503.08895 [cs.NE]*.",
      "technique": "Header extraction"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vinhkhuc/MemN2N-babi-python",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2016-01-10T06:56:50Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-28T05:02:07Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9908653939813001,
        0.9944280410907447
      ],
      "excerpt": "This is an implementation of MemN2N model in Python for the bAbI question-answering tasks  \nas shown in the Section 4 of the paper \"End-To-End Memory Networks\". It is based on  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8528441007546688
      ],
      "excerpt": "See the results here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "End-To-End Memory Networks for bAbI question-answering tasks",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vinhkhuc/MemN2N-babi-python/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 158,
      "date": "Mon, 13 Dec 2021 10:24:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/vinhkhuc/MemN2N-babi-python/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "vinhkhuc/MemN2N-babi-python",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/vinhkhuc/MemN2N-babi-python/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/vinhkhuc/MemN2N-babi-python/master/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD License\\n\\nCopyright (c) 2016, Vinh Khuc.\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without modification,\\nare permitted provided that the following conditions are met:\\n\\n * Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n * Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n * Neither the name Facebook nor the names of its contributors may be used to\\n   endorse or promote products derived from this software without specific\\n   prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "# End-To-End Memory Networks for Question Answering",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MemN2N-babi-python",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "vinhkhuc",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vinhkhuc/MemN2N-babi-python/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* Python 2.7\n* Numpy, Flask (only for web-based demo) can be installed via pip:\n```\n$ sudo pip install -r requirements.txt\n```\n* [bAbI dataset](http://fb.ai/babi) should be downloaded to `data/tasks_1-20_v1-2`: \n```\n$ wget -qO- http://www.thespermwhale.com/jaseweston/babi/tasks_1-20_v1-2.tar.gz | tar xvz -C data\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 574,
      "date": "Mon, 13 Dec 2021 10:24:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "machine-learning",
      "question-answering",
      "python"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "* To run on a single task, use `babi_runner.py` with `-t` followed by task's id. For example,   \n```\npython babi_runner.py -t 1\n```\nThe output will look like:\n```\nUsing data from data/tasks_1-20_v1-2/en\nTrain and test for task 1 ...\n1 | train error: 0.876116 | val error: 0.75\n|===================================               | 71% 0.5s\n```\n* To run on 20 tasks:\n```\npython babi_runner.py -a\n```\n* To train using all training data from 20 tasks, use the joint mode:\n```\npython babi_runner.py -j\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "* In order to run the Web-based demo using the pretrained model `memn2n_model.pklz` in `trained_model/`, run:\n```\npython -m demo.qa\n```\n\n* Alternatively, you can try the console-based demo:\n```\npython -m demo.qa -console\n```\n\n* The pretrained model `memn2n_model.pklz` can be created by running:\n```\npython -m demo.qa -train\n```\n\n* To show all options, run `python -m demo.qa -h`\n\n",
      "technique": "Header extraction"
    }
  ]
}