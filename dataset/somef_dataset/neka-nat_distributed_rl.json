{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1803.00933"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/neka-nat/distributed_rl",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-10-25T16:06:24Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-29T09:12:43Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9861322144478436
      ],
      "excerpt": "This is pytorch implementation of distributed deep reinforcement learning. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8062689991806555,
        0.9244193397199396,
        0.909801940227183,
        0.8664802118343988
      ],
      "excerpt": "Recurrent Experience Replay in Distributed Reinforcement Learning \nIn our system, there are two processes, Actor and Learner. \nIn Learner process, thread of the replay memory runs at the same time, \nand these processes communicate using Redis. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Pytorch implementation of distributed deep reinforcement learning",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/neka-nat/distributed_rl/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 7,
      "date": "Sun, 05 Dec 2021 16:59:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/neka-nat/distributed_rl/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "neka-nat/distributed_rl",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/neka-nat/distributed_rl/master/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/neka-nat/distributed_rl/master/run.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ngit clone https://github.com/neka-nat/distributed_rl.git\ncd distributed_rl\npoetry install\n```\n\nInstall redis-server.\n\n```\nsudo apt-get install redis-server\n```\n\nSetting Atari.\nhttps://github.com/openai/atari-py#roms\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd distributed_rl \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/neka-nat/distributed_rl/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2018 neka-nat\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "distributed_rl",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "distributed_rl",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "neka-nat",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/neka-nat/distributed_rl/blob/master/README.md",
    "technique": "GitHub API"
  },
  "run": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The following command is running all actors and learner in localhost.\nThe number of actor's processes is given as an argument.\n\n```\npoetry shell\n./run.sh 4\n```\n\nRun r2d2 mode.\n\n```\n./run.sh 4 config/all_r2d2.conf\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 63,
      "date": "Sun, 05 Dec 2021 16:59:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "reinforcement-learning",
      "distributed-systems",
      "pytorch",
      "deep-q-network",
      "amazon-web-services",
      "prioritized-experience-replay",
      "dueling-dqn",
      "double-dqn",
      "openai-gym",
      "ape-x",
      "r2d2"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Create AMI.\n\n```\npacker build packer/ubuntu.json\n```\n\nCreate key-pair.\n\n```\naws ec2 create-key-pair --key-name key --query 'KeyMaterial' --output text > ~/.ssh/key.pem\nchmod 400 ~/.ssh/key.pem\n```\n\nRun instances.\n\n```\ncd aws\npython aws_run_instances.py aws_config.yaml\n```\n\nRun fabric for a learner.\n\n```\nfab -H <Public IP of learner's instance> -u ubuntu -i ~/.ssh/key.pem learner_run\n```\n\nRun fabric for actors.\n\n```\nfab -H <Public IP of actor's instance 1>,<Public IP of actor's instance 2>, ... -u ubuntu -i ~/.ssh/key.pem actor_run:num_proc=15,leaner_host=<Public IP of learner's instance>\n```\n",
      "technique": "Header extraction"
    }
  ]
}