{
  "acknowledgement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "The code is partly based on [OLTR](https://github.com/zhmiao/OpenLongTailRecognition-OLTR).",
      "technique": "Header extraction"
    }
  ],
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nIf you find our work useful for your research, please consider citing the following paper:\r\n```\r\n@inproceedings{xiang2020learning,\r\n  title={Learning from multiple experts: Self-paced knowledge distillation for long-tailed classification},\r\n  author={Xiang, Liuyu and Ding, Guiguang and Han, Jungong},\r\n  booktitle={European Conference on Computer Vision},\r\n  pages={247--263},\r\n  year={2020},\r\n  organization={Springer}\r\n}\r\n```\r\n\r\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{xiang2020learning,\n  title={Learning from multiple experts: Self-paced knowledge distillation for long-tailed classification},\n  author={Xiang, Liuyu and Ding, Guiguang and Han, Jungong},\n  booktitle={European Conference on Computer Vision},\n  pages={247--263},\n  year={2020},\n  organization={Springer}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.999970987874134
      ],
      "excerpt": "in European Conference on Computer Vision (ECCV), 2020, Spotlight \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xiangly55/LFME",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nIf you have any questions, please feel free to contact xiangly17@mails.tsinghua.edu.cn.\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-02-02T09:15:11Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-14T09:01:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9667719684191401
      ],
      "excerpt": "Implementation of  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Code for \"Learning From Multiple Experts: Self-paced Knowledge Distillation for Long-tailed Classification\", ECCV 2020 Spotlight",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xiangly55/LFME/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Thu, 09 Dec 2021 01:24:31 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xiangly55/LFME/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "xiangly55/LFME",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\nFollow [OLTR](https://github.com/zhmiao/OpenLongTailRecognition-OLTR) for data preparation.\r\n\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/xiangly55/LFME/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Learning From Multiple Experts: Self-paced Knowledge Distillation for Long-tailed Classification",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "LFME",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "xiangly55",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/xiangly55/LFME/blob/main/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n* [PyTorch](https://pytorch.org/) (version >= 0.4.1)\r\n* [scikit-learn](https://scikit-learn.org/stable/)\r\nCheck requirements.txt for detailed instructions.\r\n\r\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 19,
      "date": "Thu, 09 Dec 2021 01:24:31 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "\r\n- Step 1: Train Expert models, or use the pre-trained model in ./logs/ImageNet_LT/\r\n```\r\nCUDA_VISIBLE_DEVICES=0 python main.py --config=./config/many_shot.py\r\nCUDA_VISIBLE_DEVICES=0 python main.py --config=./config/median_shot.py\r\nCUDA_VISIBLE_DEVICES=0 python main.py --config=./config/low_shot.py\r\n```\r\n\r\n- Step 2: Train a single model using the LFME\r\n```\r\nCUDA_VISIBLE_DEVICES=0 python main_LFME.py --config=./config/ImageNet_LT/LFME.py\r\n```\r\n\r\n- Evaluate LFME:\r\n```\r\nCUDA_VISIBLE_DEVICES=0 python main_LFME.py --config=./config/ImageNet_LT/LFME.py --test\r\n```\r\n\r\n",
      "technique": "Header extraction"
    }
  ]
}