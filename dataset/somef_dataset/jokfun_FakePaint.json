{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1511.06434\nOriginal code : https://github.com/eriklindernoren/Keras-GAN/blob/master/dcgan/dcgan.p"
    ],
    "technique": "Regular expression"
  },
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jokfun/FakePaint",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-05T19:28:00Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-05T19:29:16Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8122813289568794,
        0.9924926939991711
      ],
      "excerpt": "Create fake paintings from a data set and a DCGAN model \nThe purpose of this small project is only to test GAN networks. The results are not necessarily very good but I am limited by the hardware I have in my possession. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Create fake paintings from a data set and a DCGAN model",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jokfun/FakePaint/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Mon, 06 Dec 2021 16:39:03 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jokfun/FakePaint/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "jokfun/FakePaint",
    "technique": "GitHub API"
  },
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/jokfun/FakePaint/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Fake Paint",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "FakePaint",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "jokfun",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/jokfun/FakePaint/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Mon, 06 Dec 2021 16:39:03 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Create the dataset. So you can use your own images and add them in a folder, then run :\n```\npython data.py -p [path_of_the_dataset] -s [size_of_the_img]\n```\n2. Then, you can train the model. Generated painting will be add in the out folder.\n```\npython runme.py -s [size_of_the_image] -e [epochs] -b [batch_size] -i [save_interval]\n```\n__TIPS__ : Depending on the power of your GPU, you may need to adapt the \"size\" of the training. To do so, you will have to adapt the image size or the batch_size. Moreover, depending on the quality of the data passed in parameter, it is possible that the network is not adapted to your needs, so you will have to review its structure.\n\n",
      "technique": "Header extraction"
    }
  ]
}