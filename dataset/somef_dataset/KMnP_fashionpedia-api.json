{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.06870>",
      "https://arxiv.org/abs/2004.12276>"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Both fashionpedia and fashionpediaEval are sub-classes of COCO and COCOeval from PythonAPI for [COCO](https://github.com/cocodataset/cocoapi).    [LVIS-API](<https://github.com/lvis-dataset/lvis-api>) was also referenced during the development.",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n@inproceedings{jia2020fashionpedia,\n  title={Fashionpedia: Ontology, Segmentation, and an Attribute Localization Dataset},\n  author={Jia, Menglin and Shi, Mengyun and Sirotenko, Mikhail and Cui, Yin and Cardie, Claire and Hariharan, Bharath and Adam, Hartwig and Belongie, Serge}\n  booktitle={European Conference on Computer Vision (ECCV)},\n  year={2020}\n}\n```\n\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{jia2020fashionpedia,\n  title={Fashionpedia: Ontology, Segmentation, and an Attribute Localization Dataset},\n  author={Jia, Menglin and Shi, Mengyun and Sirotenko, Mikhail and Cui, Yin and Cardie, Claire and Hariharan, Bharath and Adam, Hartwig and Belongie, Serge}\n  booktitle={European Conference on Computer Vision (ECCV)},\n  year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8444342525991423
      ],
      "excerpt": "source env/bin/activate           #: Activate virtual environment \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KMnP/fashionpedia-api",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-04-19T03:35:15Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-22T08:20:55Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8890177658849266,
        0.9228306173986427,
        0.9598055749478277,
        0.9065004516079517,
        0.9763276601367906
      ],
      "excerpt": "Fashionpedia is a new dataset which consists of two parts:  (1) an ontology built by fashion experts containing 27 main apparel categories, 19 apparel parts, 294 fine-grained attributes and their relationships; (2) a dataset with 48k everyday and celebrity event fashion images annotated with segmentation masks and their associated per-mask fine-grained attributes, built upon the Fashionpedia ontology.   \nCheck out our project page here and download the data at this link. \n<sub><strong>An illustration of the Fashionpedia dataset and ontology</strong>: (a) main garment masks; (b) garment part masks; (c) both main garment and garment part masks; (d) fine-grained apparel attributes; (e) an exploded view of the annotation diagram: the image is annotated with both instance segmentation masks <em>(white boxes)</em> and per-mask fine-grained attributes <em>(black boxes)</em>; (f) visualization of the Fashionpedia ontology: we created Fashionpedia ontology and separate the concept of categories <em>(yellow nodes)</em> and attributes  <em>(blue nodes)</em> in fashion. It covers pre-defined garment categories used by both Deepfashion2 and ModaNet. Mapping with DeepFashion2 also shows the versatility of using attributes and categories. We are able to present all 13 garment classes in DeepFashion2 with 11 main garment categories, 1 garment part, and 7 attributes.</sub> \nWith the introduction of the dataset, we explore the new task of instance segmentation with attribute localization. The proposed task requires both localizing an object and describing its properties, which unifies instance segmentation (detect and segment each object instance) and fine-grained visual attribute categorization (recognize one or multiple attributes).  \nThis Fashionpedia API enables reading, and visualizing annotations, and evaluating results. Check out our two demos for more details. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9046363979034394
      ],
      "excerpt": "The evaluation code provide here can be used to measure results on the publicly available validation set. It computes multiple metrics describe below.  We consider both localization constraint (IoU) and attributes prediction constraint (F1 score) when computing $AP$ and $AR$. This is an extension of the 12 metrics of COCO detection evaluation. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9926051532322725,
        0.9233105606757719
      ],
      "excerpt": "Additionally, we also provide metrics with only IoU constraint and only F1 thresholds constraint, for better understanding of the algorithm. See evaluation demo  for more details. \nThe results format is similar to COCO format for object detection with additional attribute_ids filed. See evaluation demo and also loadRes() in Fashionpedia API. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Python API for Fashionpedia Dataset",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KMnP/fashionpedia-api/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 10,
      "date": "Mon, 06 Dec 2021 06:00:36 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/KMnP/fashionpedia-api/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "KMnP/fashionpedia-api",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/KMnP/fashionpedia-api/master/eval_demo.ipynb",
      "https://raw.githubusercontent.com/KMnP/fashionpedia-api/master/baseline_predictor_demo.ipynb",
      "https://raw.githubusercontent.com/KMnP/fashionpedia-api/master/fashionpedia_demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```bash\n#: create a new environment:\npython3 -m venv env               #: Create a virtual environment\nsource env/bin/activate           #: Activate virtual environment\n\n#: step 1: install COCO API:\n#: Note: COCO API requires numpy to install. Ensure that you have numpy installed.\n#: e.g. pip install numpy\npip install 'git+https://github.com/cocodataset/cocoapi.git#:subdirectory=PythonAPI'\n\n#: step 2: install Fashionpedia API via pip\npip install fashionpedia\n\n\n#: step 3: test. You can test that you have correctly installed the fashionpedia api\n#:       by running the following command inside the repo.\npython test.py\n\n#: do your work ...\n\ndeactivate  #: exit\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9223776276615457
      ],
      "excerpt": "Clone the repo first and then do the following steps inside the repo: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9056081269396904,
        0.9696309094645071,
        0.9442583750233416,
        0.9928799256216478,
        0.9989489477244536,
        0.9860511679224674,
        0.9912512777997,
        0.9979947896609701,
        0.900248058269452,
        0.8892247833073963
      ],
      "excerpt": "python3 -m venv env               #: Create a virtual environment \nsource env/bin/activate           #: Activate virtual environment \n: step 1: install COCO API: \n: Note: COCO API requires numpy to install. Ensure that you have numpy installed. \n: e.g. pip install numpy \npip install 'git+https://github.com/cocodataset/cocoapi.git#:subdirectory=PythonAPI' \n: step 2: install required packages \npip install -r requirements.txt \n: step 3: test. You can test that you have correctly installed the fashionpedia api \n:       by running the following command inside the repo. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.9515752551715031
      ],
      "excerpt": "python test.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8321729876228606
      ],
      "excerpt": "    AP@[ IoU=0.75      | F1=0.50:0.95 |area=all | maxDets=100] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8321729876228606
      ],
      "excerpt": "    AP@[ IoU=0.50:0.95 | F1=0.75      |area=all | maxDets=100] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8321729876228606,
        0.8321729876228606,
        0.8081373476953657
      ],
      "excerpt": "    AP@[ IoU=0.50      | F1=0.75      |area=all | maxDets=100] \n    AP@[ IoU=0.75      | F1=0.50      |area=all | maxDets=100] \n    AP@[ IoU=0.75      | F1=0.75      |area=all | maxDets=100] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8096366050719789
      ],
      "excerpt": "    \"bbox\": [x,y,width,height],  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/KMnP/fashionpedia-api/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Jupyter Notebook",
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 2-Clause \"Simplified\" License",
      "url": "https://api.github.com/licenses/bsd-2-clause"
    },
    "technique": "GitHub API"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Fashionpedia API",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "fashionpedia-api",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "KMnP",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/KMnP/fashionpedia-api/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 73,
      "date": "Mon, 06 Dec 2021 06:00:36 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "object-detection",
      "fine-grained-visual-categorization",
      "computer-vision"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For the task of instance segmentation with attribute localization, we present a strong baseline model named Attribute-Mask R-CNN that is built upon [Mask R-CNN](<https://arxiv.org/abs/1703.06870>) for Fashionpedia. Check out our [predictior demo](https://github.com/KMnP/fashionpedia-api/blob/master/baseline_predictor_demo.ipynb) and [paper](<https://arxiv.org/abs/2004.12276>) for more details. \n\n![baseline](images/baseline.png)\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}