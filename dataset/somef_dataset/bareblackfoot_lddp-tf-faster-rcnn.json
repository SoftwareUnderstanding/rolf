{
  "citation": [
    {
      "confidence": [
        0.8356013927728488
      ],
      "excerpt": "  NET=res101 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bareblackfoot/lddp-tf-faster-rcnn",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2018-02-19T02:02:34Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-18T06:57:30Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.995485735876684,
        0.917985903123472
      ],
      "excerpt": "A Tensorflow implementation of Learning detection with diverse proposals by Nuri Kim. This repository is based on the Faster R-CNN implementation available here. \nHere, Tested on VOC 2007 test set and VGG16 is used as a backbone network. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8924212690395703
      ],
      "excerpt": "   mv vgg_16.ckpt vgg16.ckpt \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.965651939988263
      ],
      "excerpt": "  #: NET in {vgg16, res50, res101, res152} is the network arch to use \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.965651939988263
      ],
      "excerpt": "  #: NET in {vgg16, res50, res101, res152} is the network arch to use \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Tensorflow implementation of LDDP",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bareblackfoot/lddp-tf-faster-rcnn/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 05 Dec 2021 01:38:32 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bareblackfoot/lddp-tf-faster-rcnn/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "bareblackfoot/lddp-tf-faster-rcnn",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/bareblackfoot/lddp-tf-faster-rcnn/master/experiments/scripts/convert_vgg16.sh",
      "https://raw.githubusercontent.com/bareblackfoot/lddp-tf-faster-rcnn/master/experiments/scripts/test_faster_rcnn.sh",
      "https://raw.githubusercontent.com/bareblackfoot/lddp-tf-faster-rcnn/master/experiments/scripts/train_faster_rcnn.sh",
      "https://raw.githubusercontent.com/bareblackfoot/lddp-tf-faster-rcnn/master/data/scripts/fetch_faster_rcnn_models.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please follow the instructions of py-faster-rcnn [here](https://github.com/rbgirshick/py-faster-rcnn#beyond-the-demo-installation-for-training-and-testing-models) to setup VOC and COCO datasets (Part of COCO is done). The steps involve downloading data and optionally creating soft links in the ``data`` folder. Since faster RCNN does not rely on pre-computed proposals, it is safe to ignore the steps that setup proposals.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "1. Clone the repository\n  ```Shell\n  git clone https://github.com/bareblackfoot/lddp-tf-faster-rcnn.git\n  ```\n\n3. Build the Cython modules\n  ```Shell\n  make clean\n  make\n  cd ..\n  ```\n\n4. Install the [Python COCO API](https://github.com/pdollar/coco). The code requires the API to access COCO dataset.\n  ```Shell\n  cd data\n  git clone https://github.com/pdollar/coco.git\n  cd coco/PythonAPI\n  make\n  cd ../../..\n  ```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "| Method | mAP | mAP on Crowd |\n|:-:|:-:|:-:|\n| Faster R-CNN | 75.8% | 62.0% |\n| Faster R-CNN + LDPP | <b>76.6%</b> | <b>64.5%</b> |\n\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "| Method | mAP | mAP on Crowd |\n|:-:|:-:|:-:|\n| Faster R-CNN | <b>71.4%</b> | 57.7% |\n| Faster R-CNN + LDPP | 70.9% | <b>61.8%</b> |\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.8714135639875408,
        0.9530824742571423
      ],
      "excerpt": "  mkdir -p output/${NET}/${TRAIN_IMDB} \n  cd output/${NET}/${TRAIN_IMDB} \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "  cd ../../.. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8254213883331442,
        0.876031526235143,
        0.8725549602927676
      ],
      "excerpt": "   cd data/imagenet_weights \n   wget -v http://download.tensorflow.org/models/vgg_16_2016_08_28.tar.gz \n   tar -xzvf vgg_16_2016_08_28.tar.gz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.8633405492125716
      ],
      "excerpt": "   cd ../.. \n   For Resnet101, you can set up like: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8254213883331442,
        0.876031526235143,
        0.8725549602927676
      ],
      "excerpt": "   cd data/imagenet_weights \n   wget -v http://download.tensorflow.org/models/resnet_v1_101_2016_08_28.tar.gz \n   tar -xzvf resnet_v1_101_2016_08_28.tar.gz \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "   cd ../.. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.884067387307346,
        0.9069687384322455
      ],
      "excerpt": "  ./experiments/scripts/train_lddp.sh [GPU_ID] [DATASET] [NET] \n  #: GPU_ID is the GPU you want to test on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9549997561619052
      ],
      "excerpt": "  ./experiments/scripts/train_lddp.sh 1 coco res101 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.884067387307346,
        0.9069687384322455
      ],
      "excerpt": "  ./experiments/scripts/test_lddp.sh [GPU_ID] [DATASET] [NET] \n  #: GPU_ID is the GPU you want to test on \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9549997561619052
      ],
      "excerpt": "  ./experiments/scripts/test_lddp.sh 1 coco res101 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8373472376732995
      ],
      "excerpt": "Download pre-trained model \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8145446807398
      ],
      "excerpt": "  if you want to test the model trained on VOC 2007, the trained model is here. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8275093558259294
      ],
      "excerpt": "Train (and test, evaluation) \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8838148168639296
      ],
      "excerpt": "  #: Examples: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8838148168639296
      ],
      "excerpt": "  #: Examples: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/bareblackfoot/lddp-tf-faster-rcnn/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Cuda",
      "MATLAB",
      "Roff",
      "C++",
      "Makefile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2017 Xinlei Chen\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Learning detection with diverse proposals",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "lddp-tf-faster-rcnn",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "bareblackfoot",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/bareblackfoot/lddp-tf-faster-rcnn/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "  - A basic Tensorflow installation. I used tensorflow 1.7.\n  - Python packages you might not have: `cython`, `opencv-python`, `easydict` (similar to [py-faster-rcnn](https://github.com/rbgirshick/py-faster-rcnn)).\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 9,
      "date": "Sun, 05 Dec 2021 01:38:32 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "tensorflow",
      "lddp",
      "learning",
      "detection"
    ],
    "technique": "GitHub API"
  }
}