{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1612.08242\n\n> YOLOv3: An Incremental Improvement https://pjreddie.com/media/files/papers/YOLOv3.pdf\n\n> Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks\n\n> Mask R-CNN \n"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "> You Only Look Once: Unified, Real-Time Object detection http://arxiv.org/abs/1506.02640\n\n> YOLO9000: Better, Faster, Stronger https://arxiv.org/abs/1612.08242\n\n> YOLOv3: An Incremental Improvement https://pjreddie.com/media/files/papers/YOLOv3.pdf\n\n> Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks\n\n> Mask R-CNN \n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.988781173171839
      ],
      "excerpt": "[x] Demos for object detection, mask segmentation and keypoints recognition \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leon-liangwu/MaskYolo_Caffe",
    "technique": "GitHub API"
  },
  "contributingGuidelines": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributing\nIssues\nSpecific Caffe design and development issues, bugs, and feature requests are maintained by GitHub Issues.\nPlease do not post usage, installation, or modeling questions, or other requests for help to Issues.\nUse the caffe-users list instead. This helps developers maintain a clear, uncluttered, and efficient view of the state of Caffe.\nWhen reporting a bug, it's most helpful to provide the following information, where applicable:\n\nWhat steps reproduce the bug?\nCan you reproduce the bug using the latest master, compiled with the DEBUG make option?\nWhat hardware and operating system/distribution are you running?\nIf the bug is a crash, provide the backtrace (usually printed by Caffe; always obtainable with gdb).\n\nTry to give your issue a title that is succinct and specific. The devs will rename issues as needed to keep track of them.\nPull Requests\nCaffe welcomes all contributions.\nSee the contributing guide for details.\nBriefly: read commit by commit, a PR should tell a clean, compelling story of one improvement to Caffe. In particular:\n\nA PR should do one clear thing that obviously improves Caffe, and nothing more. Making many smaller PRs is better than making one large PR; review effort is superlinear in the amount of code involved.\nSimilarly, each commit should be a small, atomic change representing one step in development. PRs should be made of many commits where appropriate.\nPlease do rewrite PR history to be clean rather than chronological. Within-PR bugfixes, style cleanups, reversions, etc. should be squashed and should not appear in merged PR history.\nAnything nonobvious from the code should be explained in comments, commit messages, or the PR description, as appropriate.",
    "technique": "File Exploration"
  },
  "contributors": {
    "confidence": [
      1.0
    ],
    "excerpt": "Contributors\nCaffe is developed by a core set of BAIR members and the open-source community.\nWe thank all of our contributors!\nFor the detailed history of contributions of a given file, try\ngit blame file\n\nto see line-by-line credits and\ngit log --follow file\n\nto see the change log even across renames and rewrites.\nPlease refer to the acknowledgements on the Caffe site for further details.\nCopyright is held by the original contributor according to the versioning history; see LICENSE.",
    "technique": "File Exploration"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-05-12T03:40:14Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-10T05:01:29Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8369902734084964
      ],
      "excerpt": "[x] YOLO v2 (RegionLossLayer) and v3 (YoloLossLayer) are supported \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9274265973955087
      ],
      "excerpt": ": compile the pythonapi of cocoapi \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.83608198580208
      ],
      "excerpt": ": the training for mask consists of 2 steps \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8927181955082992
      ],
      "excerpt": ": 1. freeze the weights of detection network, only update the roi mask part \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.990717149018307
      ],
      "excerpt": ": 2. update all the network with finetuning the model of step1 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "YOLO V2 & V3 ,  YOLO Combined with RCNN and MaskRCNN",
      "technique": "GitHub API"
    }
  ],
  "download": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Click [DropBox](https://www.dropbox.com/sh/lal0vqga5nprcoq/AABqcH8h4pjm3Hm4SuKnNfMea?dl=0 \"pretrained models\") or [WeiYun](https://share.weiyun.com/5RhZR3S) to download pretrained models\n```\ncd ROOT_MaskYolo\ntar zxvf /your/downlaod/model/path/pretrained_models.tgz ./models_maskyolo/\n```\n\n\n",
      "technique": "Header extraction"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leon-liangwu/MaskYolo_Caffe/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 51,
      "date": "Mon, 13 Dec 2021 22:16:23 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/leon-liangwu/MaskYolo_Caffe/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "leon-liangwu/MaskYolo_Caffe",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/docker/gpu/Dockerfile",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/docker/cpu/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/leon-liangwu/MaskYolo_Caffe/tree/master/caffe-maskyolo/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/02-fine-tuning.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/pascal-multilabel-with-datalayer.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/net_surgery.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/detection.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/01-learning-lenet.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/brewing-logreg.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/00-classification.ipynb",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/siamese/mnist_siamese.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/scripts/convert_detection.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/models_maskyolo/mb_v2_t4_cls5_yolo/train_yolo.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/models_maskyolo/mb_body_mask/train_maskyolo_step2.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/models_maskyolo/mb_body_mask/train_maskyolo_step1.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/models_maskyolo/mb_body_mask_kps/train_maskyolo_step2.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/models_maskyolo/mb_body_mask_kps/train_maskyolo_step1.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/deploy_docs.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/build_docs.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/download_model_from_gist.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/upload_model_to_gist.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/gather_examples.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/install-python-deps.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/test.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/defaults.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/setup-venv.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/configure-make.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/configure.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/build.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/install-deps.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/scripts/travis/configure-cmake.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/data/ilsvrc12/get_ilsvrc_aux.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/data/cifar10/get_cifar10.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/data/mnist/get_mnist.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/data/yolo/convert_detection.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/imagenet/create_imagenet.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/imagenet/resume_training.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/imagenet/train_caffenet.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/imagenet/make_imagenet_mean.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/cifar10/create_cifar10.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/cifar10/train_quick.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/cifar10/train_full_sigmoid.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/cifar10/train_full_sigmoid_bn.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/cifar10/train_full.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_lenet_adam.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_lenet_consolidated.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_lenet_docker.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_mnist_autoencoder_adagrad.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_lenet_rmsprop.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/create_mnist.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_mnist_autoencoder_nesterov.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_lenet.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_mnist_autoencoder.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/mnist/train_mnist_autoencoder_adadelta.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/siamese/create_mnist_siamese.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/examples/siamese/train_mnist_siamese.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/tools/extra/parse_log.sh",
      "https://raw.githubusercontent.com/leon-liangwu/MaskYolo_Caffe/master/caffe-maskyolo/tools/extra/launch_resize_and_crop_images.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n#: clone\ngit clone https://github.com/leon-liangwu/MaskYolo_Caffe.git --recursive\n\n#: install requirements\ncd ROOT_MaskYolo\npip install -r requirements.txt\n\n#: compile box_utils\ncd lib/box_utils\npython setup.py build_ext --inplace\n\n#: compile caffe\ncd caffe-maskyolo\ncp Makefile.config.example Makefile.config\nmake -j\nmake pycaffe\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd ROOT_MaskYolo \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9548412519050857
      ],
      "excerpt": "sh ./scripts/convert_detection.sh  /path/to/train.txt /path/to/lmdb    \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9771384723171962,
        0.9023697225149864
      ],
      "excerpt": "cd ./models/mb_v2_t4_cls5_yolo/ \nsh train_yolo.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9037432059577157,
        0.8474895321345809
      ],
      "excerpt": "cd ROOT_MaskYolo/lib/cocoapi/PythonAPI \nmake -j \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466,
        0.8765671626365064
      ],
      "excerpt": "cd ROOT_MaskYolo \npython scripts/createdata_mask.py --coco_dir=/path/to/coco --lmdb_dir=/path/to/lmdb \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd ./models_maskyolo/mb_body_mask \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh train_maskyolo_step1.sh \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9023697225149864
      ],
      "excerpt": "sh train_maskyolo_step2.sh \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8625314606035075
      ],
      "excerpt": "[x] training data preparation and training \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/leon-liangwu/MaskYolo_Caffe/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "C++",
      "Python",
      "Cuda",
      "CMake",
      "MATLAB",
      "Shell",
      "Makefile",
      "CSS",
      "HTML",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'COPYRIGHT\\n\\nAll contributions by the University of California:\\nCopyright (c) 2014-2017 The Regents of the University of California (Regents)\\nAll rights reserved.\\n\\nAll other contributions:\\nCopyright (c) 2014-2017, the respective contributors\\nAll rights reserved.\\n\\nCaffe uses a shared copyright model: each contributor holds copyright over\\ntheir contributions to Caffe. The project versioning records all such\\ncontribution and copyright details. If a contributor wants to further mark\\ntheir specific copyright on a particular contribution, they should indicate\\ntheir copyright solely in the commit message of the change when it is\\ncommitted.\\n\\nLICENSE\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met: \\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer. \\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution. \\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\nCONTRIBUTION AGREEMENT\\n\\nBy contributing to the BVLC/caffe repository through pull-request, comment,\\nor otherwise, the contributor releases their content to the\\nlicense and copyright terms herein.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "YOLO Caffe version with MaskRCNN",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "MaskYolo_Caffe",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "leon-liangwu",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/leon-liangwu/MaskYolo_Caffe/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 108,
      "date": "Mon, 13 Dec 2021 22:16:23 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "detection",
      "yolo",
      "keypoints",
      "instance-mask",
      "caffe",
      "maskrcnn",
      "yolact",
      "realtime"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ncd tools\npython yolo_inference.py [--img_path=xxx.jpg] [--model=xxx.prototxt] [--weights=xxx.caffemodel]\n#: Net forward time consumed: 3.96ms\n```\nThe demo result is shown below.\n\n![](assets/detection1.png)\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ncd tools\npython mask_inference.py [--img_path=xxx.jpg] [--model=xxx.prototxt] [--weights=xxx.caffemodel] \n#: Net forward time consumed: 8.67ms\n\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "```\ncd tools\n\npython kps_inference.py [--img_path=xxx.jpg] [--model=xxx.prototxt] [--weights=xxx.caffemodel] \n#: Net forward time consumed: 5.58ms\n```\n\n\n\n",
      "technique": "Header extraction"
    }
  ]
}