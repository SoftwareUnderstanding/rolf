{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2006.09661"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you find our work useful in your research, please cite:\n```\n@inproceedings{sitzmann2019siren,\n    author = {Sitzmann, Vincent\n              and Martel, Julien N.P.\n              and Bergman, Alexander W.\n              and Lindell, David B.\n              and Wetzstein, Gordon},\n    title = {Implicit Neural Representations\n              with Periodic Activation Functions},\n    booktitle = {arXiv},\n    year={2020}\n}\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@inproceedings{sitzmann2019siren,\n    author = {Sitzmann, Vincent\n              and Martel, Julien N.P.\n              and Bergman, Alexander W.\n              and Lindell, David B.\n              and Wetzstein, Gordon},\n    title = {Implicit Neural Representations\n              with Periodic Activation Functions},\n    booktitle = {arXiv},\n    year={2020}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9104388306336967
      ],
      "excerpt": "Stanford University, *denotes equal contribution \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9278824608274014
      ],
      "excerpt": "link above. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vsitzmann/siren",
    "technique": "GitHub API"
  },
  "contact": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you have any questions, please feel free to email the authors.\n",
      "technique": "Header extraction"
    }
  ],
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-06-23T04:41:51Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-12-07T11:28:37Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.986285214588333
      ],
      "excerpt": "This is the official implementation of the paper \"Implicit Neural Representations with Periodic Activation Functions\". \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8925788296870343
      ],
      "excerpt": "It's quite comprehensive and comes with a no-frills, drop-in implementation of SIREN. It doesn't require  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8309618888697152,
        0.9653487113887153
      ],
      "excerpt": "* Initialization scheme & distribution of activations \n* Distribution of activations is shift-invariant \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8741524104998177,
        0.8553549982554667
      ],
      "excerpt": "You can also play arond with a tiny SIREN interactively, directly in the browser, via the Tensorflow Playground here. Thanks to David Cato for implementing this! \nThe code is organized as follows: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8461836825398741
      ],
      "excerpt": "* diff_operators.py contains implementations of differential operators. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.862340634377777
      ],
      "excerpt": "* ./experiment_scripts/ contains scripts to reproduce experiments in the paper. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9362223351788266
      ],
      "excerpt": "This github repository comes with both the \"counting\" and \"bach\" audio clips under ./data. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9977861617708352
      ],
      "excerpt": "To reproduce our results, we provide both models of the Thai Statue from the 3D Stanford model repository and the living room used in our paper \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9796019127220628,
        0.8331845260859236,
        0.947369879689935,
        0.8932912949232672
      ],
      "excerpt": "The batch_size is typically adjusted to fit in the entire memory of your GPU.  \nOur experiments show that with a 256, 3 hidden layer SIREN one can set the batch size between 230-250'000 for a NVidia GPU with 12GB memory. \nTo inspect a SDF fitted to a 3D point cloud, we now need to create a mesh from the zero-level set of the SDF.  \nThis is performed with another script that uses a marching cubes algorithm (adapted from the DeepSDF github repo)  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.949218320059089
      ],
      "excerpt": "The .ply file can be visualized using a software such as Meshlab (a cross-platform visualizer and editor for 3D models). \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Official implementation of \"Implicit Neural Representations with Periodic Activation Functions\"",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vsitzmann/siren/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 161,
      "date": "Thu, 09 Dec 2021 00:09:30 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/vsitzmann/siren/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "vsitzmann/siren",
    "technique": "GitHub API"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/vsitzmann/siren/master/explore_siren.ipynb"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        0.843849368965567
      ],
      "excerpt": "installing anything, and goes through the following experiments / SIREN properties: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9109626138166453
      ],
      "excerpt": "Some of the experiments were run using the BSD500 datast, which you can download here. \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.912885926723192,
        0.8654211305080205
      ],
      "excerpt": "* dataio.py loads training and testing data. \n* training.py contains a generic training routine. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8064005795536997
      ],
      "excerpt": "* utils.py contains utility functions, most promintently related to the writing of Tensorboard summaries. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python experiment_scripts/train_img.py --model_type=sine \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "python experiment_scipts/train_video.py --model_type=sine --experiment_name bikes_video \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8538232206724007
      ],
      "excerpt": "(train_poisson_grad_img.py), from its laplacian (train_poisson_lapl_image.py), and to combine two images  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8172356472158919,
        0.8741358126208436
      ],
      "excerpt": "for download here. \nTo start training a SIREN, run: \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/vsitzmann/siren/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Jupyter Notebook"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2020 Vincent Sitzmann\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Implicit Neural Representations with Periodic Activation Functions",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "siren",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "vsitzmann",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/vsitzmann/siren/blob/master/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1130,
      "date": "Thu, 09 Dec 2021 00:09:30 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "If you want to reproduce all the results (including the baselines) shown in the paper, the videos, point clouds, and \naudio files can be found [here](https://drive.google.com/drive/folders/1_iq__37-hw7FJOEUK1tX7mdp8SKB368K?usp=sharing).\n\nYou can then set up a conda environment with all dependencies like so:\n```\nconda env create -f environment.yml\nconda activate siren\n```\n\n",
      "technique": "Header extraction"
    }
  ]
}