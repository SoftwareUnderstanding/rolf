{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1706.03762"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.9199311608228294
      ],
      "excerpt": "JAX/Flax implimentation of 'Attention Is All You Need' by Vaswani et al. (https://arxiv.org/abs/1706.03762) \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Bhavnicksm/vanilla-transformer-jax",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-08-16T04:57:44Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-14T15:45:32Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "JAX/Flax implimentation of 'Attention Is All You Need' by Vaswani et al. (https://arxiv.org/abs/1706.03762)  ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Bhavnicksm/vanilla-transformer-jax/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Tue, 07 Dec 2021 10:55:27 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Bhavnicksm/vanilla-transformer-jax/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "Bhavnicksm/vanilla-transformer-jax",
    "technique": "GitHub API"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Use the package manager [pip](https://pip.pypa.io/en/stable/) to install the package in the following way:\n\n```bash\npip install vanilla-transformer-jax\n```\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/Bhavnicksm/vanilla-transformer-jax/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "MIT License",
      "url": "https://api.github.com/licenses/mit"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'MIT License\\n\\nCopyright (c) 2021 Bhavnicksm\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Vanilla Transformer",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "vanilla-transformer-jax",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "Bhavnicksm",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/Bhavnicksm/vanilla-transformer-jax/blob/main/README.md",
    "technique": "GitHub API"
  },
  "releases": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      {
        "authorType": "User",
        "author_name": "Bhavnicksm",
        "body": "First working release",
        "dateCreated": "2021-08-16T06:32:34Z",
        "datePublished": "2021-08-16T06:38:59Z",
        "html_url": "https://github.com/Bhavnicksm/vanilla-transformer-jax/releases/tag/0.0.3",
        "name": "",
        "tag_name": "0.0.3",
        "tarball_url": "https://api.github.com/repos/Bhavnicksm/vanilla-transformer-jax/tarball/0.0.3",
        "url": "https://api.github.com/repos/Bhavnicksm/vanilla-transformer-jax/releases/47888205",
        "zipball_url": "https://api.github.com/repos/Bhavnicksm/vanilla-transformer-jax/zipball/0.0.3"
      }
    ],
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 3,
      "date": "Tue, 07 Dec 2021 10:55:27 GMT"
    },
    "technique": "GitHub API"
  },
  "topics": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "artificial-intelligence",
      "transformer",
      "natural-language-processing"
    ],
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "To use the entire Transformer model (encoder and decoder), you can use the following way:\n\n```python\nfrom jax import random\nfrom vtransformer import Transformer #: imports Transformer class\n\nmodel = Transformer() #: model hyperparameters can be tuned, otherwise defualts mentioned in paper shall be used\n\nprng = random.PRNGKey(42)\n\nexample_input_src = jax.random.randint(prng, (3,4), minval=0, maxval=10000)\nexample_input_trg = jax.random.randint(prng, (3,5), minval=0, maxval=10000)\nmask = jax.array([1, 1, 1, 0, 0])\n\ninit = model.init(prng, example_input_src, example_input_trg, mask) #:initializing the params of model\n\noutput = model.apply(init, example_input_src, example_input_trg, mask) #: getting output\n```\n\nTo use Encoder and Decoder seperately, you can do so in the following way:\n\n```python\nencoding = model.encoder(init, example_input_src)  #:using only the encoder\ndecoding = model.decoder(init, example_input_trg, encoding, mask) #:using only the decoder\n```\n\n\n",
      "technique": "Header extraction"
    }
  ]
}