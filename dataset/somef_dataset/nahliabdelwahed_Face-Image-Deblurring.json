{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1703.10593\n- Scale-recurrent Network Original paper: http://www.xtao.website/projects/srndeblur/srndeblur_cvpr18.pdf\n\n### Our main contributions in this work are:\n-Rather than using CycleGAN [6] just for data augmentation as it is communally used in some recent works. Instead we present a use case where we can exploit this algorithm for data labeling moreover than just data augmentation.\n-To better address the face image blurring problematic, we present a sequential learning strategy in a learning chain consists of an unsupervised learning based-algorithm in charge of data labeling and a supervised learning-guided algorithm taking charge of face image recovery.\n-We investigated the face image deblurring impact on the face detection accuracy.\n\n### The first training phase: CycleGAN  \n<img src=\"./imgs/phase1.PNG\" width=\"100%\" alt=\"Real Photo\">\n\n### The second training phase: SNR using the trained CycleGAN as a backbone. \n<img src=\"./imgs/phase2.PNG\" width=\"100%\" alt=\"Testing Dataset\">\n\n### Visual comparisons on our testing dataset. from left to right: Ground truth, Blurred input, Tao et al, Yuan et al, Zhu et al, Ours.\n<img src=\"./imgs/results1.PNG\" width=\"100%\" alt=\"More Cases\">\n\n### Visual comparisons on real blurred face images. From left to right: blurred input, Tao et al, Yuan et al , Zhu et al , Ours. \n<img src=\"./imgs/results2.PNG\" width=\"100%\" alt=\"More Cases\">\n\n### FaceBox, Face detection algorithm performance on our face deblurring results: a, b and c respectively show the ground truth, blurred and restored version.\n<img src=\"./imgs/face.PNG\" width=\"100%\" alt=\"More Cases\">\n\n\n# CycleGAN\n## Requirements\n- [TensorFlow](https://www.tensorflow.org/"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        0.994799811898885
      ],
      "excerpt": "CycleGAN Original paper: https://arxiv.org/abs/1703.10593 \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nahliabdelwahed/Face-Image-Deblurring",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2020-01-31T13:15:29Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-07-16T02:25:26Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8413349321061038
      ],
      "excerpt": "This project was motivated by CycleGANand Scale-recurrent Network . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9497800171703622,
        0.9850256958488577,
        0.8700867221968924
      ],
      "excerpt": "-Rather than using CycleGAN [6] just for data augmentation as it is communally used in some recent works. Instead we present a use case where we can exploit this algorithm for data labeling moreover than just data augmentation. \n-To better address the face image blurring problematic, we present a sequential learning strategy in a learning chain consists of an unsupervised learning based-algorithm in charge of data labeling and a supervised learning-guided algorithm taking charge of face image recovery. \n-We investigated the face image deblurring impact on the face detection accuracy. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.946124999812297
      ],
      "excerpt": "Samples of dataset we use are in the CycleGAN/CycleGAN_Data folder,for better performance collect more real face unlabeled clear/blurred image training data . \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8888244179297263
      ],
      "excerpt": "Our pretrained models are in the CycleGAN_Model folder. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8106638458310618
      ],
      "excerpt": "Please put the dataset into training_set/. And the provided datalist.txt can be used to train the model, follow the template and adapt its contain to your data order and location.   \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9025392548769076
      ],
      "excerpt": "To test the model, pre-defined height and width of tensorflow  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8774722514078205,
        0.9143309104158892,
        0.8340348334119554
      ],
      "excerpt": "Our network requires the height and width be multiples of 16.  \nWhen the gpu memory is enough, the height and width could be assigned to  \nthe maximum to accommodate all the images.  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8565409196872866,
        0.9773859413663348,
        0.8352541674056172
      ],
      "excerpt": "be fed into the placeholder. And results will be upsampled to the original size. \nAccording to our experience, --height=720 and --width=1280 work well  \non a Gefore GTX 1050 TI with 4GB memory. For example,  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "Face Image Deblurring: A Data-Driven Learning Strategy ",
      "technique": "GitHub API"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nahliabdelwahed/Face-Image-Deblurring/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Sun, 05 Dec 2021 20:32:21 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nahliabdelwahed/Face-Image-Deblurring/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "nahliabdelwahed/Face-Image-Deblurring",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/nahliabdelwahed/Face-Image-Deblurring/master/CycleGAN/CycleGAN_Code/download_dataset.sh",
      "https://raw.githubusercontent.com/nahliabdelwahed/Face-Image-Deblurring/master/CycleGAN/CycleGAN_Code/CycleGAN_test.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Clone this project to your machine. \n\n```bash\ngit clone https://github.com/jiangsutx/SRN-Deblur.git\ncd SRN-Deblur\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd CycleGAN/CycleGAN_Code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "$ cd CycleGAN/CycleGAN_Code \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd /CycleGAN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9906248903846466
      ],
      "excerpt": "cd /CycleGAN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9444448486935786
      ],
      "excerpt": "cd /SRN \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9656578885764998,
        0.9205405420517994,
        0.8788217729872652
      ],
      "excerpt": "If you have a GPU, please include --gpu argument, and add your gpu id to your command.  \nOtherwise, use --gpu=-1 for CPU.  \npython run_model.py --gpu=0 \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8895391946372202,
        0.9333129692630641,
        0.8767087562823989,
        0.8767087562823989
      ],
      "excerpt": "<img src=\"./imgs/phase1.PNG\" width=\"100%\" alt=\"Real Photo\"> \n<img src=\"./imgs/phase2.PNG\" width=\"100%\" alt=\"Testing Dataset\"> \n<img src=\"./imgs/results1.PNG\" width=\"100%\" alt=\"More Cases\"> \n<img src=\"./imgs/results2.PNG\" width=\"100%\" alt=\"More Cases\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8292547870973503
      ],
      "excerpt": "Write the dataset to tfrecords \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9246227682586091
      ],
      "excerpt": "$ python build_data.py --X_input_dir  CycleGAN/CycleGAN_dataset/trainA \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9503189345333785
      ],
      "excerpt": "$ python train.py --X CycleGAN/CycleGAN_dataset/blurred.tfrecords \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.848555605052425
      ],
      "excerpt": "To change other default settings, you can check train.py \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8461290029422484
      ],
      "excerpt": "$ python export_graph.py --checkpoint_dir checkpoints/${datetime} \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8304949395058047,
        0.8712520075279626,
        0.9093731485451835
      ],
      "excerpt": "python inference.py --model CycleGAN_Model/sharp2blurred.pb \\ \n                     --input input_sample.jpg \\ \n                     --output output_sample.jpg \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8304949395058047,
        0.8712520075279626,
        0.9093731485451835
      ],
      "excerpt": "python inference.py --model CycleGAN_Model/sharp2blurred.pb \\ \n                     --input input_sample.jpg \\ \n                     --output output_sample.jpg \\ \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9226536197774666
      ],
      "excerpt": "python run_model.py --phase=train --batch=16 --lr=1e-4 --epoch=4000 \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8476807821813728
      ],
      "excerpt": "To test blur images in a folder, just use arguments  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8216270093103228
      ],
      "excerpt": "For example: \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9004255152883833
      ],
      "excerpt": "python run_model.py --input_path=./testing_set --output_path=./testing_res \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9126630212576433,
        0.8235416612622709
      ],
      "excerpt": "python run_model.py --gpu=0 \nTo test the model, pre-defined height and width of tensorflow  \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/nahliabdelwahed/Face-Image-Deblurring/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Makefile",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "BSD 2-Clause \"Simplified\" License",
      "url": "https://api.github.com/licenses/bsd-2-clause"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 2-Clause License\\n\\nCopyright (c) 2020, abdelwahed nahli\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face image deblurring: A Two Phases Data-Driven Learning Strategy",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "Face-Image-Deblurring",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "nahliabdelwahed",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/nahliabdelwahed/Face-Image-Deblurring/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- [TensorFlow](https://www.tensorflow.org/)\n- [Keras](https://pypi.org/project/Keras/)\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python2.7\n- Scipy\n- Scikit-image\n- numpy\n- Tensorflow 1.4 with NVIDIA GPU or CPU (cpu testing is very slow)\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 1,
      "date": "Sun, 05 Dec 2021 20:32:21 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "<img src=\"./imgs/face.PNG\" width=\"100%\" alt=\"More Cases\">\n\n\n",
      "technique": "Header extraction"
    }
  ]
}