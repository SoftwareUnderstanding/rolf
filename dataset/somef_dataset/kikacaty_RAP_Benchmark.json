{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/2105.15203",
      "https://arxiv.org/abs/2105.15203",
      "https://arxiv.org/abs/2105.15203"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@article{xie2021segformer,\n  title={SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers},\n  author={Xie, Enze and Wang, Wenhai and Yu, Zhiding and Anandkumar, Anima and Alvarez, Jose M and Luo, Ping},\n  journal={arXiv preprint arXiv:2105.15203},\n  year={2021}\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@article{xie2021segformer,\n  title={SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers},\n  author={Xie, Enze and Wang, Wenhai and Yu, Zhiding and Anandkumar, Anima and Alvarez, Jose M and Luo, Ping},\n  journal={arXiv preprint arXiv:2105.15203},\n  year={2021}\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.8207940084462922
      ],
      "excerpt": ": Multi-gpu, multi-scale testing \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kikacaty/RAP_Benchmark",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-09T05:08:56Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-11-11T21:18:34Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.9289281754606481
      ],
      "excerpt": "  Figure 1: Performance of SegFormer-B0 to SegFormer-B5. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9147559725114737
      ],
      "excerpt": "Here is a demo script to test a single image. More details refer to MMSegmentation's Doc. \n",
      "technique": "Supervised classification"
    }
  ],
  "documentation": [
    {
      "confidence": [
        1.0
      ],
      "excerpt": "https://mmsegmentation.readthedocs.io/",
      "technique": "Regular expression"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kikacaty/RAP_Benchmark/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 09 Dec 2021 21:34:33 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kikacaty/RAP_Benchmark/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "kikacaty/RAP_Benchmark",
    "technique": "GitHub API"
  },
  "hasBuildFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/docker/Dockerfile"
    ],
    "technique": "File Exploration"
  },
  "hasDocumentation": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://github.com/kikacaty/RAP_Benchmark/tree/main/docs"
    ],
    "technique": "File Exploration"
  },
  "hasExecutableNotebook": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/demo/MMSegmentation_Tutorial.ipynb",
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/demo/inference_demo.ipynb"
    ],
    "technique": "File Exploration"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/init.sh",
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/tools/slurm_train.sh",
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/tools/slurm_test.sh",
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/tools/dist_test.sh",
      "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/tools/dist_train.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "For install and data preparation, please refer to the guidelines in [MMSegmentation v0.13.0](https://github.com/open-mmlab/mmsegmentation/tree/v0.13.0).\n\nOther requirements:\n```pip install timm==0.3.2```\n\nAn example (works for me): ```CUDA 10.1``` and  ```pytorch 1.7.1``` \n\n```\npip install torchvision==0.8.2\npip install timm==0.3.2\npip install mmcv-full==1.2.7\npip install opencv-python==4.5.1.48\ncd SegFormer && pip install -e . --user\n```\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        0.831828618014223
      ],
      "excerpt": "./tools/dist_test.sh local_configs/segformer/B1/segformer.b1.512x512.ade.160k.py /path/to/checkpoint_file <GPU_NUM> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8385918301957601
      ],
      "excerpt": "tools/dist_test.sh local_configs/segformer/B1/segformer.b1.512x512.ade.160k.py /path/to/checkpoint_file <GPU_NUM> --aug-test \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8675387287277526
      ],
      "excerpt": "Example: train SegFormer-B1 on ADE20K: \n",
      "technique": "Supervised classification"
    }
  ],
  "invocation": [
    {
      "confidence": [
        0.8879218905957321
      ],
      "excerpt": "  <img src=\"./resources/image.png\" height=\"400\"> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8614979684451042
      ],
      "excerpt": "python tools/test.py local_configs/segformer/B1/segformer.b1.512x512.ade.160k.py /path/to/checkpoint_file \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8608592247395631
      ],
      "excerpt": "Download weights pretrained on ImageNet-1K, and put them in a folder pretrained/. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8625974457346843
      ],
      "excerpt": "python tools/train.py local_configs/segformer/B1/segformer.b1.512x512.ade.160k.py  \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9333574343066754
      ],
      "excerpt": "python demo/image_demo.py ${IMAGE_FILE} ${CONFIG_FILE} ${CHECKPOINT_FILE} [--device ${DEVICE_NAME}] [--palette-thr ${PALETTE}] \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8958439265592077
      ],
      "excerpt": "python demo/image_demo.py demo/demo.png local_configs/segformer/B1/segformer.b1.512x512.ade.160k.py \\ \n",
      "technique": "Supervised classification"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/kikacaty/RAP_Benchmark/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Shell",
      "Dockerfile"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Other",
      "url": "https://raw.githubusercontent.com/kikacaty/RAP_Benchmark/main/LICENSE"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'NVIDIA Source Code License for SegFormer\\n\\n1. Definitions\\n\\n\\xe2\\x80\\x9cLicensor\\xe2\\x80\\x9d means any person or entity that distributes its Work.\\n\\n\\xe2\\x80\\x9cSoftware\\xe2\\x80\\x9d means the original work of authorship made available under this License.\\n\\n\\xe2\\x80\\x9cWork\\xe2\\x80\\x9d means the Software and any additions to or derivative works of the Software that are made available under\\nthis License.\\n\\nThe terms \\xe2\\x80\\x9creproduce,\\xe2\\x80\\x9d \\xe2\\x80\\x9creproduction,\\xe2\\x80\\x9d \\xe2\\x80\\x9cderivative works,\\xe2\\x80\\x9d and \\xe2\\x80\\x9cdistribution\\xe2\\x80\\x9d have the meaning as provided under\\nU.S. copyright law; provided, however, that for the purposes of this License, derivative works shall not include\\nworks that remain separable from, or merely link (or bind by name) to the interfaces of, the Work.\\n\\nWorks, including the Software, are \\xe2\\x80\\x9cmade available\\xe2\\x80\\x9d under this License by including in or with the Work either\\n(a) a copyright notice referencing the applicability of this License to the Work, or (b) a copy of this License.\\n\\n2. License Grant\\n\\n2.1 Copyright Grant. Subject to the terms and conditions of this License, each Licensor grants to you a perpetual,\\nworldwide, non-exclusive, royalty-free, copyright license to reproduce, prepare derivative works of, publicly\\ndisplay, publicly perform, sublicense and distribute its Work and any resulting derivative works in any form.\\n\\n3. Limitations\\n\\n3.1 Redistribution. You may reproduce or distribute the Work only if (a) you do so under this License, (b) you\\ninclude a complete copy of this License with your distribution, and (c) you retain without modification any\\ncopyright, patent, trademark, or attribution notices that are present in the Work.\\n\\n3.2 Derivative Works. You may specify that additional or different terms apply to the use, reproduction, and\\ndistribution of your derivative works of the Work (\\xe2\\x80\\x9cYour Terms\\xe2\\x80\\x9d) only if (a) Your Terms provide that the use\\nlimitation in Section 3.3 applies to your derivative works, and (b) you identify the specific derivative works\\nthat are subject to Your Terms. Notwithstanding Your Terms, this License (including the redistribution\\nrequirements in Section 3.1) will continue to apply to the Work itself.\\n\\n3.3 Use Limitation. The Work and any derivative works thereof only may be used or intended for use\\nnon-commercially. Notwithstanding the foregoing, NVIDIA and its affiliates may use the Work and any derivative\\nworks commercially. As used herein, \\xe2\\x80\\x9cnon-commercially\\xe2\\x80\\x9d means for research or evaluation purposes only.\\n\\n3.4 Patent Claims. If you bring or threaten to bring a patent claim against any Licensor (including any claim,\\ncross-claim or counterclaim in a lawsuit) to enforce any patents that you allege are infringed by any Work, then\\nyour rights under this License from such Licensor (including the grant in Section 2.1) will terminate immediately.\\n\\n3.5 Trademarks. This License does not grant any rights to use any Licensor\\xe2\\x80\\x99s or its affiliates\\xe2\\x80\\x99 names, logos,\\nor trademarks, except as necessary to reproduce the notices described in this License.\\n\\n3.6 Termination. If you violate any term of this License, then your rights under this License (including the\\ngrant in Section 2.1) will terminate immediately.\\n\\n4. Disclaimer of Warranty.\\n\\nTHE WORK IS PROVIDED \\xe2\\x80\\x9cAS IS\\xe2\\x80\\x9d WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING\\nWARRANTIES OR CONDITIONS OF M ERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR NON-INFRINGEMENT. YOU\\nBEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER THIS LICENSE.\\n\\n5. Limitation of Liability.\\n\\nEXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING\\nNEGLIGENCE), CONTRACT, OR OTHERWISE SHALL ANY LICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT,\\nINDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF OR RELATED TO THIS LICENSE, THE USE OR\\nINABILITY TO USE THE WORK (INCLUDING BUT NOT LIMITED TO LOSS OF GOODWILL, BUSINESS INTERRUPTION, LOST PROFITS OR\\nDATA, COMPUTER FAILURE OR MALFUNCTION, OR ANY OTHER COMM ERCIAL DAMAGES OR LOSSES), EVEN IF THE LICENSOR HAS BEEN\\nADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\\n'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "RAP_Benchmark",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "kikacaty",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/kikacaty/RAP_Benchmark/blob/main/README.md",
    "technique": "GitHub API"
  },
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 0,
      "date": "Thu, 09 Dec 2021 21:34:33 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers.<br>\n[Enze Xie](https://xieenze.github.io/), [Wenhai Wang](https://whai362.github.io/), [Zhiding Yu](https://chrisding.github.io/), [Anima Anandkumar](http://tensorlab.cms.caltech.edu/users/anima/), [Jose M. Alvarez](https://rsu.data61.csiro.au/people/jalvarez/), and [Ping Luo](http://luoping.me/).<br>\nTechnical Report 2021.\n\nThis repository contains the official Pytorch implementation of training & evaluation code and the pretrained models for [SegFormer](https://arxiv.org/abs/2105.15203).\n\nSegFormer is a simple, efficient and powerful semantic segmentation method, as shown in Figure 1.\n\nWe use [MMSegmentation v0.13.0](https://github.com/open-mmlab/mmsegmentation/tree/v0.13.0) as the codebase.\n\n\ud83d\udd25\ud83d\udd25 SegFormer is on [MMSegmentation](https://github.com/open-mmlab/mmsegmentation/tree/master/configs/segformer). \ud83d\udd25\ud83d\udd25 \n\n\n",
      "technique": "Header extraction"
    }
  ]
}