{
  "arxivLinks": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://arxiv.org/abs/1905.02716",
      "https://arxiv.org/abs/1703.06211",
      "https://arxiv.org/abs/1812.02898"
    ],
    "technique": "Regular expression"
  },
  "citation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "```\n@InProceedings{wang2019edvr,\n  author    = {Wang, Xintao and Chan, Kelvin C.K. and Yu, Ke and Dong, Chao and Loy, Chen Change},\n  title     = {EDVR: Video restoration with enhanced deformable convolutional networks},\n  booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition Workshops (CVPRW)},\n  month     = {June},\n  year      = {2019},\n}\n@Article{tian2018tdan,\n  author    = {Tian, Yapeng and Zhang, Yulun and Fu, Yun and Xu, Chenliang},\n  title     = {TDAN: Temporally deformable alignment network for video super-resolution},\n  journal   = {arXiv preprint arXiv:1812.02898},\n  year      = {2018},\n}\n```\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@Article{tian2018tdan,\n  author    = {Tian, Yapeng and Zhang, Yulun and Fu, Yun and Xu, Chenliang},\n  title     = {TDAN: Temporally deformable alignment network for video super-resolution},\n  journal   = {arXiv preprint arXiv:1812.02898},\n  year      = {2018},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        1.0
      ],
      "excerpt": "@InProceedings{wang2019edvr,\n  author    = {Wang, Xintao and Chan, Kelvin C.K. and Yu, Ke and Dong, Chao and Loy, Chen Change},\n  title     = {EDVR: Video restoration with enhanced deformable convolutional networks},\n  booktitle = {The IEEE Conference on Computer Vision and Pattern Recognition Workshops (CVPRW)},\n  month     = {June},\n  year      = {2019},\n}",
      "technique": "Regular expression"
    },
    {
      "confidence": [
        0.9957587253572504,
        0.9931668082721319,
        0.8794813164187303,
        0.8287890934229784
      ],
      "excerpt": "By Xintao Wang, Kelvin C.K. Chan, Ke Yu, Chao Dong, Chen Change Loy \nEDVR won all four tracks in NTIRE 2019 Challenges on Video Restoration and Enhancement (CVPR19 Workshops). \nA unified framework suitable for various video restoration tasks, e.g., super-resolution, deblurring, denoising, etc \nState of the art: Winners in NTIRE 2019 Challenges on Video Restoration and Enhancement \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9102715399223362
      ],
      "excerpt": "[2019-06-12] Add training codes.<br/> \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9268240064709804
      ],
      "excerpt": "[2019-05-28] Release testing codes. \n",
      "technique": "Supervised classification"
    }
  ],
  "codeRepository": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhusiling/EDVR",
    "technique": "GitHub API"
  },
  "dateCreated": {
    "confidence": [
      1.0
    ],
    "excerpt": "2019-06-16T11:16:12Z",
    "technique": "GitHub API"
  },
  "dateModified": {
    "confidence": [
      1.0
    ],
    "excerpt": "2021-09-29T21:18:45Z",
    "technique": "GitHub API"
  },
  "description": [
    {
      "confidence": [
        0.8587343566065896
      ],
      "excerpt": "State of the art: Winners in NTIRE 2019 Challenges on Video Restoration and Enhancement \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8901940642745748,
        0.9583288550504819
      ],
      "excerpt": "We are going to have a presentation in NTIRE 2019 Workshop (Monday, June 17, 2019 - room 104A Long Beach Convention Center, posters: Pacific Arena Ballroom). Welcome to our poster! \nCheck out our CVPR19 work: DNI - Deep Network Interpolation for Continuous Imagery Effect Transition \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.8706199446764952,
        0.9088227580579377
      ],
      "excerpt": "Results and pre-trained models are available in the wiki-Model zoo. \nWe appreciate all contributions. Please refer to mmdetection for contributing guideline. \n",
      "technique": "Supervised classification"
    },
    {
      "confidence": [
        0.9495324059183055
      ],
      "excerpt": "We adopt PEP8 as the preferred code style. We use flake8 as the linter and yapf as the formatter. Please upgrade to the latest yapf (>=0.27.0) and refer to the yapf configuration and flake8 configuration. \n",
      "technique": "Supervised classification"
    }
  ],
  "downloadUrl": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhusiling/EDVR/releases",
    "technique": "GitHub API"
  },
  "forks_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 2,
      "date": "Sun, 12 Dec 2021 20:11:34 GMT"
    },
    "technique": "GitHub API"
  },
  "forks_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhusiling/EDVR/forks",
    "technique": "GitHub API"
  },
  "fullName": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhusiling/EDVR",
    "technique": "GitHub API"
  },
  "hasScriptFile": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "https://raw.githubusercontent.com/zhusiling/EDVR/master/codes/run_scripts.sh",
      "https://raw.githubusercontent.com/zhusiling/EDVR/master/codes/models/modules/DCNv2/make.sh"
    ],
    "technique": "File Exploration"
  },
  "installation": [
    {
      "confidence": [
        1
      ],
      "excerpt": "We use datasets in LDMB format for faster IO speed. Please refer to [wiki](https://github.com/xinntao/EDVR/wiki/Prepare-datasets-in-LMDB-format) for more details.\n\n",
      "technique": "Header extraction"
    },
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3 (Recommend to use [Anaconda](https://www.anaconda.com/download/#linux))\n- [PyTorch >= 1.0](https://pytorch.org/)\n- NVIDIA GPU + [CUDA](https://developer.nvidia.com/cuda-downloads)\n- [Deformable Convolution](https://arxiv.org/abs/1703.06211). We use [Charles Shang](https://github.com/CharlesShang)'s [DCNv2](https://github.com/CharlesShang/DCNv2) implementation. Please first compile it. \n  ```\n  cd ./codes/models/modules/DCNv2\n  bash make.sh\n  ```\n- Python packages: `pip install numpy opencv-python lmdb pyyaml`\n- TensorBoard: \n  - PyTorch >= 1.1: `pip install tb-nightly future`\n  - PyTorch == 1.0: `pip install tensorboardX`\n\n",
      "technique": "Header extraction"
    }
  ],
  "issueTracker": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://api.github.com/repos/zhusiling/EDVR/issues{/number}",
    "technique": "GitHub API"
  },
  "languages": {
    "confidence": [
      1.0
    ],
    "excerpt": [
      "Python",
      "Cuda",
      "C++",
      "C",
      "MATLAB",
      "Shell"
    ],
    "technique": "GitHub API"
  },
  "license": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0"
    },
    "technique": "GitHub API"
  },
  "licenseText": {
    "confidence": [
      1.0
    ],
    "excerpt": "b'BSD 3-Clause License\\n\\nCopyright (c) 2019, Charles Shang\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. Neither the name of the copyright holder nor the names of its\\n   contributors may be used to endorse or promote products derived from\\n   this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.'",
    "technique": "File Exploration"
  },
  "long_title": {
    "confidence": [
      1.0
    ],
    "excerpt": "EDVR [[BasicSR]](https://github.com/xinntao/BasicSR) [[DNI]](https://xinntao.github.io/projects/DNI)",
    "technique": "Regular expression"
  },
  "name": {
    "confidence": [
      1.0
    ],
    "excerpt": "EDVR",
    "technique": "GitHub API"
  },
  "owner": {
    "confidence": [
      1.0
    ],
    "excerpt": "zhusiling",
    "technique": "GitHub API"
  },
  "ownerType": {
    "confidence": [
      1.0
    ],
    "excerpt": "User",
    "technique": "GitHub API"
  },
  "readme_url": {
    "confidence": [
      1.0
    ],
    "excerpt": "https://github.com/zhusiling/EDVR/blob/master/README.md",
    "technique": "GitHub API"
  },
  "requirement": [
    {
      "confidence": [
        1
      ],
      "excerpt": "- Python 3 (Recommend to use [Anaconda](https://www.anaconda.com/download/#linux))\n- [PyTorch >= 1.0](https://pytorch.org/)\n- NVIDIA GPU + [CUDA](https://developer.nvidia.com/cuda-downloads)\n- [Deformable Convolution](https://arxiv.org/abs/1703.06211). We use [Charles Shang](https://github.com/CharlesShang)'s [DCNv2](https://github.com/CharlesShang/DCNv2) implementation. Please first compile it. \n  ```\n  cd ./codes/models/modules/DCNv2\n  bash make.sh\n  ```\n- Python packages: `pip install numpy opencv-python lmdb pyyaml`\n- TensorBoard: \n  - PyTorch >= 1.1: `pip install tb-nightly future`\n  - PyTorch == 1.0: `pip install tensorboardX`\n\n",
      "technique": "Header extraction"
    }
  ],
  "stargazers_count": {
    "confidence": [
      1.0
    ],
    "excerpt": {
      "count": 6,
      "date": "Sun, 12 Dec 2021 20:11:34 GMT"
    },
    "technique": "GitHub API"
  },
  "usage": [
    {
      "confidence": [
        1
      ],
      "excerpt": "Please see [wiki](https://github.com/xinntao/EDVR/wiki/Testing-and-Training) for the basic usage, *i.e.,* training and testing.\n",
      "technique": "Header extraction"
    }
  ]
}